#!wing
#!version=8.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['book/Makefile',
                                     'book/direct-gamma.png',
                                     'homework_6/plot_B1_path_beta4.5.png',
                                     'book/markov-zeta-1-6.png',
                                     'homework_6/plot_C1_beta20.0.png',
                                     'book/markov-pi.png',
                                     'book/catch.hpp',
                                     'book/permutation-test.py',
                                     'lecture_1/exerciseB.py',
                                     'book/direct-surface.png',
                                     'homework_6/plot_B3_beta20.0.png',
                                     'book/out.txt',
                                     'book/histogram.png',
                                     'homework_6/plot_C1_path_beta20.0.png',
                                     'book/enumerate-ising.cpp',
                                     'homework_6/plot_B2_beta0.1.png',
                                     '.gitignore',
                                     'lecture_6/plot-path_slice.png',
                                     'homework_6/plot_B1_beta20.0.txt',
                                     'lecture_5/sine.py',
                                     'homework_6/plot_B1_path_beta0.1.png',
                                     'book/transfer.m',
                                     'book/test-gray.cpp',
                                     'homework_6/plot_B1_beta20.0.png',
                                     'homework_6/plot_B1_path_beta20.0.png',
                                     'homework_6/plot_B3_path_beta20.0.png',
                                     'book/tests.cpp',
                                     'book/harmonic.png',
                                     'book/gray.hpp',
                                     'book/harmonic-density.png',
                                     'homework_6/plot_B1_path_beta1.png',
                                     'book/README.md',
                                     'lecture_1/exerciseC.py',
                                     'lecture_6/trivial_free_path.png',
                                     'book/nbr.hpp',
                                     'homework_6/plot_B2_beta1.png',
                                     'homework_6/plot_C2_beta20.0.png',
                                     'homework_6/plot_B1_beta1.txt',
                                     'lecture_1/exerciseC3.py',
                                     'book/test-nbr.cpp',
                                     'lecture_5/sine.png',
                                     'lecture_1/exerciseC1.py',
                                     'homework_6/plot_B1_beta4.5.txt',
                                     'book/template.py',
                                     'book/matrix-square.png',
                                     'homework_6/plot_B2_beta4.5.png',
                                     'lecture_5/harmonic.png',
                                     'plot_A0_0.png',
                                     'book/poeschl-teller.png',
                                     'book/matrix-square-check.png',
                                     'book/markov-zeta-0-8.png',
                                     'plot_A1_1.png',
                                     'book/.depend',
                                     'book/enumerate-ising.hpp',
                                     'homework_6/plot_B2_beta20.0.png',
                                     'homework_6/plot_B1_beta0.1.txt'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('book/binomialconvolution.py'),
                  loc('book/boxmuller.py'),
                  loc('book/direct-gamma.py'),
                  loc('book/direct-plot.py'),
                  loc('book/direct.gamma-zeta.py'),
                  loc('book/direct.py'),
                  loc('book/directDisksAny.py'),
                  loc('book/large-markov.py'),
                  loc('book/levy-convolution.py'),
                  loc('book/markov-pi.py'),
                  loc('book/markov-zeta.py'),
                  loc('book/markovdiscretepebble.py'),
                  loc('book/naivegauss.py'),
                  loc('book/permutation-histogram.py'),
                  loc('book/permutation.py'),
                  loc('book/smac.py'),
                  loc('book/smacfiletoken.py'),
                  loc('book/sphere-test.py'),
                  loc('book/template.py'),
                  loc('lecture_1/direct_pi.py'),
                  loc('lecture_1/direct_pi_multirun.py'),
                  loc('lecture_1/markov_pi.py'),
                  loc('lecture_1/markov_pi_multirun.py'),
                  loc('lecture_1/pebble_basic.py'),
                  loc('lecture_1/pebble_basic_inhomogeneous.py'),
                  loc('README.md')]
proj.file-type = 'normal'
proj.launch-config = {loc('book/direct-gamma.py'): ('project',
        ('100000',
         '')),
                      loc('book/ising.py'): ('project',
        ('-m 6 -n 6 -p 100000',
         '')),
                      loc('book/matrix-square-check.py'): ('project',
        ('--show --beta 0.1',
         '')),
                      loc('book/matrix-square.py'): ('project',
        ('--N 1 --show',
         '')),
                      loc('book/poeschl-teller.py'): ('project',
        ('--show',
         '')),
                      loc('book/poschl-teller.py'): ('project',
        ('--show',
         '')),
                      loc('book/template.py'): ('project',
        ('--show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('book/direct-gamma.py'): ['100000',
        '10000',
        '10000 --N 1 2 3 4',
        '10000000',
        '1000'],
                         loc('book/ising.py'): ['-m 6 -n 6 -p 100000',
        '-m 6 -n 6 -9 100000',
        '-m 6 -n 6 -t 1000000',
        '-m 6 -n 6',
        '-m 4 -n 4',
        '-m 2 -n 2',
        '--help'],
                         loc('book/matrix-square-check.py'): ['--show --beta 0.1',
        '--show --beta 0.2',
        '--show beta 0.2',
        '--show'],
                         loc('book/matrix-square.py'): ['--N 1 --show',
        '--rows 2 --cols 2 --show',
        '--N 4 --show',
        '--N 3 --show',
        '--N 2 --show',
        '--N 2',
        '--N 1',
        '--plot foo.jpg',
        '--plot foo',
        '--show --rows 2 --cols 1',
        '--show',
        '--rows 2 --cols 2',
        '--help',
        '--show --beta 0.001',
        '--beta 5'],
                         loc('book/poeschl-teller.py'): ['--show',
        '--help'],
                         loc('book/poschl-teller.py'): ['--show'],
                         loc('book/template.py'): ['--show',
        '-h']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (6,),
        (15,),
        (24,)],
                                 'selected-nodes': [(28,)],
                                 'top-node': (0,
        3)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('book/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('book/direct-gamma.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('book/direct-gamma.py'),
        'bincenters')]],
                                      'top-node': [('generic attribute',
        loc('book/direct-gamma.py'),
        'args')]}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'extract_points',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'random.',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ["'foo'.title()\n"]},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('README.md'),
        {'attrib-starts': [],
         'code-line': '&nbsp;|&nbsp;|levy_harmonic_path.py||Simple Lévy path\r\n',
         'first-line': 115,
         'folded-linenos': [],
         'sel-line': 132,
         'sel-line-start': 6238,
         'selection_end': 6292,
         'selection_start': 6292,
         'zoom': 0},
        1650850494.0107539],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '-|boxmuller.py|Test for Box Muller algorithm\r\n',
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 227,
          'sel-line-start': 10596,
          'selection_end': 10640,
          'selection_start': 10640,
          'zoom': 0},
         1650850583.1902902],
        [loc('book/boxmuller.py'),
         {'attrib-starts': [],
          'code-line': '# Copyright (C) 2015-2012 Greenweaves Software Limited\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 23,
          'selection_start': 23,
          'zoom': 0},
         1650852432.4647195],
        [loc('book/smac.py'),
         {'attrib-starts': [],
          'code-line': 'class BoxMuller:\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 17,
          'sel-line-start': 719,
          'selection_end': 734,
          'selection_start': 725,
          'zoom': 0},
         1650852436.7878654],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '-|boxmuller.py|Test for Box Muller algorithm\r\n',
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 227,
          'sel-line-start': 10596,
          'selection_end': 10640,
          'selection_start': 10640,
          'zoom': 0},
         1650852445.990733],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '1|smac.py|Useful functions: BoxMuller, CircleThrowing, and SphereGenerator\r\n',
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 215,
          'sel-line-start': 9937,
          'selection_end': 10011,
          'selection_start': 9947,
          'zoom': 0},
         1650852460.615183],
        [loc('book/smac.py'),
         {'attrib-starts': [('BoxMuller|0|',
                             22),
                            ('BoxMuller|0|.box_muller|0|',
                             28)],
          'code-line': '        y        *= upsilon2\r\n',
          'first-line': 18,
          'folded-linenos': [],
          'sel-line': 37,
          'sel-line-start': 1311,
          'selection_end': 1331,
          'selection_start': 1331,
          'zoom': 0},
         1650852796.975127],
        [loc('book/boxmuller.py'),
         {'attrib-starts': [],
          'code-line': '# Copyright (C) 2015-2012 Greenweaves Software Limited\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 23,
          'selection_start': 23,
          'zoom': 0},
         1650852817.8234599],
        [loc('book/smac.py'),
         {'attrib-starts': [('BoxMuller|0|',
                             22),
                            ('BoxMuller|0|.box_muller|0|',
                             28)],
          'code-line': '        return (x*upsilon2,y*upsilon2)\r\n',
          'first-line': 19,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1281,
          'selection_end': 1282,
          'selection_start': 1282,
          'zoom': 0},
         1650852944.5676079],
        [loc('book/boxmuller.py'),
         {'attrib-starts': [],
          'code-line': '    gauss = BoxMuller()\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 20,
          'sel-line-start': 830,
          'selection_end': 840,
          'selection_start': 840,
          'zoom': 0},
         1650853010.3766007],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '1|smac.py|Useful functions: BoxMuller, CircleThrowing, and SphereGenerator\r\n',
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 215,
          'sel-line-start': 9937,
          'selection_end': 10011,
          'selection_start': 9947,
          'zoom': 0},
         1650853016.9053586],
        [loc('book/smac.py'),
         {'attrib-starts': [('BoxMuller|0|',
                             22),
                            ('BoxMuller|0|.box_muller|0|',
                             28)],
          'code-line': '        return (x*upsilon2,y*upsilon2)\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1281,
          'selection_end': 1282,
          'selection_start': 1282,
          'zoom': 0},
         1650853022.388306],
        [loc('book/boxmuller.py'),
         {'attrib-starts': [],
          'code-line': "''' Test for smac.py'''\r\n",
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 15,
          'sel-line-start': 694,
          'selection_end': 714,
          'selection_start': 699,
          'zoom': 0},
         1650853062.7969444],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '-|boxmuller.py|Test for Box Muller algorithm\r\n',
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 227,
          'sel-line-start': 10596,
          'selection_end': 10640,
          'selection_start': 10611,
          'zoom': 0},
         1650853073.8278332],
        [loc('book/boxmuller.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 3,
          'folded-linenos': [],
          'sel-line': 16,
          'sel-line-start': 732,
          'selection_end': 732,
          'selection_start': 732,
          'zoom': 0},
         1650853095.6860082],
        [loc('book/smac.py'),
         {'attrib-starts': [('BoxMuller|0|',
                             22),
                            ('BoxMuller|0|.box_muller|0|',
                             28)],
          'code-line': '        return (x*upsilon2,y*upsilon2)\r\n',
          'first-line': 24,
          'folded-linenos': [],
          'sel-line': 36,
          'sel-line-start': 1281,
          'selection_end': 1282,
          'selection_start': 1282,
          'zoom': 0},
         1650853124.6839051],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '-|boxmuller.py|Test for Box Muller algorithm\r\n',
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 227,
          'sel-line-start': 10596,
          'selection_end': 10640,
          'selection_start': 10611,
          'zoom': 0},
         1650853140.2446308],
        [loc('book/smac.py'),
         {'attrib-starts': [('SphereGenerator|0|',
                             65)],
          'code-line': '    def extract_points(self,xs,n):\r\n',
          'first-line': 81,
          'folded-linenos': [],
          'sel-line': 90,
          'sel-line-start': 2853,
          'selection_end': 2875,
          'selection_start': 2861,
          'zoom': 0},
         1650853497.252651],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': '-|boxmuller.py|Test for Box Muller algorithm\r\n',
          'first-line': 209,
          'folded-linenos': [],
          'sel-line': 227,
          'sel-line-start': 10596,
          'selection_end': 10640,
          'selection_start': 10611,
          'zoom': 0},
         1650853503.6428676],
        [loc('book/smac.py'),
         {'attrib-starts': [('SphereGenerator|0|',
                             65),
                            ('SphereGenerator|0|.extract_points|0|',
                             92)],
          'code-line': "        '''Convert a list of scalars to a list of n-dimenional vectors'''\r\n",
          'first-line': 81,
          'folded-linenos': [],
          'sel-line': 93,
          'sel-line-start': 2933,
          'selection_end': 3003,
          'selection_start': 3003,
          'zoom': 0},
         1650853627.072254]],
        20),
        'current-loc': loc('book/smac.py'),
        'editor-state-list': [(loc('book/boxmuller.py'),
                               {'attrib-starts': [],
                                'code-line': '\r\n',
                                'first-line': 3,
                                'folded-linenos': [],
                                'sel-line': 16,
                                'sel-line-start': 732,
                                'selection_end': 732,
                                'selection_start': 732,
                                'zoom': 0}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': '-|boxmuller.py|Test for Box Muller algorithm\r\n',
                                'first-line': 209,
                                'folded-linenos': [],
                                'sel-line': 227,
                                'sel-line-start': 10596,
                                'selection_end': 10640,
                                'selection_start': 10611,
                                'zoom': 0}),
                              (loc('book/smac.py'),
                               {'attrib-starts': [],
                                'code-line': 'from math   import log, pi, sqrt\r\n',
                                'first-line': 6,
                                'folded-linenos': [],
                                'sel-line': 19,
                                'sel-line-start': 774,
                                'selection_end': 786,
                                'selection_start': 786,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('book/boxmuller.py'),
         loc('README.md'),
         loc('book/smac.py')]),
                               'open_files': ['book/boxmuller.py',
        'README.md',
        'book/smac.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1650853507.6036892),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1650759250.800828),
                 'user_data': {}},
        'window-alloc': (1,
                         9,
                         1362,
                         749)}]}
guimgr.recent-documents = [loc('book/smac.py'),
                           loc('README.md'),
                           loc('book/boxmuller.py')]
guimgr.visual-state = {loc('../../../Anaconda3/lib/argparse.py'): {'attrib-starts': [('_ActionsContainer',
        1215),
        ('_ActionsContainer.add_argument',
         1298)],
        'first-line': 1329,
        'folded-linenos': [],
        'sel-line': 1334,
        'sel-line-start': 47090,
        'selection_end': 47090,
        'selection_start': 47090,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args',
        126),
        ('_process_plot_var_args.set_lineprops',
         178)],
        'first-line': 164,
        'folded-linenos': [],
        'sel-line': 183,
        'sel-line-start': 5478,
        'selection_end': 5478,
        'selection_start': 5478,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/unittest/case.py'): {'attrib-starts': [('TestCase',
        340),
        ('TestCase._baseAssertEqual',
         816)],
        'first-line': 809,
        'folded-linenos': [],
        'sel-line': 821,
        'sel-line-start': 31048,
        'selection_end': 31048,
        'selection_start': 31048,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        94),
        ('Artist|0|.update|0|',
         1045)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 1038,
        'folded-linenos': [],
        'sel-line': 1063,
        'sel-line-start': 36297,
        'selection_end': 36297,
        'selection_start': 36297,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        211),
        ('_process_plot_var_args|0|.__call__|0|',
         241)],
        'code-line': '                raise TypeError("{} got an unexpected keyword argument {!r}"\r\n',
        'first-line': 221,
        'folded-linenos': [],
        'sel-line': 246,
        'sel-line-start': 8743,
        'selection_end': 8743,
        'selection_start': 8743,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/lines.py'): {'attrib-starts': [('_get_dash_pattern|0|',
        30)],
        'code-line': '        dsum = sum(dashes)\r\n',
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1716,
        'selection_end': 1716,
        'selection_start': 1716,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('hist|0|',
        2584)],
        'code-line': '    return gca().hist(\r\n',
        'first-line': 2575,
        'folded-linenos': [],
        'sel-line': 2589,
        'sel-line-start': 89190,
        'selection_end': 89190,
        'selection_start': 89190,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/sre_parse.py'): {'attrib-starts': [('parse|0|',
        936)],
        'code-line': '        raise source.error("unbalanced parenthesis")\r\n',
        'first-line': 936,
        'folded-linenos': [],
        'sel-line': 961,
        'sel-line-start': 37401,
        'selection_end': 37401,
        'selection_start': 37401,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        117),
        ('_process_plot_var_args|0|._xy_from_xy|0|',
         240)],
        'code-line': '                             "have shapes {} and {}".format(x.shape, y.shape))\n',
        'first-line': 264,
        'folded-linenos': [],
        'sel-line': 269,
        'sel-line-start': 10054,
        'selection_end': 10054,
        'selection_start': 10054,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/cbook/__init__.py'): {'attrib-starts': [('_lock_path|0|',
        1855)],
        'code-line': '    path = Path(path)\n',
        'first-line': 1866,
        'folded-linenos': [],
        'sel-line': 1870,
        'sel-line-start': 59297,
        'selection_end': 59318,
        'selection_start': 59318,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/mathtext.py'): {'attrib-starts': [('Parser|0|',
        2253),
        ('Parser|0|.parse|0|',
         2586)],
        'code-line': '                                        str(err)]))\n',
        'first-line': 2582,
        'folded-linenos': [],
        'sel-line': 2602,
        'sel-line-start': 89206,
        'selection_end': 89206,
        'selection_start': 89206,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/core/__init__.py'): {'attrib-starts': [],
        'code-line': '    raise ImportError(msg)\n',
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 46,
        'sel-line-start': 1673,
        'selection_end': 1673,
        'selection_start': 1673,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('meshgrid|0|',
        4083)],
        'code-line': '                        % (list(kwargs)[0],))\n',
        'first-line': 4175,
        'folded-linenos': [],
        'sel-line': 4195,
        'sel-line-start': 136309,
        'selection_end': 136309,
        'selection_start': 136309,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '&nbsp;|&nbsp;|levy_harmonic_path.py||Simple Lévy path\r\n',
        'first-line': 115,
        'folded-linenos': [],
        'sel-line': 132,
        'sel-line-start': 6238,
        'selection_end': 6292,
        'selection_start': 6292,
        'zoom': 0},
                       loc('book/README.md'): {'attrib-starts': [],
        'code-line': '|harmonic_density.py|Exercise 3.2: determine density matrix\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 40,
        'sel-line-start': 2096,
        'selection_end': 2155,
        'selection_start': 2155,
        'zoom': 0},
                       loc('book/binomialconvolution.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 579,
        'selection_end': 579,
        'selection_start': 579,
        'zoom': 0},
                       loc('book/boxmuller.py'): {'attrib-starts': [],
        'code-line': '# boxMuller.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 703,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/direct-gamma.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 1137,
        'selection_end': 1182,
        'selection_start': 1182,
        'zoom': 0},
                       loc('book/enumerate_ising.py'): {'attrib-starts': [],
        'code-line': 'from gray import Gray\r\n',
        'first-line': 16,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 695,
        'selection_end': 716,
        'selection_start': 712,
        'zoom': 0},
                       loc('book/gray.py'): {'attrib-starts': [('Gray|0|',
        42),
        ('Gray|0|.__init__|0|',
         43)],
        'code-line': '        self.N        = N\r\n',
        'first-line': 41,
        'folded-linenos': [],
        'sel-line': 44,
        'sel-line-start': 1281,
        'selection_end': 1303,
        'selection_start': 1303,
        'zoom': 0},
                       loc('book/harmonic-density.png'): {'attrib-starts': [],
        'code-line': 'Â\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/harmonic_density.py'): {'attrib-starts': [],
        'code-line': '    plt.pcolor(X,Y,density(X,Y))\r\n',
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 62,
        'sel-line-start': 2016,
        'selection_end': 2187,
        'selection_start': 2019,
        'zoom': 0},
                       loc('book/harmonic_wavefunction.py'): {'attrib-starts': [],
        'code-line': 'step     = L / n_steps\r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 922,
        'selection_end': 944,
        'selection_start': 922,
        'zoom': 0},
                       loc('book/ising-stats.py'): {'attrib-starts': [('thermo|0|',
        17)],
        'code-line': '    Emin   = min(Es)\r\n',
        'first-line': 40,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 752,
        'selection_end': 752,
        'selection_start': 752,
        'zoom': 0},
                       loc('book/ising.csv'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/ising.py'): {'attrib-starts': [],
        'code-line': '        gray      = Gray(args.m*args.n,progress=args.progress)\r\n',
        'first-line': 15,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1303,
        'selection_end': 1350,
        'selection_start': 1350,
        'zoom': 0},
                       loc('book/levy-convolution.py'): {'attrib-starts': [('levy',
        19)],
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1254,
        'selection_end': 1317,
        'selection_start': 1317,
        'zoom': 0},
                       loc('book/markov-pi.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/markov-pi.py'): {'attrib-starts': [],
        'first-line': 58,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 276,
        'selection_end': 282,
        'selection_start': 282,
        'zoom': 0},
                       loc('book/markov-zeta-1-6.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/markov-zeta.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 689,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/matrix-square-check.py'): {'attrib-starts': [],
        'code-line': '# Cache some values to speec up calculation\r\n',
        'first-line': 56,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 848,
        'selection_end': 883,
        'selection_start': 883,
        'zoom': 0},
                       loc('book/matrix-square.py'): {'attrib-starts': [],
        'code-line': '         beta *= 2      \r\n',
        'first-line': 93,
        'folded-linenos': [],
        'sel-line': 108,
        'sel-line-start': 4586,
        'selection_end': 4779,
        'selection_start': 4587,
        'zoom': 0},
                       loc('book/naivegauss.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 14,
        'selection_end': 68,
        'selection_start': 61,
        'zoom': 0},
                       loc('book/permutation-histogram.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 50,
        'selection_start': 50,
        'zoom': 0},
                       loc('book/permutation-test.py'): {'attrib-starts': [],
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 43,
        'sel-line-start': 1310,
        'selection_end': 1375,
        'selection_start': 1375,
        'zoom': 0},
                       loc('book/permutation.py'): {'attrib-starts': [('ran_perm',
        21)],
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 783,
        'selection_end': 808,
        'selection_start': 808,
        'zoom': 0},
                       loc('book/poeschl-teller.py'): {'attrib-starts': [],
        'code-line': '    for i in range(6):\r\n',
        'first-line': 97,
        'folded-linenos': [],
        'sel-line': 124,
        'sel-line-start': 4750,
        'selection_end': 4770,
        'selection_start': 4770,
        'zoom': 0},
                       loc('book/smac.py'): {'attrib-starts': [('SphereGenerator|0|',
        58),
        ('SphereGenerator|0|.direct_sphere|0|',
         68)],
        'code-line': '\r\n',
        'first-line': 89,
        'folded-linenos': [],
        'sel-line': 73,
        'sel-line-start': 2405,
        'selection_end': 2405,
        'selection_start': 2405,
        'zoom': 0},
                       loc('book/template.py'): {'attrib-starts': [],
        'code-line': '# template.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('exam/Q1.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_1/exerciseB.py'): {'attrib-starts': [],
        'code-line': 'import random, math, pylab\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_1/exerciseC.py'): {'attrib-starts': [],
        'code-line': 'import random, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_1/exerciseC1.py'): {'attrib-starts': [],
        'code-line': 'import random, pylab, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_1/exerciseC3.py'): {'attrib-starts': [],
        'code-line': 'import random, pylab, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_6/plot_B1_beta0.1.txt'): {'attrib-starts': [],
        'code-line': '-6.307253827036236\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_1/markov_pi.py'): {'attrib-starts': [],
        'code-line': 'import random, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_5/matrix_square_harmonic.py'): {'attrib-starts': [],
        'code-line': '    rho = numpy.dot(rho, rho)\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 866,
        'selection_end': 910,
        'selection_start': 870,
        'zoom': 0},
                       loc('lecture_6/continuous_random_walk.py'): {'attrib-starts': [],
        'code-line': 'Construct path using a simple random walk (endpoint is not held fixed)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 75,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_free_path.py'): {'attrib-starts': [],
        'code-line': 'Simple eimplementation of Lévy Free Path Algorithm\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 36,
        'selection_start': 36,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path.py'): {'attrib-starts': [],
        'code-line': 'Simple Lévy path\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 22,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path_3D.py'): {'attrib-starts': [],
        'code-line': 'Lévy flight in 3D\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 23,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path_movie.py'): {'attrib-starts': [],
        'code-line': 'dtau         = beta / N\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 173,
        'selection_end': 196,
        'selection_start': 196,
        'zoom': 0},
                       loc('lecture_6/naive_harmonic_path.py'): {'attrib-starts': [],
        'code-line': 'Construct path using direct sanpling (inefficient)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 55,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/naive_path_slice.py'): {'attrib-starts': [],
        'code-line': 'sigma = sqrt(1 / (1/dtau_prime+1/dtau_dprime))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 878,
        'selection_end': 893,
        'selection_start': 893,
        'zoom': 0},
                       loc('lecture_6/naive_path_slice_movie.py'): {'attrib-starts': [],
        'code-line': '    data_hist.append(xk)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 1149,
        'selection_end': 1173,
        'selection_start': 1173,
        'zoom': 0},
                       loc('lecture_6/trivial_free_path.py'): {'attrib-starts': [],
        'code-line': '                                 #Lévy free path see the same sequence of random numbers\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 563,
        'selection_end': 631,
        'selection_start': 631,
        'zoom': 0},
                       loc('lecture_8/energy_ising.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 199,
        'selection_end': 231,
        'selection_start': 231,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising.py'): {'attrib-starts': [],
        'code-line': '    E        += 2 * h * S[k - 1] \r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 38,
        'sel-line-start': 1044,
        'selection_end': 1070,
        'selection_start': 1070,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising_mod.py'): {'attrib-starts': [],
        'first-line': 5,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 460,
        'selection_end': 473,
        'selection_start': 473,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising_movie.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1272,
        'selection_end': 1281,
        'selection_start': 1281,
        'zoom': 0},
                       loc('lecture_8/spin_config_0000.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_8/thermo_ising.py'): {'attrib-starts': [],
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 592,
        'selection_end': 624,
        'selection_start': 622,
        'zoom': 0},
                       loc('lecture_8/thermo_ising_movie.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('levy-convolution.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 400,
        'selection_end': 464,
        'selection_start': 464,
        'zoom': 0},
                       loc('tutorial_6/naive_boson_trap.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 170,
        'selection_end': 170,
        'selection_start': 170,
        'zoom': 0},
                       loc('tutorial_6/naive_single_particle.py'): {'attrib-starts': [],
        'code-line': '    E,(E_x,E_y,E_z) = States[k]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 175,
        'selection_end': 197,
        'selection_start': 197,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
search.replace-history = ['poeschl_teller']
search.search-history = ['extract_points',
                         'BoxMuller',
                         'pt']
