#!wing
#!version=10.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['tutorial_1/pebble_basic_movie_03.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_31.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_3.0.png',
                                     'lecture_3/plot-direct_pins-configuration.png',
                                     'book/permutation-test.py',
                                     'tutorial_1/pebble_dual_movie_epsilon_30.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_37.0.png',
                                     'tutorial_1/pebble_basic_movie_04.png',
                                     'homework_6/plot_B2_beta4.5.png',
                                     'lecture_1/exerciseC1.py',
                                     'lecture_10/histo_direct_gamma_average.png',
                                     'lecture_2/direct_disks_box_movie',
                                     'lecture_2/event_disks_box_b3.png',
                                     'tutorial_2/direct_disks_any.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_14.0.png',
                                     'book/configs',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_5.653395028455652.png',
                                     'homework_6/plot_B1_path_beta0.1.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_29.0.png',
                                     'tutorial_1/pebble_basic_movie_08.png',
                                     'book/markov-pi.png',
                                     'tutorial_2/random_sequential_discrete_movie',
                                     'book/temp.csv',
                                     'homework_6/plot_B1_beta1.txt',
                                     'book/.depend',
                                     'lecture_2/event_disks_box_movie',
                                     'homework_6/plot_C2_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_19.0.png',
                                     'homework_7/desktop.ini',
                                     'tutorial_1/3x3_pebble_run_09.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_38.0.png',
                                     'tutorial_1/3x3_pebble_run_05.png',
                                     'book/md000113.npz',
                                     'tutorial_1/pebble_dual_movie_epsilon_22.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_18.0.png',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.30.png',
                                     'book/direct-gamma.png',
                                     'book/logs',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_6.01205449481921.png',
                                     'book/test-gray.cpp',
                                     'tutorial_1/pebble_dual_movie_epsilon_53.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_27.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_20_energy_3.9550838760963827.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_4.0.png',
                                     'homework_9/plot_tsp_direct_sampling_N_10_energy_2.777140099483052.png',
                                     'homework_6/plot_B1_beta20.0.txt',
                                     'tutorial_1/pebble_dual_movie_epsilon_51.0.png',
                                     'lecture_10/histo_direct_gamma_average_rescaled.png',
                                     'homework_6/plot_B2_beta20.0.png',
                                     'book/markov-disks100M.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_21.0.png',
                                     'lecture_5/sine.py',
                                     'tutorial_1/pebble_dual_movie_epsilon_1.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_41.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_48.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_55.0.png',
                                     'homework_6/plot_B2_beta1.png',
                                     'book/histogram.png',
                                     'homework_1/markov_sampling_rms_deviation.png',
                                     'book/markov-disks.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_49.0.png',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.25.png',
                                     'book/markov-zeta-0-8.png',
                                     'plot_A0_0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_10.0.png',
                                     'homework_6/plot_B3_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_39.0.png',
                                     'tutorial_1/pebble_basic_movie_05.png',
                                     'tutorial_1/pebble_basic_movie_00.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_58.0.png',
                                     'book/Makefile',
                                     'tutorial_1/3x3_pebble_run_01.png',
                                     'book/md000112.npz',
                                     'lecture_1/direct_sampling_rms_deviation.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_50.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_8.0.png',
                                     'lecture_8/plot_local_av_magnetization_L8.png',
                                     'lecture_1/exerciseC.py',
                                     'tutorial_1/pebble_dual_movie_epsilon_25.0.png',
                                     'book/matrix-square.png',
                                     'lecture_5/sine.png',
                                     'homework_7/A2.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_52.0.png',
                                     'tutorial_1/3x3_pebble_run_04.png',
                                     'book/test.png',
                                     'tutorial_1/3x3_pebble_run_02.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_35.0.png',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.60.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_23.0.png',
                                     'book/enumerate-ising.cpp',
                                     'plot_A1_1.png',
                                     'book/md000189.npz',
                                     'book/direct-surface.png',
                                     'book/tests.cpp',
                                     'homework_7/A1.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_54.0.png',
                                     'homework_6/plot_B1_beta0.1.txt',
                                     'tutorial_1/pebble_dual_movie_epsilon_16.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_32.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_42.0.png',
                                     'book/test-nbr.cpp',
                                     'homework_6/plot_B1_beta20.0.png',
                                     'tutorial_1/pebble_basic_movie_02.png',
                                     'book/direct-disks.png',
                                     'tutorial_3/plot-direct_pins_density.png',
                                     'homework_6/plot_C1_beta20.0.png',
                                     'book/template.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_24.0.png',
                                     'homework_6/plot_B1_beta4.5.txt',
                                     'book/catch.hpp',
                                     'book/md000111.npz',
                                     'homework_9/plot_tsp_simulated_annealing_N_100_energy_7.993864274585397.png',
                                     'homework_5/plot_square_anharmonic_beta_4.0.png',
                                     'homework_7/data_boson_configuration.txt',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.897286348519634.png',
                                     'book/pair-time.png',
                                     'lecture_5/harmonic.png',
                                     'homework_6/plot_B1_path_beta4.5.png',
                                     'homework_6/plot_B2_beta0.1.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_44.0.png',
                                     'tutorial_1/pebble_basic_movie_09.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_57.0.png',
                                     'homework_7/Xpositions.png',
                                     'homework_7/plot_boson_configuration_0.7.png',
                                     'book/harmonic-density.png',
                                     'book/template.py',
                                     'tutorial_1/3x3_pebble_run_03.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_9.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N10_energy2.777140099483052.png',
                                     'book/T100000000.csv',
                                     'tutorial_1/pebble_dual_movie_epsilon_34.0.png',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_6.0709601924057255.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_0.0.png',
                                     'tutorial_1/pebble_basic_movie_06.png',
                                     'lecture_6/plot-path_slice.png',
                                     'homework_6/plot_B1_path_beta1.png',
                                     'lecture_6/trivial_free_path.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_45.0.png',
                                     'lecture_1/exerciseC3.py',
                                     'homework_7/data_boson_configuration_anisotropic.txt',
                                     'tutorial_1/pebble_dual_movie_epsilon_11.0.png',
                                     'homework_6/plot_B1_path_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_12.0.png',
                                     'book/transfer.m',
                                     'homework_7/A3.png',
                                     'book/test1.png',
                                     'book/enumerate-ising.hpp',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.10.png',
                                     'lecture_2/markov_disks_box_movie',
                                     'homework_7/plot_boson_configuration_2.5.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_36.0.png',
                                     'book/md',
                                     'tutorial_1/pebble_dual_movie_epsilon_7.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_28.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_40.0.png',
                                     'book/hist-plot.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_43.0.png',
                                     'tutorial_1/pebble_basic_movie_07.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_47.0.png',
                                     'book/README.md',
                                     'lecture_1/exerciseB.py',
                                     'tutorial_1/pebble_basic_movie_01.png',
                                     'book/md000188.npz',
                                     'book/harmonic.png',
                                     'lecture_2/direct_disks_box_multirun_b1.png',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_5.8750943609396415.png',
                                     'book/gray.hpp',
                                     'book/mag.csv',
                                     'book/md.png',
                                     'book/matrix-square-check.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.887650445053426.png',
                                     'book/nbr.hpp',
                                     'book/imgs',
                                     'lecture_8/data_dos_L6.txt',
                                     'book/foo.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_10_energy_2.777140099483052.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_5.0.png',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_5.796142535194058.png',
                                     'tutorial_1/3x3_pebble_run_00.png',
                                     'book/direct.gamma-zeta.py',
                                     'tutorial_1/3x3_pebble_run_07.png',
                                     'homework_7/A2A.png',
                                     'book/md-viz.png',
                                     'book/md-plot.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_17.0.png',
                                     'book/binomialconvolution.png',
                                     'homework_7/plot_boson_configuration_0.04.png',
                                     'book/md000190.npz',
                                     'tutorial_1/pebble_dual_movie_epsilon_33.0.png',
                                     'lecture_8/plot_cluster_av_magnetization_L12.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_6.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_46.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_59.0.png',
                                     'book/sphere-test.py',
                                     'book/boxmuller.py',
                                     'lecture_3/plot-direct_pins_noreject.png',
                                     'book/check.npz',
                                     'tutorial_1/pebble_dual_movie_epsilon_15.0.png',
                                     'book/ising',
                                     'tutorial_1/pebble_dual_movie_epsilon_13.0.png',
                                     'book/poeschl-teller.png',
                                     'tutorial_1/3x3_pebble_run_08.png',
                                     'homework_6/plot_B3_path_beta20.0.png',
                                     'homework_5/data_anharmonic_matrixsquaring_beta_4.0.dat',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.886213818636096.png',
                                     'homework_9/plot_tsp_direct_sampling_N_10_energy_2.7771400994830526.png',
                                     'book/check.csv',
                                     'homework_6/plot_C1_path_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_26.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_56.0.png',
                                     'book/spheres2.png',
                                     'book/markov-zeta-1-6.png',
                                     'book/issue18.png',
                                     'book/ising.csv',
                                     'tutorial_1/3x3_pebble_run_06.png',
                                     '.gitignore',
                                     'tutorial_1/pebble_dual_movie_epsilon_2.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.9150180300816.png',
                                     'book/out.txt'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('book/binomialconvolution.py'),
                  loc('book/direct-gamma.py'),
                  loc('book/direct-plot.py'),
                  loc('book/direct.py'),
                  loc('book/directDisksAny.py'),
                  loc('book/large-markov.py'),
                  loc('book/levy-convolution.py'),
                  loc('book/markov-pi.py'),
                  loc('book/markov-zeta.py'),
                  loc('book/markovdiscretepebble.py'),
                  loc('book/naivegauss.py'),
                  loc('book/permutation-histogram.py'),
                  loc('book/permutation.py'),
                  loc('book/smac.py'),
                  loc('book/smacfiletoken.py'),
                  loc('book/template.py'),
                  loc('lecture_1/direct_pi.py'),
                  loc('lecture_1/direct_pi_multirun.py'),
                  loc('lecture_1/markov_pi.py'),
                  loc('lecture_1/markov_pi_multirun.py'),
                  loc('lecture_1/pebble_basic.py'),
                  loc('lecture_1/pebble_basic_inhomogeneous.py'),
                  loc('README.md')]
proj.file-type = 'normal'
proj.launch-config = {loc('book/direct-disks.py'): ('project',
        ('--show --plot test --sigma 0.03125 ',
         '')),
                      loc('book/direct-gamma.py'): ('project',
        ('100000',
         '')),
                      loc('book/hist-plot.py'): ('project',
        ('--show',
         '')),
                      loc('book/ising.py'): ('project',
        ('-m 4 -n 4 --trace',
         '')),
                      loc('book/markov-disks.py'): ('project',
        ('--show   --N 100000 --frequency 1000 --periodic --sigma 0.015 --Disks 256 --plot test256 ',
         '')),
                      loc('book/matrix-square-check.py'): ('project',
        ('--show --beta 0.1',
         '')),
                      loc('book/matrix-square.py'): ('project',
        ('--N 1 --show',
         '')),
                      loc('book/md-plot.py'): ('project',
        ('--show --input md\\check.csv',
         '')),
                      loc('book/md-viz.py'): ('project',
        ('md000575.npz --show',
         '')),
                      loc('book/md.py'): ('project',
        ('--N 1000000 --n 10 --sigma 0.001',
         '')),
                      loc('book/pair-time.py'): ('project',
        ('--show',
         '')),
                      loc('book/poeschl-teller.py'): ('project',
        ('--show',
         '')),
                      loc('book/poschl-teller.py'): ('project',
        ('--show',
         '')),
                      loc('book/spheres2.py'): ('project',
        ('--help',
         '')),
                      loc('book/template.py'): ('project',
        ('--show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('book/direct-disks.py'): ['--show --plot test --sigma 0.03125 ',
        '--show --plot test --sigma 0.03125  --periodic',
        '--show --plot test --sigma 0.03125 --N 100 --periodic',
        '--show --plot test --sigma 0.03125 --N 100',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.1750 --N 100000',
        '--show --plot test1 --sigma 0.03125 0.0625 0.125 0.1750 --periodic --N 100000',
        '--show --plot test1 --sigma 0.03125 0.0625 0.125 0.1750 --periodic',
        '--show --plot test1 --sigma 0.03125 0.0625 0.125 0.1750 ',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.1750',
        '--show --plot test --sigma 0.03125 0.0625, 0.125 0.1750',
        '--show --plot test --sigma 0.03125 0.0625, 0.125, 0.1750',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.1875',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.25',
        '--show --plot test --sigma 0.03125 0.0625 0.125',
        '--show --plot test --sigma 0.03125 0.0625 0.125 --L 1 1',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.25 --L 1 1',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.25 --periodic --L 1 1',
        '--show --plot test --sigma 0.25 --periodic --L 3 1',
        '--show --plot test --sigma 0.125 --periodic --L 3 1',
        '--show --plot test --sigma 0.01 --periodic --L 3 1',
        '--show --plot test --sigma 0.01 --periodic --L 3',
        '--show --plot test --sigma 0.01 --periodic L 3',
        '--show --plot test --sigma 0.01 --periodic',
        '--show --plot test --sigma 0.25 --periodic',
        '--show --plot test --sigma 0.25',
        '--show --plot test --sigma 0.0625 0.125 0.25 0.3125',
        '--show --plot test',
        '--show --plot test --N 100000',
        '--show',
        '--N 5'],
                         loc('book/direct-gamma.py'): ['100000',
        '10000',
        '10000 --N 1 2 3 4',
        '10000000',
        '1000'],
                         loc('book/hist-plot.py'): ['--show',
        '--show  --input md/3dhist.csv',
        '--show --burn 10000 --input md/3dhist.csv',
        '--show --burn 1 --input md/3dhist.csv',
        '--show --burn 1 --input md/bar.csv',
        '--show --burn 1 -input md/bar.csv',
        '--show --burn 1000000',
        '--show --burn 200000'],
                         loc('book/ising-stats.py'): ['--energies 32',
        '--energies -32',
        '--energies 32 24 20 16'],
                         loc('book/ising.py'): ['-m 4 -n 4 --trace',
        '-m 4 -n 4',
        '-m 6 -n 6 -p 100000',
        '-m 6 -n 6 -9 100000',
        '-m 6 -n 6 -t 1000000',
        '-m 6 -n 6',
        '-m 2 -n 2',
        '--help'],
                         loc('book/markov-disks.py'): ['--show   --N 100000 --frequency 1000 --periodic --sigma 0.015 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.02 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.01 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.05 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.1 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.001 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.0001 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --eta 0.48 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.001 --Disks 256 --plot test256 --delta 0.025',
        '--show   --N 100000 --frequency 1000 --periodic --eta 0.48 --Disks 256 --plot test256 --delta 0.025',
        '--show   --N 100000 --frequency 1000 --periodic --eta 0.48 --Disks 256 --plot test256',
        '--show   --N 10000 --frequency 100 --periodic --eta 0.48 --Disks 256 --plot test256',
        '--show   --N 1000 --frequency 100 --periodic --eta 0.48 --Disks 256 --plot test256',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --periodic --d 3',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --periodic --d 4',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --periodic',
        '--show  --delta 0.1 --N 100000 --frequency 10000',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --sigma 0.25',
        '--show  --delta 0.1 --N 1000000 --frequency 10000',
        '--show  --burn 0 --N 1000000 --frequency 10000',
        '--show  --burn 0 --N 100000 ',
        '--show  --burn 0',
        '--show --N 100000 --frequency 10000 --sigma 0 --burn 0',
        '--show --N 100000 --frequency 10000 --sigma 0',
        '--show --N 100000 --frequency 10000 --sigma 0.15',
        '--show --N 100000 --frequency 10000',
        '--show --N 1000000 --frequency 100000 --delta 0.0125',
        '--show --N 10000 --frequency 1000 --delta 0.0125',
        '--show --N 10000 --frequency 1000 --delta 0.025',
        '--show --N 1000000 --frequency 10000 --sigma 0.0625 '],
                         loc('book/matrix-square-check.py'): ['--show --beta 0.1',
        '--show --beta 0.2',
        '--show beta 0.2',
        '--show'],
                         loc('book/matrix-square.py'): ['--N 1 --show',
        '--rows 2 --cols 2 --show',
        '--N 4 --show',
        '--N 3 --show',
        '--N 2 --show',
        '--N 2',
        '--N 1',
        '--plot foo.jpg',
        '--plot foo',
        '--show --rows 2 --cols 1',
        '--show',
        '--rows 2 --cols 2',
        '--help',
        '--show --beta 0.001',
        '--beta 5'],
                         loc('book/md-plot.py'): ['--show --input md\\check.csv',
        '--show --input md\\ex-2-6.csv',
        '--show --input md\\check.csv --bins fd',
        '--show --input md\\3d.csv',
        '--show --input md\\3d.csv --bins sqrt',
        '--help',
        '--show --input md\\3d.csv --bw_adjust 0.5',
        '--show --input md\\3d.csv bw_adjust 0.5',
        '--show --input md\\3d.csv --bw-adjust 0.5',
        '--show --input md/3d.csv',
        '--show --input md/foo.csv',
        '--show'],
                         loc('book/md-viz.py'): ['md000575.npz --show',
        'md000191.npz --show',
        'md000128.npz --show',
        'md000001.npz --show',
        'md000113.npz --show',
        '--show'],
                         loc('book/md.py'): ['--N 1000000 --n 10 --sigma 0.001',
        '--N 1000000 --n 10',
        '--N 1000 --n 10',
        '--N 100 --n 10',
        '--help',
        '--show ',
        '--show --N 10000 --L 1 2 3',
        '--show --N 10000',
        '--show --N 10000 --L 1',
        '--show --N 10000000',
        '--show --N 1000',
        '--show --N 25',
        '--N 25',
        '--N 5'],
                         loc('book/pair-time.py'): ['--show',
        '--show --N 10000',
        '--show  --N 10000',
        '--show  --N 100',
        '--show  --N 1000',
        '--show  --N 10',
        '--show  --N 1000000',
        '--show  --N 100000',
        '--show --N 100000',
        '--show --N 1000',
        '--show --N 1000000',
        '--show --seed 1942812603435365645',
        '--show  --sigma 0.01',
        '--show --seed 666 --sigma 0.01',
        '--show --seed 666',
        '--show --seed 1',
        '--d 4',
        '--d 3',
        '--help'],
                         loc('book/poeschl-teller.py'): ['--show',
        '--help'],
                         loc('book/poschl-teller.py'): ['--show'],
                         loc('book/spheres2.py'): ['--help',
        '--dt 0.1 --N 100000 --show --m 100',
        '--dt 0.1 --N 1000000 --show --m 100',
        '--dt 0.1 --N 100000 --show',
        '--dt 0.1 --N 10000 --show',
        '--dt 0.1 --N 1000 --show',
        '--dt 0.001 --show',
        '--dt 0.1 --show',
        '--dt 0.1',
        '--dt 25',
        '--dt 0.25'],
                         loc('book/template.py'): ['--show',
        '--help',
        '-h']}
edit.file-encoding = {loc('README.md'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2566371681415929,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,)],
                                 'selected-nodes': [(0,
        1)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'),
                             '__version__')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'),
                      'Action')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/re.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Program Files (x86)/Wing Personal 8/resources/builtin-pi-files/__os__/win32/3.10/re.pi'),
                      'A')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/format.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/format.py'),
                      'ARRAY_ALIGN')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/linalg/linalg.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/linalg/linalg.py'),
                      'array_function_dispatch')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/backends/backend_wxagg.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/backends/backend_wxagg.py'),
                      'FigureCanvasWxAgg')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('book/README.md'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': None},
        loc('book/backends.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('book/backends.py'),
        'e')]},
        loc('book/direct-disks.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/direct-disks.py'),
        'args')]},
        loc('book/direct-gamma.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('book/direct-gamma.py'),
        'bincenters')]],
                                      'top-node': [('generic attribute',
        loc('book/direct-gamma.py'),
        'args')]},
        loc('book/geometry.py'): {'expanded-nodes': [[('class def',
        loc('book/geometry.py'),
        'Geometry')]],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('book/geometry.py'),
        'Box')]},
        loc('book/markov-disks.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('book/md-viz.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('book/md-viz.py'),
        'args')]},
        loc('book/md.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('book/md.py'),
        'args')]},
        loc('book/pair-time.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('book/pair-time.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('book/pair-time.py'),
        'args')]},
        loc('lecture_2/markov_disks_box.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('lecture_2/markov_disks_box.py'),
                             'sigma')]],
        'top-node': [('generic attribute',
                      loc('lecture_2/markov_disks_box.py'),
                      'delta')]},
        loc('lecture_8/energy_ising.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('lecture_8/energy_ising.py'),
                      'energy')]},
        loc('lecture_8/gray.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': None}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.327247191011236,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'geometry',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': 'array',
                                       'fReverse': False,
                                       'fSearchText': 'arrayay',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': True,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['import numpy as np\n',
        'np.linalg.norm\n']},
                       'launch-id': None,
                       'sel-line': 5,
                       'sel-line-start': 233,
                       'selection_end': 233,
                       'selection_start': 233,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('book/markov-disks.py'),
        {'attrib-starts': [('markov_disks|0|',
                            28)],
         'code-line': '        return k,X\r\n',
         'first-line': 40,
         'folded-linenos': [],
         'sel-line': 53,
         'sel-line-start': 2036,
         'selection_end': 2054,
         'selection_start': 2054,
         'zoom': 0},
        1742009673.9632812],
        [loc('book/geometry.py'),
         {'attrib-starts': [('Torus|0|',
                             119),
                            ('Torus|0|.__init__|0|',
                             121)],
          'code-line': '        super().__init__(L = L, sigma = sigma, d = d, LowerBound = np.zeros(d),UpperBound = L)\r\n',
          'first-line': 116,
          'folded-linenos': [],
          'sel-line': 125,
          'sel-line-start': 4632,
          'selection_end': 4678,
          'selection_start': 4678,
          'zoom': 0},
         1742009700.56736],
        [loc('book/geometry.py'),
         {'attrib-starts': [('Torus|0|',
                             119),
                            ('Torus|0|.__init__|0|',
                             121)],
          'code-line': '        super().__init__(L = L, sigma = sigma, d = d, LowerBound = np.zeros(d),UpperBound = L)\r\n',
          'first-line': 147,
          'folded-linenos': [],
          'sel-line': 125,
          'sel-line-start': 4632,
          'selection_end': 4678,
          'selection_start': 4678,
          'zoom': 0},
         1742009734.4847653],
        [loc('book/geometry.py'),
         {'attrib-starts': [('Torus|0|',
                             119),
                            ('Torus|0|.__init__|0|',
                             121)],
          'code-line': '        super().__init__(L = L, sigma = sigma, d = d, LowerBound = np.zeros(d),UpperBound = L)\r\n',
          'first-line': 25,
          'folded-linenos': [],
          'sel-line': 125,
          'sel-line-start': 4632,
          'selection_end': 4678,
          'selection_start': 4678,
          'zoom': 0},
         1742009749.6156886],
        [loc('book/geometry.py'),
         {'attrib-starts': [('Torus|0|',
                             119),
                            ('Torus|0|.__init__|0|',
                             121)],
          'code-line': '        super().__init__(L = L, sigma = sigma, d = d, LowerBound = np.zeros(d),UpperBound = L)\r\n',
          'first-line': 92,
          'folded-linenos': [],
          'sel-line': 125,
          'sel-line-start': 4632,
          'selection_end': 4678,
          'selection_start': 4678,
          'zoom': 0},
         1742009759.8724],
        [loc('book/geometry.py'),
         {'attrib-starts': [('Torus|0|',
                             119),
                            ('Torus|0|.box_it|0|',
                             132)],
          'code-line': '        return X % self.L\r\n',
          'first-line': 119,
          'folded-linenos': [],
          'sel-line': 134,
          'sel-line-start': 4970,
          'selection_end': 4989,
          'selection_start': 4989,
          'zoom': 0},
         1742009809.2187312],
        [loc('book/geometry.py'),
         {'attrib-starts': [('GeometryFactory|0|',
                             145)],
          'code-line': '        return Box(L = L, sigma = sigma, d = d)\r\n',
          'first-line': 155,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5554,
          'selection_end': 5569,
          'selection_start': 5569,
          'zoom': 0},
         1742009860.3123345],
        [loc('book/geometry.py'),
         {'attrib-starts': [('GeometryFactory|0|',
                             145)],
          'code-line': '        return Box(L = L, sigma = sigma, d = d)\r\n',
          'first-line': 197,
          'folded-linenos': [],
          'sel-line': 153,
          'sel-line-start': 5554,
          'selection_end': 5569,
          'selection_start': 5569,
          'zoom': 0},
         1742009862.9819307],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [('markov_disks|0|',
                             28)],
          'code-line': '        return k,X\r\n',
          'first-line': 40,
          'folded-linenos': [],
          'sel-line': 53,
          'sel-line-start': 2036,
          'selection_end': 2038,
          'selection_start': 2038,
          'zoom': 0},
         1742010014.5758884],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '    fig.savefig(get_plot_file_name(args.plot))\r\n',
          'first-line': 188,
          'folded-linenos': [],
          'sel-line': 203,
          'sel-line-start': 8054,
          'selection_end': 8088,
          'selection_start': 8070,
          'zoom': 0},
         1742010045.2179518],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': 'def get_plot_file_name(plot=None):\r\n',
          'first-line': 59,
          'folded-linenos': [],
          'sel-line': 69,
          'sel-line-start': 2438,
          'selection_end': 2460,
          'selection_start': 2442,
          'zoom': 0},
         1742010070.1364202],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '    geometry = GeometryFactory(periodic = args.periodic, L = L, sigma = args.sigma, d = args.d)\r\n',
          'first-line': 152,
          'folded-linenos': [],
          'sel-line': 163,
          'sel-line-start': 6343,
          'selection_end': 6356,
          'selection_start': 6356,
          'zoom': 0},
         1742010159.7138152],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 180,
          'folded-linenos': [],
          'sel-line': 188,
          'sel-line-start': 7371,
          'selection_end': 7371,
          'selection_start': 7371,
          'zoom': 0},
         1742010184.8838706],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 188,
          'sel-line-start': 7371,
          'selection_end': 7371,
          'selection_start': 7371,
          'zoom': 0},
         1742010195.0256512],
        [loc('../tm/template.py'),
         {'attrib-starts': [],
          'code-line': '    elapsed = time() - start\r\n',
          'first-line': 27,
          'folded-linenos': [],
          'sel-line': 42,
          'sel-line-start': 1559,
          'selection_end': 1711,
          'selection_start': 1559,
          'zoom': 0},
         1742010201.3471222],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '\r\n',
          'first-line': 12,
          'folded-linenos': [],
          'sel-line': 188,
          'sel-line-start': 7371,
          'selection_end': 7371,
          'selection_start': 7371,
          'zoom': 0},
         1742010207.1239386],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '    \r\n',
          'first-line': 188,
          'folded-linenos': [],
          'sel-line': 206,
          'sel-line-start': 8230,
          'selection_end': 8234,
          'selection_start': 8234,
          'zoom': 0},
         1742010220.5494664],
        [loc('../tm/template.py'),
         {'attrib-starts': [],
          'code-line': '    start  = time()\r\n',
          'first-line': 27,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 1293,
          'selection_end': 1312,
          'selection_start': 1293,
          'zoom': 0},
         1742010226.4378273],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '    \r\n',
          'first-line': 188,
          'folded-linenos': [],
          'sel-line': 206,
          'sel-line-start': 8230,
          'selection_end': 8234,
          'selection_start': 8234,
          'zoom': 0},
         1742010233.5678115],
        [loc('book/markov-disks.py'),
         {'attrib-starts': [],
          'code-line': '    start  = time()\r\n',
          'first-line': 149,
          'folded-linenos': [],
          'sel-line': 158,
          'sel-line-start': 6103,
          'selection_end': 6107,
          'selection_start': 6107,
          'zoom': 0},
         1742010256.072389]],
        20),
        'current-loc': loc('book/markov-disks.py'),
        'editor-state-list': [(loc('book/AllTests.py'),
                               {'attrib-starts': [],
                                'code-line': '    Import tests from other models and execute them\r\n',
                                'first-line': 8,
                                'folded-linenos': [],
                                'sel-line': 19,
                                'sel-line-start': 767,
                                'selection_end': 767,
                                'selection_start': 767,
                                'zoom': 0}),
                              (loc('book/enumerate_ising.py'),
                               {'attrib-starts': [],
                                'code-line': 'from gray import gray_flip, Nbr\r\n',
                                'first-line': 11,
                                'folded-linenos': [],
                                'sel-line': 20,
                                'sel-line-start': 824,
                                'selection_end': 829,
                                'selection_start': 829,
                                'zoom': 0}),
                              (loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/figure.py'),
                               {'attrib-starts': [('FigureBase|0|',
        180)],
                                'code-line': '    def add_subplot(self, *args, **kwargs):\n',
                                'first-line': 646,
                                'folded-linenos': [],
                                'sel-line': 658,
                                'sel-line-start': 23210,
                                'selection_end': 23229,
                                'selection_start': 23218,
                                'zoom': 0}),
                              (loc('book/geometry.py'),
                               {'attrib-starts': [('GeometryFactory|0|',
        145)],
                                'code-line': '        return Box(L = L, sigma = sigma, d = d)\r\n',
                                'first-line': 197,
                                'folded-linenos': [],
                                'sel-line': 153,
                                'sel-line-start': 5554,
                                'selection_end': 5569,
                                'selection_start': 5569,
                                'zoom': 0}),
                              (loc('book/markov-disks.py'),
                               {'attrib-starts': [],
                                'code-line': 'from time import time\r\n',
                                'first-line': 15,
                                'folded-linenos': [],
                                'sel-line': 22,
                                'sel-line-start': 941,
                                'selection_end': 962,
                                'selection_start': 962,
                                'zoom': 0}),
                              (loc('../tm/template.py'),
                               {'attrib-starts': [],
                                'code-line': '    start  = time()\r\n',
                                'first-line': 27,
                                'folded-linenos': [],
                                'sel-line': 35,
                                'sel-line-start': 1293,
                                'selection_end': 1312,
                                'selection_start': 1293,
                                'zoom': 0})],
        'has-focus': False,
        'locked': False},
        [loc('book/AllTests.py'),
         loc('book/enumerate_ising.py'),
         loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/figure.py'),
         loc('book/geometry.py'),
         loc('book/markov-disks.py'),
         loc('../tm/template.py')]),
                               'open_files': ['book/enumerate_ising.py',
        'book/AllTests.py',
        'book/geometry.py',
        '../tm/template.py',
        'book/markov-disks.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1742008478.7230613),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1742007475.3610206),
                 'user_data': {}},
        'window-alloc': (-131,
                         33,
                         1548,
                         834)}]}
guimgr.recent-documents = [loc('book/markov-disks.py'),
                           loc('../tm/template.py'),
                           loc('book/geometry.py'),
                           loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/figure.py'),
                           loc('book/AllTests.py'),
                           loc('book/enumerate_ising.py')]
guimgr.visual-state = {loc('../../../Anaconda3/lib/argparse.py'): {'attrib-starts': [('_ActionsContainer',
        1215),
        ('_ActionsContainer.add_argument',
         1298)],
        'first-line': 1329,
        'folded-linenos': [],
        'sel-line': 1334,
        'sel-line-start': 47090,
        'selection_end': 47090,
        'selection_start': 47090,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args',
        126),
        ('_process_plot_var_args.set_lineprops',
         178)],
        'first-line': 164,
        'folded-linenos': [],
        'sel-line': 183,
        'sel-line-start': 5478,
        'selection_end': 5478,
        'selection_start': 5478,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/unittest/case.py'): {'attrib-starts': [('TestCase',
        340),
        ('TestCase._baseAssertEqual',
         816)],
        'first-line': 809,
        'folded-linenos': [],
        'sel-line': 821,
        'sel-line-start': 31048,
        'selection_end': 31048,
        'selection_start': 31048,
        'zoom': 0},
                       loc('../../../cygwin64/home/Weka/smac/lecture_8/energy_ising.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 23,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1302),
        ('_ActionsContainer|0|.add_argument|0|',
         1386)],
        'code-line': '        chars = self.prefix_chars\r\n',
        'first-line': 1384,
        'folded-linenos': [],
        'sel-line': 1395,
        'sel-line-start': 50279,
        'selection_end': 50279,
        'selection_start': 50279,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/ntpath.py'): {'attrib-starts': [('splitext|0|',
        202)],
        'code-line': '    p = os.fspath(p)\r\n',
        'first-line': 191,
        'folded-linenos': [],
        'sel-line': 203,
        'sel-line-start': 7215,
        'selection_end': 7215,
        'selection_start': 7215,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/random.py'): {'attrib-starts': [],
        'code-line': 'random = _inst.random\r\n',
        'first-line': 846,
        'folded-linenos': [],
        'sel-line': 858,
        'sel-line-start': 31835,
        'selection_end': 31841,
        'selection_start': 31835,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/re.py'): {'attrib-starts': [('match|0|',
        186)],
        'code-line': '    return _compile(pattern, flags).match(string)\r\n',
        'first-line': 175,
        'folded-linenos': [],
        'sel-line': 189,
        'sel-line-start': 9004,
        'selection_end': 9004,
        'selection_start': 9004,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/git/__init__.py'): {'attrib-starts': [],
        'code-line': "    raise ImportError('Failed to initialize: {0}'.format(exc)) from exc\n",
        'first-line': 64,
        'folded-linenos': [],
        'sel-line': 88,
        'sel-line-start': 2410,
        'selection_end': 2410,
        'selection_start': 2410,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/__init__.py'): {'attrib-starts': [('RcParams|0|',
        600),
        ('RcParams|0|.__getitem__|0|',
         652)],
        'code-line': '        return dict.__getitem__(self, key)\r\n',
        'first-line': 649,
        'folded-linenos': [],
        'sel-line': 673,
        'sel-line-start': 24153,
        'selection_end': 24153,
        'selection_start': 24153,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        94),
        ('Artist|0|.update|0|',
         1045)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 1048,
        'folded-linenos': [],
        'sel-line': 1063,
        'sel-line-start': 36297,
        'selection_end': 36297,
        'selection_start': 36297,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_AxesBase|0|',
        541),
        ('_AxesBase|0|.__init__|0|',
         553)],
        'code-line': "            raise ValueError('Width and height specified must be non-negative')\r\n",
        'first-line': 580,
        'folded-linenos': [],
        'sel-line': 604,
        'sel-line-start': 23723,
        'selection_end': 23723,
        'selection_start': 23723,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/colorbar.py'): {'attrib-starts': [('Colorbar|0|',
        288),
        ('Colorbar|0|.__init__|0|',
         368)],
        'code-line': '        if mappable.get_array() is not None:\r\n',
        'first-line': 367,
        'folded-linenos': [],
        'sel-line': 391,
        'sel-line-start': 15188,
        'selection_end': 15188,
        'selection_start': 15188,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/colors.py'): {'attrib-starts': [('_to_rgba_no_colorcycle|0|',
        194)],
        'code-line': '        raise ValueError(f"Invalid RGBA argument: {orig_c!r}")\r\n',
        'first-line': 244,
        'folded-linenos': [],
        'sel-line': 268,
        'sel-line-start': 9109,
        'selection_end': 9109,
        'selection_start': 9109,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        180)],
        'code-line': '    def subplots(self, nrows=1, ncols=1, *, sharex=False, sharey=False,\r\n',
        'first-line': 772,
        'folded-linenos': [],
        'sel-line': 787,
        'sel-line-start': 28778,
        'selection_end': 28794,
        'selection_start': 28786,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/gridspec.py'): {'attrib-starts': [('SubplotSpec|0|',
        536),
        ('SubplotSpec|0|._from_subplot_args|0|',
         567)],
        'code-line': '                raise ValueError(\r\n',
        'first-line': 581,
        'folded-linenos': [],
        'sel-line': 605,
        'sel-line-start': 24410,
        'selection_end': 24410,
        'selection_start': 24410,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/lines.py'): {'attrib-starts': [('_get_dash_pattern|0|',
        30)],
        'code-line': '        dsum = sum(dashes)\r\n',
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1716,
        'selection_end': 1716,
        'selection_start': 1716,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('savefig|0|',
        955)],
        'code-line': "    fig.canvas.draw_idle()   # need this if 'transparent=True' to reset colors\r\n",
        'first-line': 951,
        'folded-linenos': [],
        'sel-line': 958,
        'sel-line-start': 32231,
        'selection_end': 32231,
        'selection_start': 32231,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/texmanager.py'): {'attrib-starts': [('TexManager|0|',
        56),
        ('TexManager|0|._run_checked_subprocess|0|',
         229)],
        'code-line': '            raise RuntimeError(\r\n',
        'first-line': 216,
        'folded-linenos': [],
        'sel-line': 240,
        'sel-line-start': 10027,
        'selection_end': 10027,
        'selection_start': 10027,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [('__getattr__|0|',
        275)],
        'code-line': '            raise AttributeError("module {!r} has no attribute "\r\n',
        'first-line': 288,
        'folded-linenos': [],
        'sel-line': 312,
        'sel-line-start': 11480,
        'selection_end': 11480,
        'selection_start': 11480,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/shape_base.py'): {'attrib-starts': [('stack|0|',
        357)],
        'code-line': "        raise ValueError('all input arrays must have the same shape')\r\n",
        'first-line': 407,
        'folded-linenos': [],
        'sel-line': 425,
        'sel-line-start': 12256,
        'selection_end': 12256,
        'selection_start': 12256,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/format.py'): {'attrib-starts': [('read_array|0|',
        698)],
        'code-line': '            raise ValueError("Object arrays cannot be loaded when "\r\n',
        'first-line': 718,
        'folded-linenos': [],
        'sel-line': 742,
        'sel-line-start': 25421,
        'selection_end': 25421,
        'selection_start': 25421,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('copy|0|',
        726)],
        'code-line': '    return array(a, order=order, subok=subok, copy=True)\r\n',
        'first-line': 779,
        'folded-linenos': [],
        'sel-line': 803,
        'sel-line-start': 25984,
        'selection_end': 25984,
        'selection_start': 25984,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/histograms.py'): {'attrib-starts': [('_get_bin_edges|0|',
        359)],
        'code-line': '            raise TypeError(\r\n',
        'first-line': 396,
        'folded-linenos': [],
        'sel-line': 420,
        'sel-line-start': 13691,
        'selection_end': 13691,
        'selection_start': 13691,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/npyio.py'): {'attrib-starts': [('_savez|0|',
        691)],
        'code-line': '        file = os_fspath(file)\r\n',
        'first-line': 673,
        'folded-linenos': [],
        'sel-line': 697,
        'sel-line-start': 25096,
        'selection_end': 25096,
        'selection_start': 25096,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/linalg/linalg.py'): {'attrib-starts': [('_norm_dispatcher|0|',
        2358)],
        'code-line': '    return (x,)\r\n',
        'first-line': 2335,
        'folded-linenos': [],
        'sel-line': 2359,
        'sel-line-start': 77062,
        'selection_end': 77062,
        'selection_start': 77062,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/sre_parse.py'): {'attrib-starts': [('parse|0|',
        936)],
        'code-line': '        raise source.error("unbalanced parenthesis")\r\n',
        'first-line': 936,
        'folded-linenos': [],
        'sel-line': 961,
        'sel-line-start': 37401,
        'selection_end': 37401,
        'selection_start': 37401,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/lib/site-packages/matplotlib/_api/__init__.py'): {'attrib-starts': [('caching_module_getattr|0|',
        192),
        ('caching_module_getattr|0|.__getattr__|0|',
         218)],
        'code-line': '        raise AttributeError(\r\n',
        'first-line': 197,
        'folded-linenos': [],
        'sel-line': 221,
        'sel-line-start': 7219,
        'selection_end': 7219,
        'selection_start': 7219,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/lib/site-packages/matplotlib/cbook/__init__.py'): {'attrib-starts': [('safe_first_element|0|',
        1660)],
        'code-line': '        raise RuntimeError("matplotlib does not support generators "\r\n',
        'first-line': 1652,
        'folded-linenos': [],
        'sel-line': 1677,
        'sel-line-start': 56417,
        'selection_end': 56417,
        'selection_start': 56417,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        307),
        ('TestCase|0|._baseAssertEqual|0|',
         824)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 816,
        'folded-linenos': [],
        'sel-line': 829,
        'sel-line-start': 32133,
        'selection_end': 32133,
        'selection_start': 32133,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1356),
        ('_ActionsContainer|0|.add_argument|0|',
         1440)],
        'code-line': '        action = action_class(**kwargs)\r\n',
        'first-line': 1453,
        'folded-linenos': [],
        'sel-line': 1471,
        'sel-line-start': 53489,
        'selection_end': 53489,
        'selection_start': 53489,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/shutil.py'): {'attrib-starts': [],
        'code-line': 'def copyfile(src, dst, *, follow_symlinks=True):\r\n',
        'first-line': 217,
        'folded-linenos': [],
        'sel-line': 229,
        'sel-line-start': 7461,
        'selection_end': 7473,
        'selection_start': 7465,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'attrib-starts': [('Image|0|',
        466),
        ('Image|0|.save|0|',
         2352)],
        'code-line': '                fp = builtins.open(filename, "w+b")\r\n',
        'first-line': 2416,
        'folded-linenos': [],
        'sel-line': 2434,
        'sel-line-start': 86823,
        'selection_end': 86823,
        'selection_start': 86823,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/backends/backend_wxagg.py'): {'attrib-starts': [],
        'code-line': 'import wx\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [('__getattr__|0|',
        303)],
        'code-line': '        raise AttributeError("module {!r} has no attribute "\r\n',
        'first-line': 335,
        'folded-linenos': [],
        'sel-line': 346,
        'sel-line-start': 12355,
        'selection_end': 12355,
        'selection_start': 12355,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/function_base.py'): {'attrib-starts': [],
        'code-line': 'def linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None,\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 625,
        'selection_end': 637,
        'selection_start': 629,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        344),
        ('TestCase|0|._baseAssertEqual|0|',
         872)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 866,
        'folded-linenos': [],
        'sel-line': 877,
        'sel-line-start': 34039,
        'selection_end': 34039,
        'selection_start': 34039,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        117),
        ('_process_plot_var_args|0|._xy_from_xy|0|',
         240)],
        'code-line': '                             "have shapes {} and {}".format(x.shape, y.shape))\n',
        'first-line': 264,
        'folded-linenos': [],
        'sel-line': 269,
        'sel-line-start': 10054,
        'selection_end': 10054,
        'selection_start': 10054,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/cbook/__init__.py'): {'attrib-starts': [('_lock_path|0|',
        1855)],
        'code-line': '    path = Path(path)\n',
        'first-line': 1866,
        'folded-linenos': [],
        'sel-line': 1870,
        'sel-line-start': 59297,
        'selection_end': 59318,
        'selection_start': 59318,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/mathtext.py'): {'attrib-starts': [('Parser|0|',
        2253),
        ('Parser|0|.parse|0|',
         2586)],
        'code-line': '                                        str(err)]))\n',
        'first-line': 2582,
        'folded-linenos': [],
        'sel-line': 2602,
        'sel-line-start': 89206,
        'selection_end': 89206,
        'selection_start': 89206,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/core/__init__.py'): {'attrib-starts': [],
        'code-line': '    raise ImportError(msg)\n',
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 46,
        'sel-line-start': 1673,
        'selection_end': 1673,
        'selection_start': 1673,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('meshgrid|0|',
        4083)],
        'code-line': '                        % (list(kwargs)[0],))\n',
        'first-line': 4175,
        'folded-linenos': [],
        'sel-line': 4195,
        'sel-line-start': 136309,
        'selection_end': 136309,
        'selection_start': 136309,
        'zoom': 0},
                       loc('../tm/template.py'): {'attrib-starts': [],
        'code-line': '    elapsed = time() - start\r\n',
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1559,
        'selection_end': 1711,
        'selection_start': 1559,
        'zoom': 0},
                       loc('AllTests.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('AllTests1.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '-||gray.py|Algorithm 5.2: Gray code for spins {1,...N}.\r\n',
        'first-line': 250,
        'folded-linenos': [],
        'sel-line': 265,
        'sel-line-start': 17725,
        'selection_end': 17732,
        'selection_start': 17728,
        'zoom': 0},
                       loc('book/AllTests.py'): {'attrib-starts': [],
        'code-line': '    Import tests from other models and execute them\r\n',
        'first-line': 7,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 767,
        'selection_end': 767,
        'selection_start': 767,
        'zoom': 0},
                       loc('book/README.md'): {'attrib-starts': [],
        'code-line': '|harmonic_density.py|Exercise 3.2: determine density matrix\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 40,
        'sel-line-start': 2096,
        'selection_end': 2155,
        'selection_start': 2155,
        'zoom': 0},
                       loc('book/__init__.py'): {'attrib-starts': [],
        'code-line': '# along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 620,
        'selection_end': 687,
        'selection_start': 687,
        'zoom': 0},
                       loc('book/backends.py'): {'attrib-starts': [],
        'code-line': 'print("Using:",get_backend())\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 288,
        'selection_end': 290,
        'selection_start': 290,
        'zoom': 0},
                       loc('book/binomialconvolution.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/boxmuller.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/check.npz'): {'attrib-starts': [],
        'code-line': "PK\x03\x04\x14\x00\x00\x00\x00\x00\x00\x00!\x00À3@¡À\x00\x00\x00À\x00\x00\x00\x05\x00\x14\x00X.npy\x01\x00\x10\x00À\x00\x00\x00\x00\x00\x00\x00À\x00\x00\x00\x00\x00\x00\x00“NUMPY\x01\x00v\x00{'descr': '<f8', 'fortran_order': False, 'shape': (4, 2), }                                                          \n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/direct-disks.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/direct-gamma-zeta.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2015 Greenweaves Software Pty Ltd\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 23,
        'selection_start': 23,
        'zoom': 0},
                       loc('book/direct-gamma.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/direct-plot.py'): {'attrib-starts': [],
        'code-line': '# direct-plot.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/direct-surface.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 23,
        'selection_start': 23,
        'zoom': 0},
                       loc('book/direct.gamma-zeta.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2015 Greenweaves Software Pty Ltd\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/direct.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/directDisksAny.py'): {'attrib-starts': [],
        'code-line': '# markov-pi.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/enumerate_ising.py'): {'attrib-starts': [],
        'code-line': 'from book.gray import gray_flip, Nbr\r\n',
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 824,
        'selection_end': 824,
        'selection_start': 824,
        'zoom': 0},
                       loc('book/f1.py'): {'attrib-starts': [],
        'code-line': 'path = os.path.join(mpl.rcParams["datapath"], "fonts/ttf/tahoma.ttf")\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 293,
        'selection_end': 293,
        'selection_start': 293,
        'zoom': 0},
                       loc('book/geometry.py'): {'attrib-starts': [],
        'code-line': 'class TestHistogram(TestCase):\r\n',
        'first-line': 176,
        'folded-linenos': [],
        'sel-line': 186,
        'sel-line-start': 6470,
        'selection_end': 6489,
        'selection_start': 6476,
        'zoom': 0},
                       loc('book/gray.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2019-2025 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 717,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/harmonic-density.png'): {'attrib-starts': [],
        'code-line': 'Â\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/harmonic_density.py'): {'attrib-starts': [],
        'code-line': '# harmonic_density.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/harmonic_wavefunction.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/hist-plot.py'): {'attrib-starts': [],
        'code-line': '# the Free Software Foundation, either version 3 of the License, or\r\n',
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 197,
        'selection_end': 207,
        'selection_start': 207,
        'zoom': 0},
                       loc('book/hist.py'): {'attrib-starts': [],
        'code-line': "        fields = line.strip().split(',')\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 121,
        'selection_end': 209,
        'selection_start': 161,
        'zoom': 0},
                       loc('book/ising-stats.py'): {'attrib-starts': [],
        'code-line': "          sTc = ' $(T_C)$' if T == Tc else ''\r\n",
        'first-line': 119,
        'folded-linenos': [],
        'sel-line': 123,
        'sel-line-start': 4211,
        'selection_end': 4235,
        'selection_start': 4235,
        'zoom': 0},
                       loc('book/ising.csv'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/ising.py'): {'attrib-starts': [],
        'code-line': "with open(args.output,'w') as f:\r\n",
        'first-line': 4,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1393,
        'selection_end': 1425,
        'selection_start': 1425,
        'zoom': 0},
                       loc('book/large-markov.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/levy-convolution.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/markov-disks.py'): {'attrib-starts': [],
        'code-line': "    title(f'{args.Disks} Disks {geometry.get_description()}: sigma = {geometry.sigma:.3g}, eta = {eta:.3g}, delta = {max(args.delta):.2g}, acceptance = {100*n_accepted/(args.N-args.burn):.3g}%')\r\n",
        'first-line': 197,
        'folded-linenos': [],
        'sel-line': 210,
        'sel-line-start': 8307,
        'selection_end': 8319,
        'selection_start': 8319,
        'zoom': 0},
                       loc('book/markov-pi.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/markov-pi.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/markov-zeta-1-6.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/markov-zeta.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2015,2018 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 24,
        'selection_start': 23,
        'zoom': 0},
                       loc('book/markovdiscretepebble.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/matrix-square-check.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/matrix-square.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/md-plot.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/md-viz.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/md.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 298,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/naivegauss.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/pair-time.png'): {'attrib-starts': [],
        'code-line': '\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/pair-time.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/permutation-histogram.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/permutation-test.py'): {'attrib-starts': [],
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 43,
        'sel-line-start': 1310,
        'selection_end': 1375,
        'selection_start': 1375,
        'zoom': 0},
                       loc('book/permutation.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/poeschl-teller.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/smac.py'): {'attrib-starts': [],
        'code-line': "    suptitle('SMAC tests')\r\n",
        'first-line': 76,
        'folded-linenos': [],
        'sel-line': 133,
        'sel-line-start': 4145,
        'selection_end': 4161,
        'selection_start': 4161,
        'zoom': 0},
                       loc('book/smacfiletoken.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2015-2022 Greenweaves Software Limited\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/sphere-test.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/spheres2.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 208,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/temp.py'): {'attrib-starts': [],
        'code-line': 'print (os.name)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 13,
        'selection_end': 28,
        'selection_start': 28,
        'zoom': 0},
                       loc('book/template.py'): {'attrib-starts': [],
        'code-line': 'from argparse import ArgumentParser\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 754,
        'selection_end': 768,
        'selection_start': 768,
        'zoom': 0},
                       loc('exam/Q1.py'): {'attrib-starts': [],
        'code-line': 'import random\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_1/exerciseC.py'): {'attrib-starts': [],
        'code-line': 'import random, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_1/exerciseC3.py'): {'attrib-starts': [],
        'code-line': 'import random, pylab, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_3/my_markov_disks.py'): {'attrib-starts': [],
        'code-line': '# $HeadURL: https://server/svn/sandbox/trunk/smac/homework_3/my_markov_disks.py $\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_5/markov_gauss_movie_a1.py'): {'attrib-starts': [],
        'code-line': '# Furthermore, the program should output the normed histogram of the particle\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 757,
        'selection_end': 768,
        'selection_start': 762,
        'zoom': 0},
                       loc('homework_6/plot_B1_beta0.1.txt'): {'attrib-starts': [],
        'code-line': '-6.307253827036236\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_1/direct_pi.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 698,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_1/direct_pi_multirun.py'): {'attrib-starts': [],
        'code-line': "'''Compute pi using multiple runs of direct sampling'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 52,
        'selection_start': 3,
        'zoom': 0},
                       loc('lecture_1/markov_pi.py'): {'attrib-starts': [],
        'code-line': "'''Calculate pi using Markov Chain Monte Carlo'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 46,
        'selection_start': 3,
        'zoom': 0},
                       loc('lecture_1/markov_pi_multirun.py'): {'attrib-starts': [],
        'code-line': "''''Calculate pi using multiple runs of Markov Chain Monte Carlo'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 64,
        'selection_start': 4,
        'zoom': 0},
                       loc('lecture_1/pebble_basic.py'): {'attrib-starts': [],
        'code-line': 't        = 0\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 284,
        'selection_end': 293,
        'selection_start': 293,
        'zoom': 0},
                       loc('lecture_1/pebble_basic_inhomogeneous.py'): {'attrib-starts': [],
        'code-line': "'''Demonstrate neighbour table for MCMC-Algorithm 1.6 with inhomogeneous probabilities'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 86,
        'selection_start': 54,
        'zoom': 0},
                       loc('lecture_10/direct_gamma.py'): {'attrib-starts': [],
        'code-line': '    x       = uniform(0.0, 1.0)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 240,
        'selection_end': 296,
        'selection_start': 271,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average.py'): {'attrib-starts': [],
        'code-line': '    for step in range(n_steps // N):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 139,
        'selection_end': 173,
        'selection_start': 173,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average_movie.py'): {'attrib-starts': [],
        'code-line': "        ls = '--')\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 591,
        'selection_end': 604,
        'selection_start': 604,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average_rescaled.py'): {'attrib-starts': [],
        'code-line': 'gamma   = -0.8\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 28,
        'selection_end': 36,
        'selection_start': 36,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average_rescaled_movie.py'): {'attrib-starts': [],
        'code-line': 'def pi_exact(x, gamma, c0, c1):\n',
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 321,
        'selection_end': 352,
        'selection_start': 352,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_running.py'): {'attrib-starts': [],
        'code-line': 'for step in range(n_steps):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 70,
        'selection_end': 82,
        'selection_start': 82,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_running_movie.py'): {'attrib-starts': [],
        'code-line': 'import random, pylab\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_10/direct_needle.py'): {'attrib-starts': [],
        'code-line': 'from random import uniform\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_10/direct_needle_patch.py'): {'attrib-starts': [],
        'code-line': '    x_center = uniform(0.0, b * 0.5)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 136,
        'selection_end': 166,
        'selection_start': 166,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box.py'): {'attrib-starts': [('direct_disks_box|0|',
        5)],
        'code-line': '                generatedLegal = False\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 514,
        'selection_end': 544,
        'selection_start': 530,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_a1.py'): {'attrib-starts': [],
        'code-line': 'from direct_disks_box import direct_disks_box\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 80,
        'selection_end': 125,
        'selection_start': 80,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_movie.py'): {'attrib-starts': [],
        'code-line': 'from os                import makedirs\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 120,
        'selection_end': 158,
        'selection_start': 158,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_movie/0.png'): {'attrib-starts': [],
        'code-line': '\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_multirun.py'): {'attrib-starts': [],
        'code-line': "'''Direct sampling of disks in box, tabula rasa, multiple runs'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 62,
        'selection_start': 3,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_multirun_b1.py'): {'attrib-starts': [],
        'code-line': "    title(f'Direct sampling: x coordinate histogram (density eta={eta:3f})\\nProduced by {split(__file__)[-1]}')\r\n",
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 855,
        'selection_end': 966,
        'selection_start': 858,
        'zoom': 0},
                       loc('lecture_2/event_disks_box.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 2.1: event-driven molecular dynamics for hard disks in a box'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 24,
        'selection_start': 24,
        'zoom': 0},
                       loc('lecture_2/event_disks_box_a3.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 2.1: event-driven molecular dynamics for hard disks in a box'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 24,
        'selection_start': 24,
        'zoom': 0},
                       loc('lecture_2/event_disks_box_movie.py'): {'attrib-starts': [],
        'code-line': 'import os, math, pylab\r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_2/markov_disks_box_a2.py'): {'attrib-starts': [('markov_step_box|0|',
        5)],
        'code-line': '    b = [a[0] + uniform(-delta, delta), a[1] + uniform(-delta, delta)]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 185,
        'selection_end': 232,
        'selection_start': 232,
        'zoom': 0},
                       loc('lecture_2/markov_disks_box_movie.py'): {'attrib-starts': [],
        'code-line': 'import random, os, pylab\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_3/direct_pins.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1:  direct sampling for N pins'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 48,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_3/direct_pins_improved.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1:  direct sampling for N pins'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 48,
        'selection_start': 48,
        'zoom': 0},
                       loc('lecture_3/direct_pins_movie.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1:  direct sampling for N pins'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 48,
        'selection_start': 48,
        'zoom': 0},
                       loc('lecture_3/direct_pins_noreject.py'): {'attrib-starts': [],
        'code-line': '    y = [uniform(0.0, L - 2 * N * sigma) for k in range(N)]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 164,
        'selection_end': 173,
        'selection_start': 173,
        'zoom': 0},
                       loc('lecture_3/direct_pins_noreject_movie.py'): {'attrib-starts': [],
        'code-line': "title(f'Density of {N} clothes-pins, $\\sigma$={sigma}, on a line of length L={L}')\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 455,
        'selection_end': 509,
        'selection_start': 509,
        'zoom': 0},
                       loc('lecture_5/matrix_square_harmonic.py'): {'attrib-starts': [],
        'code-line': '    rho = numpy.dot(rho, rho)\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 866,
        'selection_end': 910,
        'selection_start': 870,
        'zoom': 0},
                       loc('lecture_6/continuous_random_walk.py'): {'attrib-starts': [],
        'code-line': 'Construct path using a simple random walk (endpoint is not held fixed)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 75,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_free_path.py'): {'attrib-starts': [],
        'code-line': 'Simple eimplementation of Lévy Free Path Algorithm\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 36,
        'selection_start': 36,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path.py'): {'attrib-starts': [],
        'code-line': 'Simple Lévy path\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 22,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path_3D.py'): {'attrib-starts': [],
        'code-line': 'Lévy flight in 3D\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 23,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path_movie.py'): {'attrib-starts': [],
        'code-line': 'dtau         = beta / N\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 173,
        'selection_end': 196,
        'selection_start': 196,
        'zoom': 0},
                       loc('lecture_6/naive_harmonic_path.py'): {'attrib-starts': [],
        'code-line': 'Construct path using direct sanpling (inefficient)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 55,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/naive_path_slice.py'): {'attrib-starts': [],
        'code-line': 'sigma = sqrt(1 / (1/dtau_prime+1/dtau_dprime))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 878,
        'selection_end': 893,
        'selection_start': 893,
        'zoom': 0},
                       loc('lecture_6/naive_path_slice_movie.py'): {'attrib-starts': [],
        'code-line': '    data_hist.append(xk)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 1149,
        'selection_end': 1173,
        'selection_start': 1173,
        'zoom': 0},
                       loc('lecture_6/trivial_free_path.py'): {'attrib-starts': [],
        'code-line': '                                 #Lévy free path see the same sequence of random numbers\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 563,
        'selection_end': 631,
        'selection_start': 631,
        'zoom': 0},
                       loc('lecture_8/cluster_ising.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/cluster_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/energy_ising.py'): {'attrib-starts': [],
        'code-line': '   5-1 Compute the energy of an Ising configuration\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 707,
        'selection_end': 758,
        'selection_start': 710,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising.py'): {'attrib-starts': [],
        'code-line': '    E += 2 * h * S[k - 1]\r\n',
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 55,
        'sel-line-start': 1728,
        'selection_end': 1734,
        'selection_start': 1734,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising_mod.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/gray.py'): {'attrib-starts': [('create_gray_codes|0|',
        21)],
        'code-line': '        Returns: A list, each element being a binary number.\r\n',
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 876,
        'selection_end': 936,
        'selection_start': 936,
        'zoom': 0},
                       loc('lecture_8/markov_ising.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/markov_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/spin_config_0000.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_8/thermo_ising.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/thermo_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('levy-convolution.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 400,
        'selection_end': 464,
        'selection_start': 464,
        'zoom': 0},
                       loc('t'): {'attrib-starts': [],
                                  'code-line': '\x1b[1mdiff --git a/README.md b/README.md\x1b[m\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0,
                                  'zoom': 0},
                       loc('tutorial_1/pebble_basic.py'): {'attrib-starts': [],
        'code-line': 'import random\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_basic_multirun.py'): {'attrib-starts': [],
        'code-line': "'''Move pebble using neighbour table from Table 1.3'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_dual_eigen.py'): {'attrib-starts': [],
        'code-line': "'''Two games: Illustrate conversion of reducible matrix to irreducible, aperiodoc to make motion ergodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 107,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_dual_movie.py'): {'attrib-starts': [],
        'code-line': "'''Two games: Illustrate conversion of reducible matrix to irreducible, aperiodic to make motion ergodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 81,
        'selection_start': 81,
        'zoom': 0},
                       loc('tutorial_1/pebble_multirun_all_histogram.py'): {'attrib-starts': [],
        'code-line': '    extent = [yedges[0], yedges[-1], xedges[-1], xedges[0]]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1164,
        'selection_end': 1174,
        'selection_start': 1168,
        'zoom': 0},
                       loc('tutorial_1/pebble_multirun_histogram.py'): {'attrib-starts': [],
        'code-line': 'import random\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_recurrent_eigen.py'): {'attrib-starts': [],
        'code-line': "'''Dual pebble: make aperiodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 33,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_recurrent_movie.py'): {'attrib-starts': [],
        'code-line': "'''Dual pebble: make aperiodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 33,
        'selection_start': 33,
        'zoom': 0},
                       loc('tutorial_1/pebble_transfer.py'): {'attrib-starts': [],
        'code-line': 'neighbor =  [[1, 3, 0, 0], [2, 4, 0, 1], [2, 5, 1, 2],\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 124,
        'selection_end': 178,
        'selection_start': 178,
        'zoom': 0},
                       loc('tutorial_1/pebble_transfer_eigen.py'): {'attrib-starts': [],
        'code-line': "'''Eigenvalues and eigenvectiors of transfer matrix, illustrating speed of convergence'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 86,
        'selection_start': 3,
        'zoom': 0},
                       loc('tutorial_1/pebble_transfer_sub.py'): {'attrib-starts': [],
        'code-line': "'''Model Monte Carlo simulation as a transfer matrix; subtract equilibrium value to show speed of convergence'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 109,
        'selection_start': 3,
        'zoom': 0},
                       loc('tutorial_3/direct_pins.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1: direct sampling'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4,
        'zoom': 0},
                       loc('tutorial_3/direct_pins_density.py'): {'attrib-starts': [('pi|0|',
        16)],
        'code-line': '    return sum([binomialCoeff( N - 1, k) * Z(k, x - sigma, sigma) * Z(N - k - 1, L - x - sigma, sigma) for k in range(0, N)]) / Z(N, L, sigma)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 419,
        'selection_end': 419,
        'selection_start': 419,
        'zoom': 0},
                       loc('tutorial_6/naive_boson_trap.py'): {'attrib-starts': [],
        'code-line': 'beta     = 1.0\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 144,
        'selection_end': 144,
        'selection_start': 144,
        'zoom': 0},
                       loc('tutorial_6/naive_single_particle.py'): {'attrib-starts': [],
        'code-line': "'''Enumerate states for Bosons, i.e. indistinguisgable particles'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 64,
        'selection_start': 3,
        'zoom': 0},
                       loc('utils/backends.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('utils/walker.py'): {'attrib-starts': [],
        'code-line': "for root,d,files in walk('.'):\r\n",
        'first-line': 20,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1035,
        'selection_end': 1043,
        'selection_start': 1039,
        'zoom': 0},
                       loc('walker.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
search.replace-history = ['array',
                          'np.savez',
                          'np.load',
                          'np.array',
                          'X_proposed',
                          'geometry',
                          'Geometry',
                          'value',
                          'ax4',
                          'ax5',
                          'Expected',
                          'poeschl_teller']
search.search-history = ['arrayay',
                         'savez',
                         'load',
                         'copy',
                         'arr',
                         'any',
                         'figure',
                         'geometry',
                         'geome',
                         'norm',
                         'np.linalg.norm',
                         'zeros',
                         'sqrt',
                         'resh',
                         'prod',
                         'pi',
                         'ones',
                         'minim',
                         'int64',
                         'array']
