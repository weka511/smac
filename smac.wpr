#!wing
#!version=10.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': ['homework_6/plot_B2_beta1.png',
                                     'book/exercise_5_7.png',
                                     'book/markov-zeta-0-8.png',
                                     'tutorial_3/plot-direct_pins_density.png',
                                     'book/imgs',
                                     'tutorial_1/pebble_dual_movie_epsilon_17.0.png',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_6.01205449481921.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_0.0.png',
                                     'lecture_5/sine.py',
                                     'tutorial_1/3x3_pebble_run_05.png',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.30.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_53.0.png',
                                     'book/nbr.hpp',
                                     'tutorial_1/pebble_dual_movie_epsilon_33.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_38.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_21.0.png',
                                     'tutorial_1/pebble_basic_movie_01.png',
                                     'tutorial_1/3x3_pebble_run_08.png',
                                     'lecture_5/sine.png',
                                     'book/buffon.py',
                                     'book/foo.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_55.0.png',
                                     'book/permutation-test.py',
                                     'tutorial_1/pebble_dual_movie_epsilon_5.0.png',
                                     'book/binomialconvolution.png',
                                     'homework_9/plot_tsp_simulated_annealing_N10_energy2.777140099483052.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_18.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_23.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_37.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.886213818636096.png',
                                     'homework_7/plot_boson_configuration_2.5.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_9.0.png',
                                     'book/logs',
                                     'book/direct.gamma-zeta.py',
                                     'tutorial_1/pebble_dual_movie_epsilon_34.0.png',
                                     'lecture_1/exerciseC3.py',
                                     'tutorial_1/pebble_dual_movie_epsilon_2.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_11.0.png',
                                     'book/enumerate-ising.cpp',
                                     'book/6x6a.csv',
                                     'book/md-plot.png',
                                     'tutorial_1/pebble_basic_movie_07.png',
                                     'book/Untitled 1.ods',
                                     'lecture_5/harmonic.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_46.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_49.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_25.0.png',
                                     'lecture_8/data_dos_L6.txt',
                                     'book/test-nbr.cpp',
                                     'book/markov-disks.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_57.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_39.0.png',
                                     'book/md000188.npz',
                                     'tutorial_1/pebble_basic_movie_09.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_1.0.png',
                                     'book/temp.csv',
                                     'book/catch.hpp',
                                     'homework_6/plot_B2_beta4.5.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_13.0.png',
                                     'book/markov-zeta-1-6.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_54.0.png',
                                     'book/configs',
                                     'book/ising.csv',
                                     'book/direct-disks.png',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_5.653395028455652.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_12.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_8.0.png',
                                     'book/transfer.m',
                                     'tutorial_1/pebble_basic_movie_05.png',
                                     'lecture_1/exerciseC.py',
                                     'book/md000111.npz',
                                     'tutorial_1/pebble_basic_movie_03.png',
                                     'book/exercise_5_11.csv',
                                     'homework_7/A2A.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_20.0.png',
                                     'book/ising',
                                     'book/ems4x4.csv',
                                     'tutorial_1/pebble_basic_movie_06.png',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_6.0709601924057255.png',
                                     'lecture_6/trivial_free_path.png',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.60.png',
                                     'lecture_2/markov_disks_box_movie',
                                     'book/.depend',
                                     'tutorial_1/pebble_basic_movie_00.png',
                                     'book/test1.png',
                                     'lecture_1/direct_sampling_rms_deviation.png',
                                     'book/exercise_5.7.py',
                                     'tutorial_1/pebble_dual_movie_epsilon_19.0.png',
                                     'book/markov-pi.png',
                                     'book/out_non_periodic.txt',
                                     'book/md-viz.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_48.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_28.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_43.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_56.0.png',
                                     'book/gray.hpp',
                                     'lecture_1/exerciseB.py',
                                     'book/foo.csv',
                                     'book/md000113.npz',
                                     'book/matrix-square.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_47.0.png',
                                     'book/6x6.csv',
                                     'tutorial_1/pebble_dual_movie_epsilon_26.0.png',
                                     'book/harmonic.png',
                                     'book/hist-plot.png',
                                     'lecture_10/histo_direct_gamma_average_rescaled.png',
                                     'homework_7/Xpositions.png',
                                     'book/matrix-square-check.png',
                                     'tutorial_1/3x3_pebble_run_06.png',
                                     'homework_6/plot_B1_beta20.0.txt',
                                     'homework_6/plot_B1_beta0.1.txt',
                                     'tutorial_1/pebble_dual_movie_epsilon_35.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_4.0.png',
                                     'homework_6/plot_B1_path_beta20.0.png',
                                     'lecture_10/histo_direct_gamma_average.png',
                                     'book/T100000000.csv',
                                     'tutorial_2/random_sequential_discrete_movie',
                                     'book/README.md',
                                     'plot_A1_1.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_51.0.png',
                                     'tutorial_1/pebble_basic_movie_04.png',
                                     'book/check.npz',
                                     'homework_6/plot_B2_beta20.0.png',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_5.8750943609396415.png',
                                     'lecture_1/exerciseC1.py',
                                     'homework_9/plot_tsp_direct_sampling_N_20_energy_5.796142535194058.png',
                                     'book/harmonic-density.png',
                                     'book/direct-gamma.png',
                                     'lecture_2/direct_disks_box_movie',
                                     'book/markov-disks100M.png',
                                     '.gitignore',
                                     'tutorial_1/pebble_dual_movie_epsilon_24.0.png',
                                     'book/edges4x4.csv',
                                     'homework_7/plot_boson_configuration_0.04.png',
                                     'lecture_2/event_disks_box_movie',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.10.png',
                                     'homework_7/A2.png',
                                     'book/direct-surface.png',
                                     'homework_5/plot_square_anharmonic_beta_4.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_36.0.png',
                                     'lecture_2/event_disks_box_b3.png',
                                     'book/spheres2.png',
                                     'book/test.png',
                                     'book/m000000.csv',
                                     'homework_6/plot_B2_beta0.1.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_31.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_20_energy_3.9550838760963827.png',
                                     'homework_6/plot_C1_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_29.0.png',
                                     'tutorial_1/3x3_pebble_run_01.png',
                                     'book/bench42.sh',
                                     'book/edges2x2.csv',
                                     'book/template.py',
                                     'plot_A0_0.png',
                                     'homework_9/plot_tsp_direct_sampling_N_10_energy_2.777140099483052.png',
                                     'book/histogram.png',
                                     'book/sphere-test.py',
                                     'homework_7/A3.png',
                                     'book/template.png',
                                     'book/tests.cpp',
                                     'homework_6/plot_B1_beta4.5.txt',
                                     'lecture_6/plot-path_slice.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_42.0.png',
                                     'book/figs',
                                     'tutorial_1/pebble_basic_movie_02.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_40.0.png',
                                     'book/Untitled 1.csv',
                                     'tutorial_1/pebble_dual_movie_epsilon_44.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.887650445053426.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.9150180300816.png',
                                     'book/test-gray.cpp',
                                     'lecture_8/plot_cluster_av_magnetization_L12.png',
                                     'book/exercise_5_11.db',
                                     'book/out.txt',
                                     'tutorial_1/pebble_dual_movie_epsilon_30.0.png',
                                     'lecture_3/plot-direct_pins_noreject.png',
                                     'book/enumerate-ising.hpp',
                                     'book/md000112.npz',
                                     'tutorial_1/3x3_pebble_run_09.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_10_energy_2.777140099483052.png',
                                     'book/md',
                                     'tutorial_1/pebble_dual_movie_epsilon_14.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_50_energy_5.897286348519634.png',
                                     'exam',
                                     'book/baz.db',
                                     'book/test256.png',
                                     'book/boxmuller.py',
                                     'tutorial_1/3x3_pebble_run_03.png',
                                     'lecture_8/plot_local_av_magnetization_L8.png',
                                     'lecture_7/snapshot_bosons_3d_N0256_Tstar0.25.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_3.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_10.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_7.0.png',
                                     'homework_6/plot_B1_beta1.txt',
                                     'book/emn2x2.csv',
                                     'tutorial_1/pebble_dual_movie_epsilon_52.0.png',
                                     'homework_5/data_anharmonic_matrixsquaring_beta_4.0.dat',
                                     'book/md.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_32.0.png',
                                     'tutorial_2/direct_disks_any.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_50.0.png',
                                     'book/md000189.npz',
                                     'homework_7/data_boson_configuration_anisotropic.txt',
                                     'homework_9/plot_tsp_direct_sampling_N_10_energy_2.7771400994830526.png',
                                     'homework_6/plot_B1_path_beta4.5.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_41.0.png',
                                     'homework_7/data_boson_configuration.txt',
                                     'book/poeschl-teller.png',
                                     'tutorial_1/pebble_basic_movie_08.png',
                                     'tutorial_1/3x3_pebble_run_00.png',
                                     'homework_6/plot_B1_path_beta1.png',
                                     'book/md000190.npz',
                                     'tutorial_1/pebble_dual_movie_epsilon_58.0.png',
                                     'tutorial_1/3x3_pebble_run_04.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_22.0.png',
                                     'homework_1/markov_sampling_rms_deviation.png',
                                     'book/edge_ising.csv',
                                     'homework_6/plot_B1_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_15.0.png',
                                     'homework_9/plot_tsp_simulated_annealing_N_100_energy_7.993864274585397.png',
                                     'homework_6/plot_B3_path_beta20.0.png',
                                     'homework_7/plot_boson_configuration_0.7.png',
                                     'tutorial_1/3x3_pebble_run_02.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_6.0.png',
                                     'homework_7/desktop.ini',
                                     'homework_6/plot_B1_path_beta0.1.png',
                                     'book/issue18.png',
                                     'book/emn4x4.csv',
                                     'book/mag.csv',
                                     'tutorial_1/pebble_dual_movie_epsilon_59.0.png',
                                     'book/check.csv',
                                     'lecture_2/direct_disks_box_multirun_b1.png',
                                     'homework_7/A1.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_16.0.png',
                                     'tutorial_1/3x3_pebble_run_07.png',
                                     'book/emn4x4reduced.csv',
                                     'book/Makefile',
                                     'book/pair-time.png',
                                     'homework_6/plot_C2_beta20.0.png',
                                     'lecture_3/plot-direct_pins-configuration.png',
                                     'homework_6/plot_B3_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_45.0.png',
                                     'homework_6/plot_C1_path_beta20.0.png',
                                     'tutorial_1/pebble_dual_movie_epsilon_27.0.png'],
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-list = [loc('book/binomialconvolution.py'),
                  loc('book/direct-gamma.py'),
                  loc('book/direct-plot.py'),
                  loc('book/direct.py'),
                  loc('book/directDisksAny.py'),
                  loc('book/large-markov.py'),
                  loc('book/levy-convolution.py'),
                  loc('book/markov-pi.py'),
                  loc('book/markov-zeta.py'),
                  loc('book/markovdiscretepebble.py'),
                  loc('book/naivegauss.py'),
                  loc('book/permutation-histogram.py'),
                  loc('book/permutation.py'),
                  loc('book/README.md'),
                  loc('book/smac.py'),
                  loc('book/smacfiletoken.py'),
                  loc('book/template.py'),
                  loc('lecture_1/direct_pi.py'),
                  loc('lecture_1/direct_pi_multirun.py'),
                  loc('lecture_1/markov_pi.py'),
                  loc('lecture_1/markov_pi_multirun.py'),
                  loc('lecture_1/pebble_basic.py'),
                  loc('lecture_1/pebble_basic_inhomogeneous.py'),
                  loc('README.md')]
proj.file-type = 'normal'
proj.launch-config = {loc('book/binomialconvolution.py'): ('project',
        ('--show',
         '')),
                      loc('book/cpp_mcmc.py'): ('project',
        ('--show \n',
         '')),
                      loc('book/data-bunch-discrete-pebble.py'): ('project',
        ('--show --N 6',
         '')),
                      loc('book/direct-disks.py'): ('project',
        ('--show  --sigma  0.03125',
         '')),
                      loc('book/direct-gamma-zeta.py'): ('project',
        ('--show -n 10000',
         '')),
                      loc('book/direct-gamma.py'): ('project',
        ('10000 --show',
         '')),
                      loc('book/direct-needle.py'): ('project',
        ('--show  -b 1 -a  3.14159265 --N 100000 --m 50000',
         '')),
                      loc('book/edge_ising.py'): ('project',
        ('-o edges4x4 -m 4 -n 4',
         '')),
                      loc('book/exercise_1_11.py'): ('project',
        ('--show -N 10000',
         '')),
                      loc('book/exercise_1_12.py'): ('project',
        ('--show --K 7 -n 1000',
         '')),
                      loc('book/exercise_1_12a.py'): ('project',
        ('--show --K 3 30 5',
         '')),
                      loc('book/exercise_1_14.py'): ('project',
        ('--help',
         '')),
                      loc('book/exercise_1_16.py'): ('project',
        ('--show',
         '')),
                      loc('book/exercise_1_21.py'): ('project',
        (' --show --zeta -0.49',
         '')),
                      loc('book/exercise_5.7.py'): ('project',
        ('-p edges2x2.csv -i emn2x2.csv --show',
         '')),
                      loc('book/exercise_5_10.py'): ('project',
        ('-m 6 -n 6 --periodic --Nsteps 10000 --Niterations 3 -f 5000 --show --T 4.0 ',
         '')),
                      loc('book/exercise_5_10a.py'): ('project',
        ('--show',
         '')),
                      loc('book/exercise_5_10b.py'): ('project',
        ('--Nsteps 25000  --show --Niterations 3 -m 6 -n 6  --T 1.0 --periodic',
         '')),
                      loc('book/exercise_5_11.py'): ('project',
        ('--Nsteps 10000 --show   --periodic -m 6 -n 6',
         '')),
                      loc('book/exercise_5_2.py'): ('project',
        ('-m 6 -n 6 --frequency 1000000',
         '')),
                      loc('book/exercise_5_6.py'): ('project',
        ('--show  --T 2.5 5 2.5',
         '')),
                      loc('book/exercise_5_7.py'): ('project',
        ('-p edges4x4 -i emn4x4 --show',
         '')),
                      loc('book/hist-plot.py'): ('project',
        ('--show',
         '')),
                      loc('book/ising_stats.py'): ('project',
        ('--input 6x6.csv --show',
         '')),
                      loc('book/markov-disks.py'): ('project',
        ('--show   --N 100000 --frequency 1000 --periodic --sigma 0.015 --Disks 256 --plot test256 ',
         '')),
                      loc('book/markov-driver.py'): ('project',
        ('--show  --T 9999999999999',
         '')),
                      loc('book/markov-zeta.py'): ('project',
        ('--show',
         '')),
                      loc('book/matrix-square-check.py'): ('project',
        ('--show --beta 0.1',
         '')),
                      loc('book/matrix-square.py'): ('project',
        ('--N 1 --show',
         '')),
                      loc('book/md-plot.py'): ('project',
        ('--show --input md\\check.csv',
         '')),
                      loc('book/md-viz.py'): ('project',
        ('md000575.npz --show',
         '')),
                      loc('book/md.py'): ('project',
        ('--N 1000000 --n 10 --sigma 0.001',
         '')),
                      loc('book/pair-time.py'): ('project',
        ('--show',
         '')),
                      loc('book/poeschl-teller.py'): ('project',
        ('--show',
         '')),
                      loc('book/poschl-teller.py'): ('project',
        ('--show',
         '')),
                      loc('book/ran-perm-alt.py'): ('project',
        ('--show',
         '')),
                      loc('book/ran-perm.py'): ('project',
        ('--show --N 10000',
         '')),
                      loc('book/spheres2.py'): ('project',
        ('--help',
         '')),
                      loc('book/template.py'): ('project',
        ('--show',
         '')),
                      loc('book/thermo_db.py'): ('project',
        ('--input exercise_5_11 --show',
         '')),
                      loc('book/thermo_ising.py'): ('project',
        ('-i  m000000 --show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('book/binomialconvolution.py'): ['--show',
        '--show --theta 0.5 --N 4'],
                         loc('book/cpp_mcmc.py'): ['--show \n',
        '--show -i  markov_beta_0_25_100_100000000.txt\n',
        '--show'],
                         loc('book/data-bunch-discrete-pebble.py'): ['--show --N 6',
        '--show --N 6 --lower 0',
        '--show --N 10 --lower 0',
        '--show --N 12 --lower 0',
        '--show --N 12',
        '--show --N 20 --lower 0',
        '--show --N 20',
        '--show --N 16 --lower 24',
        '--show --N 16',
        '--show --N 10',
        '--show --N 24',
        '--show --N 4',
        '--show --N 3',
        '--show'],
                         loc('book/direct-disks.py'): ['--show  --sigma  0.03125',
        '--show  --sigma  0.03125  --N 3',
        '--show  --sigma  0.03125  --N 5',
        '--show  --sigma  0.03125  ',
        '--show  --sigma 0.25 --NTrials 5',
        '--show  --sigma 0.25 --Ntrials 5',
        '--show  --sigma 0.25',
        '--show  --sigma 0.03125  ',
        '--show  --sigma 0.03125  0.06250 0.125 0.25 --NTrials 100',
        '--show  --sigma 0.03125  0.06250 0.125 0.25 --NTrials 25',
        '--show  --sigma 0.03125  0.06250 0.125 0.25 --NTRials 25',
        '--show  --sigma 0.03125  0.06250 0.125 0.25',
        '--show  --sigma 0.03125  0.06250 0.125',
        '--show  --sigma 0.03125  0.06250',
        '--show  --sigma 0.03125 ',
        '--show --plot test --sigma 0.03125 ',
        '--show --plot test --sigma 0.03125  --periodic',
        '--show --plot test --sigma 0.03125 --N 100 --periodic',
        '--show --plot test --sigma 0.03125 --N 100',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.1750 --N 100000',
        '--show --plot test1 --sigma 0.03125 0.0625 0.125 0.1750 --periodic --N 100000',
        '--show --plot test1 --sigma 0.03125 0.0625 0.125 0.1750 --periodic',
        '--show --plot test1 --sigma 0.03125 0.0625 0.125 0.1750 ',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.1750',
        '--show --plot test --sigma 0.03125 0.0625, 0.125 0.1750',
        '--show --plot test --sigma 0.03125 0.0625, 0.125, 0.1750',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.1875',
        '--show --plot test --sigma 0.03125 0.0625 0.125 0.25',
        '--show --plot test --sigma 0.03125 0.0625 0.125',
        '--show --plot test --sigma 0.03125 0.0625 0.125 --L 1 1'],
                         loc('book/direct-gamma-zeta.py'): ['--show -n 10000',
        '--show'],
                         loc('book/direct-gamma.py'): ['10000 --show',
        '1000 --show',
        '--show',
        '10 --show --N 10',
        '10 --show',
        '100000 --show',
        '100000',
        '10000',
        '10000 --N 1 2 3 4',
        '10000000',
        '1000'],
                         loc('book/direct-needle.py'): ['--show  -b 1 -a  3.14159265 --N 100000 --m 50000',
        '--show  -b 1 -a  3.14159265 --n 100000 --m 50000',
        '--show  -b 1 -a  3.14159265',
        '--show -N 100 -m 50 -b 1 -a  3.14159265',
        '--show -N 100 -m 50 -b 2 -a  1',
        '--show -N 100 -m 50 -b 1 -a  3.14159 ',
        '--show -N 10000 -m 5000 -b 1 -a  3.14159 ',
        '--show -N 10000 -m 5000 -b 2 -a 1',
        '--show -N 10000 -m 5000 -b 1 -a 3.14159 ',
        '--show -N 10000 -m 5000 -b 1 -a 3.14159 --rows 10 --columns 10',
        '--show -N 10000 -m 5000 -b 1 -a 3.14159',
        '--show -N 10000 -m 5000 -b 1 -a 3.5',
        '--show -N 10000 -m 5000 -b 1 -a 0.5',
        '--show -N 10000 -m 5000 -b 3 -a 2',
        '--show -N 10000 -m 5000 -b 2.0',
        '--show -N 100000 -m 50000 -b 2.0',
        '--show -N 100000 -m 50000',
        '--show -N 100000',
        '--show -N 10000',
        '--show'],
                         loc('book/edge_ising.py'): ['-o edges4x4 -m 4 -n 4',
        '-o edges2x2 -m 2 -n 2',
        '-o bar.txt -m 2 -n 2',
        '-o bar.txt',
        '-o foo',
        '-o foo.csv',
        '-m 2 -n 2'],
                         loc('book/exercise_1_11.py'): ['--show -N 10000',
        '--show -N 1000',
        '--show -N 100',
        '--show -N 100000',
        '--show -N 1000000',
        '--show -N 100000 --x0 -1 --x1 1 --y0 1 --y1 1',
        '--show -N 100000 --x0 -1 --x1 1 --y0 -1 --y1 1',
        '--show -N 100000 --x0 -1- -x1 1 --y0 -1 --y1 1',
        '--show ',
        '--show --N 10000',
        '--show --N 1000000',
        '--show'],
                         loc('book/exercise_1_12.py'): ['--show --K 7 -n 1000',
        '--show --K 5',
        '--show --K 3',
        '--show',
        '--show -K 7 --sigma 1',
        '--show -K 7 --sigma 1.1',
        '--show -K 7 --sigma 2',
        '--show -K 7',
        '--show -K 10'],
                         loc('book/exercise_1_12a.py'): ['--show --K 3 30 5',
        '--show --K 5 12 2 8',
        '--show --K 5 12 2',
        '--show'],
                         loc('book/exercise_1_14.py'): ['--help',
        '--show -n 100000 --rows 2 --columns 2',
        '--show -n 100000 -k 4',
        '--show -n 100000 -k 3',
        '--show -n 100000 -k 2',
        '--show -n 100000',
        '--show -n 10000',
        '--show'],
                         loc('book/exercise_1_16.py'): ['--show',
        '--show --K 1000 -n 10 -N 1000',
        '--show --K 1000 -n 10 -N 100',
        '--show --K 1000 -n 10',
        '-K 10 --show',
        '-K 10'],
                         loc('book/exercise_1_21.py'): [' --show --zeta -0.49',
        ' --show ',
        ' --show  --N 10000',
        ' --show',
        ' --show --n 10',
        '--zeta 0.25 --show',
        '--zeta 0.49 --show',
        '--eta 0.49'],
                         loc('book/exercise_5.7.py'): ['-p edges2x2.csv -i emn2x2.csv --show',
        '-p edges2x2 -i emn2x2 --show',
        '--help',
        '-p edge_ising --show',
        '-i edge_ising --show',
        '-i edge_ising'],
                         loc('book/exercise_5.9.py'): ['-i edge_ising'],
                         loc('book/exercise_5_10.py'): ['-m 6 -n 6 --periodic --Nsteps 10000 --Niterations 3 -f 5000 --show --T 4.0 ',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 10 -f 5000 --show --T 4.0 ',
        '-m 6 -n 6 --periodic --Nsteps 100000 --Niterations 10 -f 5000 --show --T 4.0 ',
        '-m 6 -n 6 --periodic --Nsteps 100000 --Niterations 1 -f 5000 --show --T 4.0 ',
        '-m 6 -n 6 --periodic --Nsteps 10000 --Niterations 1 -f 5000 --show --T 4.0 ',
        '-m 6 -n 6 --periodic --Nsteps 1000 --Niterations 1 -f 5000 --show --T 4.0 ',
        '-m 6 -n 6 --periodic --Nsteps 10000 --Niterations 1 -f 5000 --show --T 4.0 --cache',
        '-m 6 -n 6 --periodic --Nsteps 10000000 --Niterations 20 -f 00000 --show --T 4.0',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 20 -f 00000 --show --T 4.0',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 5 -f 00000 --show --T 4.0',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 5 -f 00000 --show --T 0.5',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 2 -f 00000 --show --T 0.5',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 5 -f 00000 --show --T 2.0',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 5 -f 00000 --show',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 5 -f 100000 --show',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 5 -f 100000 --show --lowest',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 1 -f 100000 --show --lowest',
        '-m 6 -n 6 --periodic --Nsteps 10000000 --Niterations 1 -f 100000 --show --lowest',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 1 -f 100000 --show',
        '-m 6 -n 6 --periodic --Nsteps 10000000 --Niterations 1 -f 100000 --show',
        '-m 6 -n 6 --periodic --Nsteps 1000000 --Niterations 1 -f 100000',
        '-m 6 -n 6 --periodic --Nsteps 100000 --Niterations 1 -f 10000'],
                         loc('book/exercise_5_10a.py'): ['--show'],
                         loc('book/exercise_5_10b.py'): ['--Nsteps 25000  --show --Niterations 3 -m 6 -n 6  --T 1.0 --periodic',
        '--Nsteps 250000  --show --Niterations 1 -m 6 -n 6  --T 1.0 --periodic',
        '--Nsteps 25000000  --show --Niterations 1 -m 6 -n 6  --T 1.0 --periodic',
        '--Nsteps 25000  --show --Niterations 5 -m 6 -n 6  --T 4.0 --periodic',
        '--Nsteps 25000  --show --Niterations 5 -m 6 -n 6 --Nburn 1000 --T 4.0 --periodic --frequency 5000',
        '--Nsteps 25000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 1000 --T 0.5 4.0 0.5 --periodic --frequency 5000',
        '--Nsteps 25000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 0 --T 0.5 4.0 0.5 --periodic --frequency 5000',
        '--Nsteps 25000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 0 --T 0.5 3.5 1 --periodic --frequency 5000',
        '--Nsteps 10000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 0 --T 0.5 3.5 1 --periodic --frequency 5000',
        '--Nsteps 10000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 0 --T 0.5 3.5 1 --periodic --frequency 1000',
        '--Nsteps 1000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 0 --T 0.5 3.5 1 --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 0 --T 0.5  --periodic'],
                         loc('book/exercise_5_11.py'): ['--Nsteps 10000 --show   --periodic -m 6 -n 6',
        '--Nsteps 10000 --show   --periodic -m 6 -n 6 --fresh',
        '--Nsteps 10000 --show   --periodic -m 6 -n 6 --database baz  --T 0.5 --fresh',
        '--Nsteps 10000 --show   --periodic -m 6 -n 6 --database baz  --T 4.0 --fresh',
        '--Nsteps 1000 --show   --periodic -m 6 -n 6 --database baz  --T 4.0 --fresh',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --database baz  --T 4.0 --fresh',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --database baz  --T 0.5 --fresh',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --database baz  --T 0.5 --fresh --lowest',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --database baz  --T 0.5 --fresh --verbose',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --database bar  --T 0.5 --fresh',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --out bar  --T 0.5 --fresh',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --out bar  --T 0.5',
        '--Nsteps 7 --show   --periodic -m 6 -n 6 --out foo --T 0.5',
        '--Nsteps 3 --show   --periodic -m 6 -n 6 --out foo --T 0.5',
        '--Nsteps 3 --show   --periodic -m 6 -n 6 -out foo',
        '--Nsteps 100 --show   --periodic -m 6 -n 6 ',
        '--Nsteps 1000 --show   --periodic -m 6 -n 6 ',
        '--Nsteps 100 --show   --periodic -m 6 -n 6 --verbose --database bar --T 4',
        '--Nsteps 1000 --show   --periodic -m 6 -n 6 --verbose --database foo',
        '--Nsteps 1000 --show   --periodic -m 6 -n 6 --verbose',
        '--Nsteps 10 --show   --periodic -m 6 -n 6 ',
        '--Nsteps 10000 --show   --periodic -m 6 -n 6 ',
        '--Nsteps 1000 --show   --periodic -m 6 -n 6 --T 4',
        '--Nsteps 100 --show   --periodic -m 6 -n 6',
        '--Nsteps 1000 --show   --periodic -m 6 -n 6',
        '--Nsteps 1000 --show  --frequency 100 --periodic -m 6 -n 6',
        '--Nsteps 10000 --show  --periodic -m 6 -n 6',
        '--Nsteps 1000 --show  --periodic ',
        '--Nsteps 10000 --show  --periodic ',
        '--Nsteps 10000 --show  --periodic --cache'],
                         loc('book/exercise_5_2.py'): ['-m 6 -n 6 --frequency 1000000',
        '-m 6 -n 6 --frequency 100000',
        '-m 4 -n 4 --frequency 128',
        '-m 6 -n 6',
        '-m 4 -n 4',
        '-m 2 -n 2'],
                         loc('book/exercise_5_6.py'): ['--show  --T 2.5 5 2.5',
        '--show  --T 2.5 5 0.5',
        '--show',
        '--show --T 2.5 5'],
                         loc('book/exercise_5_7.py'): ['-p edges4x4 -i emn4x4 --show',
        '-p edges2x2 -i emn2x2 --show',
        '-h'],
                         loc('book/hist-plot.py'): ['--show',
        '--show  --input md/3dhist.csv',
        '--show --burn 10000 --input md/3dhist.csv',
        '--show --burn 1 --input md/3dhist.csv',
        '--show --burn 1 --input md/bar.csv',
        '--show --burn 1 -input md/bar.csv',
        '--show --burn 1000000',
        '--show --burn 200000'],
                         loc('book/ising-stats.py'): ['--energies 32',
        '--energies -32',
        '--energies 32 24 20 16'],
                         loc('book/ising.py'): ['-m 4 -n 4 --output emn4x4  --bounded',
        '-m 2 -n 2 --output emn2x2  --bounded',
        '-m 2 -n 2 --output emn2x2  --trace',
        '-m 2 -n 2 --output emn2x2  --bounded --trace',
        '-m 2 -n 2 --output emn2x2',
        '-m 2 -n 2 --output emn2x2.txt',
        '-m 2 -n 2 -output emn2x2.txt',
        '-m 2 -n 2 -out emn2x2.txt',
        '-m 2 -n 2 ',
        '-m 4 -n 4 --trace',
        '-m 4 -n 4',
        '-m 6 -n 6 -p 100000',
        '-m 6 -n 6 -9 100000',
        '-m 6 -n 6 -t 1000000',
        '-m 6 -n 6',
        '-m 2 -n 2',
        '--help'],
                         loc('book/ising_stats.py'): ['--input 6x6.csv --show',
        '--input 6x6.csv'],
                         loc('book/markov-disks.py'): ['--show   --N 100000 --frequency 1000 --periodic --sigma 0.015 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.02 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.01 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.05 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.1 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.001 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.0001 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --eta 0.48 --Disks 256 --plot test256 ',
        '--show   --N 100000 --frequency 1000 --periodic --sigma 0.001 --Disks 256 --plot test256 --delta 0.025',
        '--show   --N 100000 --frequency 1000 --periodic --eta 0.48 --Disks 256 --plot test256 --delta 0.025',
        '--show   --N 100000 --frequency 1000 --periodic --eta 0.48 --Disks 256 --plot test256',
        '--show   --N 10000 --frequency 100 --periodic --eta 0.48 --Disks 256 --plot test256',
        '--show   --N 1000 --frequency 100 --periodic --eta 0.48 --Disks 256 --plot test256',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --periodic --d 3',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --periodic --d 4',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --periodic',
        '--show  --delta 0.1 --N 100000 --frequency 10000',
        '--show  --delta 0.1 --N 100000 --frequency 10000 --sigma 0.25',
        '--show  --delta 0.1 --N 1000000 --frequency 10000',
        '--show  --burn 0 --N 1000000 --frequency 10000',
        '--show  --burn 0 --N 100000 ',
        '--show  --burn 0',
        '--show --N 100000 --frequency 10000 --sigma 0 --burn 0',
        '--show --N 100000 --frequency 10000 --sigma 0',
        '--show --N 100000 --frequency 10000 --sigma 0.15',
        '--show --N 100000 --frequency 10000',
        '--show --N 1000000 --frequency 100000 --delta 0.0125',
        '--show --N 10000 --frequency 1000 --delta 0.0125',
        '--show --N 10000 --frequency 1000 --delta 0.025',
        '--show --N 1000000 --frequency 10000 --sigma 0.0625 '],
                         loc('book/markov-driver.py'): ['--show'],
                         loc('book/markov-zeta.py'): ['--show'],
                         loc('book/markov_driver.py'): ['--show  --T 9999999999999',
        '--show  --T 0',
        '--show'],
                         loc('book/markov_ising.py'): ['--Nsteps 100000 -f 100 --show --Niterations 1 -m 6 -n 6 --Nburn 0 --T 2.5  --periodic',
        '--Nsteps 100000 -f 100 --show --Niterations 1 -m 6 -n 6 --Nburn 0 --T2.5  --periodic',
        '--Nsteps 100000 -f 100 --show --Niterations 1 -m 6 -n 6 --Nburn 0 --T 4.0  --periodic',
        '--Nsteps 100000 -f 100 --show --Niterations 1 -m 6 -n 6 --Nburn 0 --T 0.5  --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 25 -m 6 -n 6 --Nburn 0 --T 0.5  --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 10 -m 6 -n 6 --Nburn 0 --T 0.5  --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 3 -m 6 -n 6 --Nburn 0 --T 0.5  --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 1 -m 6 -n 6 --Nburn 0 --T 0.5  --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 1 -m 4 -n 4 --Nburn 0 --T 0.5 3.5 1.0  --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 1 -m 4 -n 4 --Nburn 0 --T 2.5 5 2.5  --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 1 -m 4 -n 4 --Nburn 0 --T 2.5 5   --periodic',
        '--Nsteps 1000 -f 100 --show --Niterations 1 -m 4 -n 4 --Nburn 0 -T 5   --periodic',
        '--Nsteps 1000000 -f 50000 --show --Niterations 1 -m 4 -n 4 --Nburn 2 -T 5 --lowest  --periodic',
        '--Nsteps 1000000 -f 50000 --show --Niterations 1 -m 4 -n 4 --Nburn 2 -T 5 --lowest  --periodic --cache',
        '--Nsteps 1000000 -f 10000 --show --Niterations 1 -m 4 -n 4 --Nburn 2 -T 5 --lowest  --periodic --cache',
        '--Nsteps 1000000 -f 10000 --show --Niterations 1 -m 4 -n 4 --Nburn 2 -T 5 --lowest  --periodic',
        '--Nsteps 1000 -f 10000 --show --Niterations 1 -m 4 -n 4 --Nburn 2 -T 5 --lowest  --periodic',
        '--Nsteps 1000 -f 10000 --show --Niterations 1 -m 4 -n 4 --Nburn 2 -T 5 --lowest',
        '--Nsteps 1000 -f 10000 --show --Niterations 1 -m 4 -n 4 --periodic --Nburn 2 -T 5 --lowest',
        '--Nsteps 1000 -f 10000 --show --Niterations 1 -m 4 -n 4 --periodic --Nburn 2 -T 5',
        '--Nsteps 1000 -f 10000 --show --Niterations 1 -m 4 -n 4 --periodic --Nburn 2',
        '--Nsteps 100000 -f 10000 --show --Niterations 5 -m 4 -n 4 --periodic --Nburn 2',
        '--Nsteps 100000 -f 10000 --show --Niterations 5 -m 4 -n 4 --periodic --Nburn 1',
        '--Nsteps 100000 -f 10000 --show --Niterations 5 -m 4 -n 4 --periodic --burn 1',
        '--Nsteps 100000 -f 10000 --show --Niterations 5 -m 4 -n 4 --periodic',
        '--Nsteps 100000 -f 10000 --show --Niterations 5 -m 4 -n 4 --periodic -T 1000 1002 1',
        '--Nsteps 100000 -f 10000 --show --Niterations 5 -m 4 -n 4 --periodic --T 1.0 2.0 0.25',
        '--Nsteps 100000 -f 1000 --show --Niterations 5 -m 4 -n 4 --periodic',
        '--Nsteps 100000 -f 1000 --show --Niterations 5 -m 4 -n 4',
        '--Nsteps 1000 -f 1000 --show --Niterations 5 -m 4 -n 4'],
                         loc('book/matrix-square-check.py'): ['--show --beta 0.1',
        '--show --beta 0.2',
        '--show beta 0.2',
        '--show'],
                         loc('book/matrix-square.py'): ['--N 1 --show',
        '--rows 2 --cols 2 --show',
        '--N 4 --show',
        '--N 3 --show',
        '--N 2 --show',
        '--N 2',
        '--N 1',
        '--plot foo.jpg',
        '--plot foo',
        '--show --rows 2 --cols 1',
        '--show',
        '--rows 2 --cols 2',
        '--help',
        '--show --beta 0.001',
        '--beta 5'],
                         loc('book/md-plot.py'): ['--show --input md\\check.csv',
        '--show --input md\\ex-2-6.csv',
        '--show --input md\\check.csv --bins fd',
        '--show --input md\\3d.csv',
        '--show --input md\\3d.csv --bins sqrt',
        '--help',
        '--show --input md\\3d.csv --bw_adjust 0.5',
        '--show --input md\\3d.csv bw_adjust 0.5',
        '--show --input md\\3d.csv --bw-adjust 0.5',
        '--show --input md/3d.csv',
        '--show --input md/foo.csv',
        '--show'],
                         loc('book/md-viz.py'): ['md000575.npz --show',
        'md000191.npz --show',
        'md000128.npz --show',
        'md000001.npz --show',
        'md000113.npz --show',
        '--show'],
                         loc('book/md.py'): ['--N 1000000 --n 10 --sigma 0.001',
        '--N 1000000 --n 10',
        '--N 1000 --n 10',
        '--N 100 --n 10',
        '--help',
        '--show ',
        '--show --N 10000 --L 1 2 3',
        '--show --N 10000',
        '--show --N 10000 --L 1',
        '--show --N 10000000',
        '--show --N 1000',
        '--show --N 25',
        '--N 25',
        '--N 5'],
                         loc('book/pair-time.py'): ['--show',
        '--show --N 10000',
        '--show  --N 10000',
        '--show  --N 100',
        '--show  --N 1000',
        '--show  --N 10',
        '--show  --N 1000000',
        '--show  --N 100000',
        '--show --N 100000',
        '--show --N 1000',
        '--show --N 1000000',
        '--show --seed 1942812603435365645',
        '--show  --sigma 0.01',
        '--show --seed 666 --sigma 0.01',
        '--show --seed 666',
        '--show --seed 1',
        '--d 4',
        '--d 3',
        '--help'],
                         loc('book/poeschl-teller.py'): ['--show',
        '--help'],
                         loc('book/poschl-teller.py'): ['--show'],
                         loc('book/ran-perm-alt.py'): ['--show'],
                         loc('book/ran-perm.py'): ['--show --N 10000',
        '--show --N 1000000',
        '--show --N 100000',
        '--show --N 1000',
        '--show'],
                         loc('book/spheres2.py'): ['--help',
        '--dt 0.1 --N 100000 --show --m 100',
        '--dt 0.1 --N 1000000 --show --m 100',
        '--dt 0.1 --N 100000 --show',
        '--dt 0.1 --N 10000 --show',
        '--dt 0.1 --N 1000 --show',
        '--dt 0.001 --show',
        '--dt 0.1 --show',
        '--dt 0.1',
        '--dt 25',
        '--dt 0.25'],
                         loc('book/template.py'): ['--show',
        '--help',
        '-h'],
                         loc('book/thermo_db.py'): ['--input exercise_5_11 --show',
        '--input exercise_5_11 --show -m 5',
        '--input exercise_5_11 --show -m 4',
        '--input exercise_5_11'],
                         loc('book/thermo_ising.py'): ['-i  m000000 --show',
        '-i  m000000.csv --show',
        '-i exercise_5_11 --show',
        '-i exercise_5_11']}
debug.show-args-dialog = {loc('book/enumerate_ising.py'): False,
                          loc('book/markov_ising.py'): False}
edit.file-encoding = {loc('README.md'): 'utf_8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'dtaAtJloNhSft7SabFzspl0xqEmVIDbK',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.241248097412481,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files/Wing Personal 10/resources/builtin-pi-files/__os__/win32/3.12/builtins.pi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files/Wing Personal 10/resources/builtin-pi-files/__os__/win32/3.12/builtins.pi'),
                      'abs')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'),
                             '__version__')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'),
                      'Action')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/re.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Program Files (x86)/Wing Personal 8/resources/builtin-pi-files/__os__/win32/3.10/re.pi'),
                      'A')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/format.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/format.py'),
                      'ARRAY_ALIGN')]},
        loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/linalg/linalg.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/linalg/linalg.py'),
                      'array_function_dispatch')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/ntpath.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_mathtext.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_mathtext.py'),
                             '_log')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_mathtext.py'),
                      'Accent')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'),
                      'allow_rasterization')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/backends/backend_wxagg.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/backends/backend_wxagg.py'),
                      'FigureCanvasWxAgg')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/figure.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/figure.py'),
                      'figaspect')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/gridspec.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/patches.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/patches.py'),
                      'Annulus')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/texmanager.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/texmanager.py'),
                      'TexManager')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/fromnumeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'all')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/multiarray.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/multiarray.pyi'),
                      'add_docstring')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/numeric.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/numeric.py'),
                      'allclose')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/_datasource.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/_datasource.py'),
                             '_open')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/_datasource.py'),
                      'DataSource')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/function_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/function_base.py'),
                      'angle')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/stride_tricks.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/stride_tricks.py'),
                      'as_strided')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/random/mtrand.pyi'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/random/mtrand.pyi'),
                      'beta')]},
        loc('../AppData/Local/Programs/Python/Python312/Lib/unittest/case.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python312/Lib/unittest/case.py'),
                      'addModuleCleanup')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('book/README.md'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': None},
        loc('book/backends.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('book/backends.py'),
        'e')]},
        loc('book/binomialconvolution.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('book/binomialconvolution.py'),
                      'binomial_convolution')]},
        loc('book/buffon.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('class def',
        loc('book/buffon.py'),
        'BuffonTest')]},
        loc('book/cluster_ising.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('book/cluster_ising.py'),
        'ClusterIsing')]},
        loc('book/direct-disks.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/direct-disks.py'),
        'args')]},
        loc('book/direct-gamma-zeta.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('book/direct-gamma-zeta.py'),
                      'direct_gamma_zeta')]},
        loc('book/direct-gamma.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('generic attribute',
        loc('book/direct-gamma.py'),
        'bincenters')]],
                                      'top-node': [('generic attribute',
        loc('book/direct-gamma.py'),
        'args')]},
        loc('book/direct-needle.py'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('book/direct-needle.py'),
        'args')]],
                                       'top-node': [('generic attribute',
        loc('book/direct-needle.py'),
        'args')]},
        loc('book/direct.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('book/direct.py'),
        'iter')]},
        loc('book/enumerate_ising.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('book/enumerate_ising.py'),
                      'enumerate_ising')]},
        loc('book/exercise_1_12.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('book/exercise_1_12.py'),
        'args')]},
        loc('book/exercise_1_12a.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('book/exercise_1_12a.py'),
                      'args')]},
        loc('book/exercise_5.7.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/exercise_5.7.py'),
        'args')]},
        loc('book/exercise_5_10.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('book/exercise_5_10a.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('book/exercise_5_10a.py'),
                      'args')]},
        loc('book/exercise_5_10b.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('book/exercise_5_10b.py'),
                      'accepted')]},
        loc('book/exercise_5_11.py'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribute',
        loc('book/exercise_5_11.py'),
        'args')]],
                                       'top-node': [('generic attribute',
        loc('book/exercise_5_11.py'),
        'args')]},
        loc('book/exercise_5_2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/exercise_5_2.py'),
        'args')]},
        loc('book/exercise_5_4.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/exercise_5_4.py'),
        'args')]},
        loc('book/exercise_5_6.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/exercise_5_6.py'),
        'args')]},
        loc('book/exercise_5_7.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/exercise_5_7.py'),
        'args')]},
        loc('book/geometry.py'): {'expanded-nodes': [[('class def',
        loc('book/geometry.py'),
        'Geometry')]],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('book/geometry.py'),
        'Box')]},
        loc('book/ising.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('class def',
        loc('book/ising.py'),
        'EdgeTest')]},
        loc('book/ising_db.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('book/ising_db.py'),
        'ContextManager')]},
        loc('book/ising_enum.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('book/ising_enum.py'),
        'args')]},
        loc('book/ising_stats.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('function def',
        loc('book/ising_stats.py'),
        'parse_arguments')]],
                                     'top-node': [('generic attribute',
        loc('book/ising_stats.py'),
        'args')]},
        loc('book/markov-disks.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('book/markov_ising.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('book/markov_ising.py'),
        'accepted')]},
        loc('book/md-plot.py'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': [('generic attribute',
        loc('book/md-plot.py'),
        'args')]},
        loc('book/md-viz.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('generic attribute',
        loc('book/md-viz.py'),
        'args')]},
        loc('book/md.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('generic attribute',
        loc('book/md.py'),
        'args')]},
        loc('book/naivegauss.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('book/naivegauss.py'),
        'frequencies')]},
        loc('book/pair-time.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('book/pair-time.py'),
        '_')]],
                                   'top-node': [('generic attribute',
        loc('book/pair-time.py'),
        'args')]},
        loc('book/poeschl-teller.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('book/poeschl-teller.py'),
                      'args')]},
        loc('book/smac.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('class def',
        loc('book/smac.py'),
        'BoxMuller')]},
        loc('book/smacfiletoken.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('book/smacfiletoken.py'),
        'make_temp_file')]},
        loc('book/template.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('book/template.py'),
        'args')]},
        loc('book/thermo.py'): {'expanded-nodes': [],
                                'selected-nodes': [],
                                'top-node': [('class def',
        loc('book/thermo.py'),
        'TestThermo')]},
        loc('book/thermo_db.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('book/thermo_db.py'),
        'args')]},
        loc('homework_8/C2.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('homework_8/C2.py'),
        'beta')]},
        loc('lecture_2/markov_disks_box.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('lecture_2/markov_disks_box.py'),
                             'sigma')]],
        'top-node': [('generic attribute',
                      loc('lecture_2/markov_disks_box.py'),
                      'delta')]},
        loc('lecture_8/energy_ising.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('lecture_8/energy_ising.py'),
                      'energy')]},
        loc('lecture_8/gray.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': None},
        loc('lecture_8/thermo_ising.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('lecture_8/thermo_ising.py'),
                      'cv')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None}},
                                'browse_mode': 'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {'Derived Classes': False,
        'Imported': False,
        'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.3462157809983897,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': 'is_within',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': 'correlation_times',
                                       'fReverse': False,
                                       'fSearchText': 'lower',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2,
                       'sel-line-start': 159,
                       'selection_end': 159,
                       'selection_start': 159,
                       'zoom': 0}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('book/data-bunch-discrete-pebble.py'),
        {'attrib-starts': [],
         'code-line': "    ax1.scatter(steps,np.abs(Frequency[0,args.lower:] - 1/9),label='Deviation from expected frequency',s=5,c='r')\r\n",
         'first-line': 124,
         'folded-linenos': [],
         'sel-line': 136,
         'sel-line-start': 5295,
         'selection_end': 5384,
         'selection_start': 5382,
         'zoom': 0},
        1747886921.8123734],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    for i in range(0,len(correlation_times)-1):\r\n',
          'first-line': 124,
          'folded-linenos': [],
          'sel-line': 138,
          'sel-line-start': 5499,
          'selection_end': 5541,
          'selection_start': 5524,
          'zoom': 0},
         1747886923.7655473],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '        ax1.axvspan(correlation_times[i],ct[i+1],\r\n',
          'first-line': 129,
          'folded-linenos': [],
          'sel-line': 139,
          'sel-line-start': 5548,
          'selection_end': 5585,
          'selection_start': 5568,
          'zoom': 0},
         1747886924.8693912],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '        ax1.axvspan(correlation_times[i],correlation_times[i+1],\r\n',
          'first-line': 129,
          'folded-linenos': [],
          'sel-line': 139,
          'sel-line-start': 5548,
          'selection_end': 5606,
          'selection_start': 5589,
          'zoom': 0},
         1747886925.826255],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             70)],
          'code-line': "    parser.add_argument('--show', action = 'store_true', help   = 'Show plot')\r\n",
          'first-line': 71,
          'folded-linenos': [],
          'sel-line': 76,
          'sel-line-start': 3426,
          'selection_end': 3463,
          'selection_start': 3461,
          'zoom': 0},
         1747886933.6416848],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    \r\n',
          'first-line': 125,
          'folded-linenos': [],
          'sel-line': 133,
          'sel-line-start': 5142,
          'selection_end': 5146,
          'selection_start': 5146,
          'zoom': 0},
         1747887048.3469145],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    correlation_times = get_correlation_times(CorrelationTime = -1/np.log(ev_2))\r\n',
          'first-line': 142,
          'folded-linenos': [],
          'sel-line': 137,
          'sel-line-start': 5244,
          'selection_end': 5258,
          'selection_start': 5258,
          'zoom': 0},
         1747950541.545351],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    correlation_times = get_correlation_times(CorrelationTime = -1/np.log(ev_2))\r\n',
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 137,
          'sel-line-start': 5244,
          'selection_end': 5258,
          'selection_start': 5258,
          'zoom': 0},
         1747950550.1281474],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    correlation_times = get_correlation_times(CorrelationTime = -1/np.log(ev_2))\r\n',
          'first-line': 127,
          'folded-linenos': [],
          'sel-line': 137,
          'sel-line-start': 5244,
          'selection_end': 5278,
          'selection_start': 5277,
          'zoom': 0},
         1747950552.30494],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    correlation_times = get_correlation_times(CorrelationTime = -1/np.log(ev_2))\r\n',
          'first-line': 127,
          'folded-linenos': [],
          'sel-line': 137,
          'sel-line-start': 5244,
          'selection_end': 5316,
          'selection_start': 5314,
          'zoom': 0},
         1747950553.1383047],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    steps = np.array(range(args.lower,2**args.N))\r\n',
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 143,
          'sel-line-start': 5433,
          'selection_end': 5468,
          'selection_start': 5465,
          'zoom': 0},
         1747950558.7737308],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    steps = np.array(range(args.lower,2**args.N))\r\n',
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 143,
          'sel-line-start': 5433,
          'selection_end': 5469,
          'selection_start': 5465,
          'zoom': 0},
         1747950560.1316183],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': "    ax1.scatter(steps,Ev2_n,label='Powers of second eigenvalue',s=5,c='b')\r\n",
          'first-line': 133,
          'folded-linenos': [],
          'sel-line': 146,
          'sel-line-start': 5586,
          'selection_end': 5613,
          'selection_start': 5613,
          'zoom': 0},
         1747950590.0612648],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [('parse_arguments|0|',
                             70)],
          'code-line': "    parser.add_argument('--N',type=int,default=10)\r\n",
          'first-line': 73,
          'folded-linenos': [],
          'sel-line': 77,
          'sel-line-start': 3506,
          'selection_end': 3556,
          'selection_start': 3556,
          'zoom': 0},
         1747950598.773975],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': '    steps = np.array(range(2**args.N))\r\n',
          'first-line': 127,
          'folded-linenos': [],
          'sel-line': 142,
          'sel-line-start': 5378,
          'selection_end': 5405,
          'selection_start': 5405,
          'zoom': 0},
         1747950628.6186607],
        [loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py'),
         {'attrib-starts': [('Axes|0|',
                             46)],
          'code-line': '    def set_title(self, label, fontdict=None, loc=None, pad=None, *, y=None,\n',
          'first-line': 92,
          'folded-linenos': [],
          'sel-line': 103,
          'sel-line-start': 3380,
          'selection_end': 3397,
          'selection_start': 3388,
          'zoom': 0},
         1747950630.8256507],
        [loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py'),
         {'attrib-starts': [('Axes|0|',
                             46),
                            ('Axes|0|.scatter|0|',
                             4508)],
          'code-line': '            raise ValueError("x and y must be the same size")\n',
          'first-line': 4634,
          'folded-linenos': [],
          'sel-line': 4651,
          'sel-line-start': 183492,
          'selection_end': 183492,
          'selection_start': 183492,
          'zoom': 0},
         1747950646.714872],
        [loc('book/data-bunch-discrete-pebble.py'),
         {'attrib-starts': [],
          'code-line': "    ax1.scatter(steps,np.abs(Frequency[:,0] - 1/9),label='Deviation from expected frequency',s=5,c='r')\r\n",
          'first-line': 134,
          'folded-linenos': [],
          'sel-line': 144,
          'sel-line-start': 5420,
          'selection_end': 5462,
          'selection_start': 5462,
          'zoom': 0},
         1747950860.7786663],
        [loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py'),
         {'attrib-starts': [('Axes|0|',
                             46),
                            ('Axes|0|.scatter|0|',
                             4508)],
          'code-line': '            raise ValueError("x and y must be the same size")\n',
          'first-line': 4641,
          'folded-linenos': [],
          'sel-line': 4651,
          'sel-line-start': 183492,
          'selection_end': 183492,
          'selection_start': 183492,
          'zoom': 0},
         1747950866.0083303],
        [loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/__init__.py'),
         {'attrib-starts': [('_preprocess_data|0|',
                             1403),
                            ('_preprocess_data|0|.inner|0|',
                             1475)],
          'code-line': '            return func(ax, *map(sanitize_sequence, args), **kwargs)\n',
          'first-line': 1466,
          'folded-linenos': [],
          'sel-line': 1477,
          'sel-line-start': 52100,
          'selection_end': 52100,
          'selection_start': 52100,
          'zoom': 0},
         1747950866.8763936]],
        20),
        'current-loc': loc('book/data-bunch-discrete-pebble.py'),
        'editor-state-list': [(loc('book/data-bunch-discrete-pebble.py'),
                               {'attrib-starts': [],
                                'code-line': "    ax1.scatter(steps,np.abs(Frequency[0,:] - 1/9),label='Deviation from expected frequency',s=5,c='r')\r\n",
                                'first-line': 134,
                                'folded-linenos': [],
                                'sel-line': 144,
                                'sel-line-start': 5420,
                                'selection_end': 5462,
                                'selection_start': 5462,
                                'zoom': 0}),
                              (loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/__init__.py'),
                               {'attrib-starts': [('_preprocess_data|0|',
        1403),
        ('_preprocess_data|0|.inner|0|',
         1475)],
                                'code-line': '            return func(ax, *map(sanitize_sequence, args), **kwargs)\n',
                                'first-line': 1466,
                                'folded-linenos': [],
                                'sel-line': 1477,
                                'sel-line-start': 52100,
                                'selection_end': 52100,
                                'selection_start': 52100,
                                'zoom': 0}),
                              (loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py'),
                               {'attrib-starts': [('Axes|0|',
        46),
        ('Axes|0|.scatter|0|',
         4508)],
                                'code-line': '            raise ValueError("x and y must be the same size")\n',
                                'first-line': 4641,
                                'folded-linenos': [],
                                'sel-line': 4651,
                                'sel-line-start': 183492,
                                'selection_end': 183492,
                                'selection_start': 183492,
                                'zoom': 0})],
        'has-focus': True,
        'locked': False},
        [loc('book/data-bunch-discrete-pebble.py'),
         loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/__init__.py'),
         loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py')]),
                               'open_files': ['book/data-bunch-discrete-pebble.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1747950860.7426703),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1747950644.8738682),
                 'user_data': {}},
        'window-alloc': (4,
                         1,
                         1302,
                         734)}]}
guimgr.recent-documents = [loc('book/data-bunch-discrete-pebble.py'),
                           loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/__init__.py'),
                           loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py')]
guimgr.visual-state = {loc('../../../Anaconda3/lib/argparse.py'): {'attrib-starts': [('_ActionsContainer',
        1215),
        ('_ActionsContainer.add_argument',
         1298)],
        'first-line': 1329,
        'folded-linenos': [],
        'sel-line': 1334,
        'sel-line-start': 47090,
        'selection_end': 47090,
        'selection_start': 47090,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args',
        126),
        ('_process_plot_var_args.set_lineprops',
         178)],
        'first-line': 164,
        'folded-linenos': [],
        'sel-line': 183,
        'sel-line-start': 5478,
        'selection_end': 5478,
        'selection_start': 5478,
        'zoom': 0},
                       loc('../../../Anaconda3/lib/unittest/case.py'): {'attrib-starts': [('TestCase',
        340),
        ('TestCase._baseAssertEqual',
         816)],
        'first-line': 809,
        'folded-linenos': [],
        'sel-line': 821,
        'sel-line-start': 31048,
        'selection_end': 31048,
        'selection_start': 31048,
        'zoom': 0},
                       loc('../../../Program Files/Wing Personal 10/resources/builtin-pi-files/__os__/win32/3.12/builtins.pi'): {'attrib-starts': [],
        'code-line': 'class int(object):\n',
        'first-line': 1785,
        'folded-linenos': [],
        'sel-line': 1796,
        'sel-line-start': 52639,
        'selection_end': 52648,
        'selection_start': 52645,
        'zoom': 0},
                       loc('../../../Program Files/Wing Personal 10/resources/typeshed/stdlib/3/os/__init__.pyi'): {'attrib-starts': [],
        'code-line': 'def remove(path: AnyPath, *, dir_fd: Optional[int] = ...) -> None: ...\n',
        'first-line': 578,
        'folded-linenos': [],
        'sel-line': 589,
        'sel-line-start': 18547,
        'selection_end': 18557,
        'selection_start': 18551,
        'zoom': 0},
                       loc('../../../Program Files/Wing Personal 10/resources/typeshed/stdlib/3/os/path.pyi'): {'attrib-starts': [],
        'code-line': 'def join(a: StrPath, *paths: StrPath) -> str: ...\n',
        'first-line': 76,
        'folded-linenos': [],
        'sel-line': 88,
        'sel-line-start': 2527,
        'selection_end': 2535,
        'selection_start': 2531,
        'zoom': 0},
                       loc('../../../Program Files/Wing Personal 10/resources/typeshed/stdlib/3/unittest/case.pyi'): {'attrib-starts': [('TestCase|0|',
        48)],
        'code-line': '    def assertEquals(self, first: Any, second: Any, msg: Any = ...) -> None: ...\n',
        'first-line': 194,
        'folded-linenos': [],
        'sel-line': 205,
        'sel-line-start': 8775,
        'selection_end': 8795,
        'selection_start': 8783,
        'zoom': 0},
                       loc('../../../cygwin64/home/Weka/smac/lecture_8/energy_ising.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 23,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/argparse.py'): {'attrib-starts': [('_ActionsContainer|0|',
        1302),
        ('_ActionsContainer|0|.add_argument|0|',
         1386)],
        'code-line': '        chars = self.prefix_chars\r\n',
        'first-line': 1384,
        'folded-linenos': [],
        'sel-line': 1395,
        'sel-line-start': 50279,
        'selection_end': 50279,
        'selection_start': 50279,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/ntpath.py'): {'attrib-starts': [('splitext|0|',
        202)],
        'code-line': '    p = os.fspath(p)\r\n',
        'first-line': 191,
        'folded-linenos': [],
        'sel-line': 203,
        'sel-line-start': 7215,
        'selection_end': 7215,
        'selection_start': 7215,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/random.py'): {'attrib-starts': [],
        'code-line': 'random = _inst.random\r\n',
        'first-line': 846,
        'folded-linenos': [],
        'sel-line': 858,
        'sel-line-start': 31835,
        'selection_end': 31841,
        'selection_start': 31835,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/re.py'): {'attrib-starts': [('match|0|',
        186)],
        'code-line': '    return _compile(pattern, flags).match(string)\r\n',
        'first-line': 175,
        'folded-linenos': [],
        'sel-line': 189,
        'sel-line-start': 9004,
        'selection_end': 9004,
        'selection_start': 9004,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/git/__init__.py'): {'attrib-starts': [],
        'code-line': "    raise ImportError('Failed to initialize: {0}'.format(exc)) from exc\n",
        'first-line': 64,
        'folded-linenos': [],
        'sel-line': 88,
        'sel-line-start': 2410,
        'selection_end': 2410,
        'selection_start': 2410,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/__init__.py'): {'attrib-starts': [('RcParams|0|',
        600),
        ('RcParams|0|.__getitem__|0|',
         652)],
        'code-line': '        return dict.__getitem__(self, key)\r\n',
        'first-line': 649,
        'folded-linenos': [],
        'sel-line': 673,
        'sel-line-start': 24153,
        'selection_end': 24153,
        'selection_start': 24153,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        94),
        ('Artist|0|.update|0|',
         1045)],
        'code-line': '                        raise AttributeError(f"{type(self).__name__!r} object "\r\n',
        'first-line': 1048,
        'folded-linenos': [],
        'sel-line': 1063,
        'sel-line-start': 36297,
        'selection_end': 36297,
        'selection_start': 36297,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_AxesBase|0|',
        541),
        ('_AxesBase|0|.__init__|0|',
         553)],
        'code-line': "            raise ValueError('Width and height specified must be non-negative')\r\n",
        'first-line': 580,
        'folded-linenos': [],
        'sel-line': 604,
        'sel-line-start': 23723,
        'selection_end': 23723,
        'selection_start': 23723,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/colorbar.py'): {'attrib-starts': [('Colorbar|0|',
        288),
        ('Colorbar|0|.__init__|0|',
         368)],
        'code-line': '        if mappable.get_array() is not None:\r\n',
        'first-line': 367,
        'folded-linenos': [],
        'sel-line': 391,
        'sel-line-start': 15188,
        'selection_end': 15188,
        'selection_start': 15188,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/colors.py'): {'attrib-starts': [('_to_rgba_no_colorcycle|0|',
        194)],
        'code-line': '        raise ValueError(f"Invalid RGBA argument: {orig_c!r}")\r\n',
        'first-line': 244,
        'folded-linenos': [],
        'sel-line': 268,
        'sel-line-start': 9109,
        'selection_end': 9109,
        'selection_start': 9109,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        180)],
        'code-line': '    def subplots(self, nrows=1, ncols=1, *, sharex=False, sharey=False,\r\n',
        'first-line': 772,
        'folded-linenos': [],
        'sel-line': 787,
        'sel-line-start': 28778,
        'selection_end': 28794,
        'selection_start': 28786,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/gridspec.py'): {'attrib-starts': [('SubplotSpec|0|',
        536),
        ('SubplotSpec|0|._from_subplot_args|0|',
         567)],
        'code-line': '                raise ValueError(\r\n',
        'first-line': 581,
        'folded-linenos': [],
        'sel-line': 605,
        'sel-line-start': 24410,
        'selection_end': 24410,
        'selection_start': 24410,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/lines.py'): {'attrib-starts': [('_get_dash_pattern|0|',
        30)],
        'code-line': '        dsum = sum(dashes)\r\n',
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1716,
        'selection_end': 1716,
        'selection_start': 1716,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('savefig|0|',
        955)],
        'code-line': "    fig.canvas.draw_idle()   # need this if 'transparent=True' to reset colors\r\n",
        'first-line': 951,
        'folded-linenos': [],
        'sel-line': 958,
        'sel-line-start': 32231,
        'selection_end': 32231,
        'selection_start': 32231,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/matplotlib/texmanager.py'): {'attrib-starts': [('TexManager|0|',
        56),
        ('TexManager|0|._run_checked_subprocess|0|',
         229)],
        'code-line': '            raise RuntimeError(\r\n',
        'first-line': 216,
        'folded-linenos': [],
        'sel-line': 240,
        'sel-line-start': 10027,
        'selection_end': 10027,
        'selection_start': 10027,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [('__getattr__|0|',
        275)],
        'code-line': '            raise AttributeError("module {!r} has no attribute "\r\n',
        'first-line': 288,
        'folded-linenos': [],
        'sel-line': 312,
        'sel-line-start': 11480,
        'selection_end': 11480,
        'selection_start': 11480,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/core/shape_base.py'): {'attrib-starts': [('stack|0|',
        357)],
        'code-line': "        raise ValueError('all input arrays must have the same shape')\r\n",
        'first-line': 407,
        'folded-linenos': [],
        'sel-line': 425,
        'sel-line-start': 12256,
        'selection_end': 12256,
        'selection_start': 12256,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/format.py'): {'attrib-starts': [('read_array|0|',
        698)],
        'code-line': '            raise ValueError("Object arrays cannot be loaded when "\r\n',
        'first-line': 718,
        'folded-linenos': [],
        'sel-line': 742,
        'sel-line-start': 25421,
        'selection_end': 25421,
        'selection_start': 25421,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('copy|0|',
        726)],
        'code-line': '    return array(a, order=order, subok=subok, copy=True)\r\n',
        'first-line': 779,
        'folded-linenos': [],
        'sel-line': 803,
        'sel-line-start': 25984,
        'selection_end': 25984,
        'selection_start': 25984,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/histograms.py'): {'attrib-starts': [('_get_bin_edges|0|',
        359)],
        'code-line': '            raise TypeError(\r\n',
        'first-line': 396,
        'folded-linenos': [],
        'sel-line': 420,
        'sel-line-start': 13691,
        'selection_end': 13691,
        'selection_start': 13691,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/lib/npyio.py'): {'attrib-starts': [('_savez|0|',
        691)],
        'code-line': '        file = os_fspath(file)\r\n',
        'first-line': 673,
        'folded-linenos': [],
        'sel-line': 697,
        'sel-line-start': 25096,
        'selection_end': 25096,
        'selection_start': 25096,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/site-packages/numpy/linalg/linalg.py'): {'attrib-starts': [('_norm_dispatcher|0|',
        2358)],
        'code-line': '    return (x,)\r\n',
        'first-line': 2335,
        'folded-linenos': [],
        'sel-line': 2359,
        'sel-line-start': 77062,
        'selection_end': 77062,
        'selection_start': 77062,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/Lib/sre_parse.py'): {'attrib-starts': [('parse|0|',
        936)],
        'code-line': '        raise source.error("unbalanced parenthesis")\r\n',
        'first-line': 936,
        'folded-linenos': [],
        'sel-line': 961,
        'sel-line-start': 37401,
        'selection_end': 37401,
        'selection_start': 37401,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/lib/site-packages/matplotlib/_api/__init__.py'): {'attrib-starts': [('caching_module_getattr|0|',
        192),
        ('caching_module_getattr|0|.__getattr__|0|',
         218)],
        'code-line': '        raise AttributeError(\r\n',
        'first-line': 197,
        'folded-linenos': [],
        'sel-line': 221,
        'sel-line-start': 7219,
        'selection_end': 7219,
        'selection_start': 7219,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/lib/site-packages/matplotlib/cbook/__init__.py'): {'attrib-starts': [('safe_first_element|0|',
        1660)],
        'code-line': '        raise RuntimeError("matplotlib does not support generators "\r\n',
        'first-line': 1652,
        'folded-linenos': [],
        'sel-line': 1677,
        'sel-line-start': 56417,
        'selection_end': 56417,
        'selection_start': 56417,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python310/lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        307),
        ('TestCase|0|._baseAssertEqual|0|',
         824)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 816,
        'folded-linenos': [],
        'sel-line': 829,
        'sel-line-start': 32133,
        'selection_end': 32133,
        'selection_start': 32133,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/argparse.py'): {'attrib-starts': [],
        'code-line': 'class ArgumentError(Exception):\r\n',
        'first-line': 870,
        'folded-linenos': [],
        'sel-line': 761,
        'sel-line-start': 28492,
        'selection_end': 28511,
        'selection_start': 28498,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/shutil.py'): {'attrib-starts': [],
        'code-line': 'def copyfile(src, dst, *, follow_symlinks=True):\r\n',
        'first-line': 217,
        'folded-linenos': [],
        'sel-line': 229,
        'sel-line-start': 7461,
        'selection_end': 7473,
        'selection_start': 7465,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/PIL/Image.py'): {'attrib-starts': [('Image|0|',
        466),
        ('Image|0|.save|0|',
         2352)],
        'code-line': '                fp = builtins.open(filename, "w+b")\r\n',
        'first-line': 2416,
        'folded-linenos': [],
        'sel-line': 2434,
        'sel-line-start': 86823,
        'selection_end': 86823,
        'selection_start': 86823,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/__init__.py'): {'attrib-starts': [('_preprocess_data|0|',
        1403),
        ('_preprocess_data|0|.inner|0|',
         1475)],
        'code-line': '            return func(ax, *map(sanitize_sequence, args), **kwargs)\n',
        'first-line': 1466,
        'folded-linenos': [],
        'sel-line': 1477,
        'sel-line-start': 52100,
        'selection_end': 52100,
        'selection_start': 52100,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_api/__init__.py'): {'attrib-starts': [('check_getitem|0|',
        166)],
        'code-line': '        raise ValueError(\n',
        'first-line': 171,
        'folded-linenos': [],
        'sel-line': 182,
        'sel-line-start': 5563,
        'selection_end': 5563,
        'selection_start': 5563,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/_mathtext.py'): {'attrib-starts': [('Parser|0|',
        1813),
        ('Parser|0|.parse|0|',
         2150)],
        'code-line': '            raise ValueError("\\n" + ParseException.explain(err, 0)) from None\n',
        'first-line': 2147,
        'folded-linenos': [],
        'sel-line': 2164,
        'sel-line-start': 80090,
        'selection_end': 80090,
        'selection_start': 80090,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/artist.py'): {'attrib-starts': [('Artist|0|',
        116),
        ('Artist|0|._update_props|0|',
         1175)],
        'code-line': '                        raise AttributeError(\n',
        'first-line': 1175,
        'folded-linenos': [],
        'sel-line': 1192,
        'sel-line-start': 40739,
        'selection_end': 40739,
        'selection_start': 40739,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_axes.py'): {'attrib-starts': [('Axes|0|',
        46)],
        'code-line': '    def set_title(self, label, fontdict=None, loc=None, pad=None, *, y=None,\n',
        'first-line': 92,
        'folded-linenos': [],
        'sel-line': 103,
        'sel-line-start': 3380,
        'selection_end': 3397,
        'selection_start': 3388,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_AxesBase|0|',
        542),
        ('_AxesBase|0|._validate_converted_limits|0|',
         3568)],
        'code-line': '                raise ValueError("Axis limits cannot be NaN or Inf")\n',
        'first-line': 3574,
        'folded-linenos': [],
        'sel-line': 3584,
        'sel-line-start': 139897,
        'selection_end': 139897,
        'selection_start': 139897,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/backends/backend_wxagg.py'): {'attrib-starts': [],
        'code-line': 'import wx\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/collections.py'): {'attrib-starts': [('Collection|0|',
        34),
        ('Collection|0|.set_linestyle|0|',
         590)],
        'code-line': '                raise ValueError(emsg) from err\n',
        'first-line': 606,
        'folded-linenos': [],
        'sel-line': 623,
        'sel-line-start': 24979,
        'selection_end': 24979,
        'selection_start': 24979,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/colors.py'): {'attrib-starts': [],
        'code-line': 'class BoundaryNorm(Normalize):\n',
        'first-line': 1980,
        'folded-linenos': [],
        'sel-line': 1990,
        'sel-line-start': 70254,
        'selection_end': 70272,
        'selection_start': 70260,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/figure.py'): {'attrib-starts': [('FigureBase|0|',
        180),
        ('FigureBase|0|.add_subplot|0|',
         658)],
        'code-line': '            ax = projection_class(self, *args, **pkw)\n',
        'first-line': 776,
        'folded-linenos': [],
        'sel-line': 781,
        'sel-line-start': 28382,
        'selection_end': 28382,
        'selection_start': 28382,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/gridspec.py'): {'attrib-starts': [('GridSpecBase|0|',
        25),
        ('GridSpecBase|0|.__init__|0|',
         31)],
        'code-line': '            raise ValueError(\n',
        'first-line': 48,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1676,
        'selection_end': 1676,
        'selection_start': 1676,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/legend.py'): {'attrib-starts': [('_parse_legend_args|0|',
        1296)],
        'code-line': '            raise TypeError("A single argument passed to legend() must be a "\n',
        'first-line': 1353,
        'folded-linenos': [],
        'sel-line': 1370,
        'sel-line-start': 55225,
        'selection_end': 55225,
        'selection_start': 55225,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/patches.py'): {'attrib-starts': [],
        'code-line': 'class Patch(artist.Artist):\n',
        'first-line': 55,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 884,
        'selection_end': 895,
        'selection_start': 890,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/pyplot.py'): {'attrib-starts': [('figure|0|',
        776)],
        'code-line': '        num = int(num)  # crude validation of num argument\n',
        'first-line': 900,
        'folded-linenos': [],
        'sel-line': 917,
        'sel-line-start': 32536,
        'selection_end': 32536,
        'selection_start': 32536,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/texmanager.py'): {'attrib-starts': [('TexManager|0|',
        55),
        ('TexManager|0|._run_checked_subprocess|0|',
         246)],
        'code-line': '            raise RuntimeError(\n',
        'first-line': 246,
        'folded-linenos': [],
        'sel-line': 257,
        'sel-line-start': 10194,
        'selection_end': 10194,
        'selection_start': 10194,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/matplotlib/typing.py'): {'attrib-starts': [],
        'code-line': 'from typing import Any, Literal, TypeVar, Union\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 386,
        'selection_end': 386,
        'selection_start': 386,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/__init__.py'): {'attrib-starts': [],
        'code-line': '"""\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/_methods.py'): {'attrib-starts': [('_count_reduce_items|0|',
        66)],
        'code-line': '            items *= arr.shape[mu.normalize_axis_index(ax, arr.ndim)]\r\n',
        'first-line': 59,
        'folded-linenos': [],
        'sel-line': 76,
        'sel-line-start': 2918,
        'selection_end': 2918,
        'selection_start': 2918,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/arrayprint.py'): {'attrib-starts': [('_array_str_implementation|0|',
        1594)],
        'code-line': "    if (_format_options['legacy'] <= 113 and\r\n",
        'first-line': 1581,
        'folded-linenos': [],
        'sel-line': 1598,
        'sel-line-start': 60743,
        'selection_end': 60743,
        'selection_start': 60743,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/fromnumeric.py'): {'attrib-starts': [('sort|0|',
        865)],
        'code-line': '    a.sort(axis=axis, kind=kind, order=order)\r\n',
        'first-line': 1011,
        'folded-linenos': [],
        'sel-line': 1016,
        'sel-line-start': 36209,
        'selection_end': 36209,
        'selection_start': 36209,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/function_base.py'): {'attrib-starts': [],
        'code-line': 'def linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None,\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 625,
        'selection_end': 637,
        'selection_start': 629,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/multiarray.py'): {'attrib-starts': [],
        'code-line': 'def copyto(dst, src, casting=None, where=None):\r\n',
        'first-line': 1069,
        'folded-linenos': [],
        'sel-line': 1080,
        'sel-line-start': 34465,
        'selection_end': 34475,
        'selection_start': 34469,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/multiarray.pyi'): {'attrib-starts': [],
        'code-line': 'def arange(  # type: ignore[misc]\r\n',
        'first-line': 806,
        'folded-linenos': [],
        'sel-line': 717,
        'sel-line-start': 16352,
        'selection_end': 16362,
        'selection_start': 16356,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/core/numeric.py'): {'attrib-starts': [('ones|0|',
        137)],
        'code-line': '    if like is not None:\r\n',
        'first-line': 182,
        'folded-linenos': [],
        'sel-line': 187,
        'sel-line-start': 6437,
        'selection_end': 6437,
        'selection_start': 6437,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/_datasource.py'): {'attrib-starts': [('DataSource|0|',
        196),
        ('DataSource|0|.open|0|',
         486)],
        'code-line': '            raise FileNotFoundError(f"{path} not found.")\r\n',
        'first-line': 521,
        'folded-linenos': [],
        'sel-line': 532,
        'sel-line-start': 17469,
        'selection_end': 17469,
        'selection_start': 17469,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('vectorize|0|',
        2117),
        ('vectorize|0|._vectorize_call|0|',
         2442)],
        'code-line': '            inputs = [asanyarray(a, dtype=object) for a in args]\r\n',
        'first-line': 2437,
        'folded-linenos': [],
        'sel-line': 2452,
        'sel-line-start': 82406,
        'selection_end': 82406,
        'selection_start': 82406,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/lib/stride_tricks.py'): {'attrib-starts': [('_broadcast_shape|0|',
        415)],
        'code-line': '    b = np.broadcast(*args[:32])\r\n',
        'first-line': 410,
        'folded-linenos': [],
        'sel-line': 421,
        'sel-line-start': 14632,
        'selection_end': 14632,
        'selection_start': 14632,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/linalg/linalg.py'): {'attrib-starts': [('_assert_stacked_square|0|',
        208)],
        'code-line': "            raise LinAlgError('Last 2 dimensions of the array must be square')\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 212,
        'sel-line-start': 6495,
        'selection_end': 6495,
        'selection_start': 6495,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/random/_generator.pyi'): {'attrib-starts': [('Generator|0|',
        66)],
        'code-line': '    def integers(  # type: ignore[misc]\r\n',
        'first-line': 197,
        'folded-linenos': [],
        'sel-line': 208,
        'sel-line-start': 6030,
        'selection_end': 6046,
        'selection_start': 6038,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/random/mtrand.pyi'): {'attrib-starts': [],
        'code-line': 'rand = _rand.rand\r\n',
        'first-line': 530,
        'folded-linenos': [],
        'sel-line': 541,
        'sel-line-start': 19472,
        'selection_end': 19476,
        'selection_start': 19472,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/numpy/testing/_private/utils.py'): {'attrib-starts': [('assert_array_compare|0|',
        641)],
        'code-line': '            raise AssertionError(msg)\r\n',
        'first-line': 779,
        'folded-linenos': [],
        'sel-line': 796,
        'sel-line-start': 29747,
        'selection_end': 29747,
        'selection_start': 29747,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/site-packages/scipy/stats/_stats_py.py'): {'attrib-starts': [('power_divergence|0|',
        7856)],
        'code-line': '    f_obs_float = f_obs.astype(np.float64)\r\n',
        'first-line': 8013,
        'folded-linenos': [],
        'sel-line': 8030,
        'sel-line-start': 313071,
        'selection_end': 313071,
        'selection_start': 313071,
        'zoom': 0},
                       loc('../AppData/Local/Programs/Python/Python312/Lib/unittest/case.py'): {'attrib-starts': [('TestCase|0|',
        344),
        ('TestCase|0|._baseAssertEqual|0|',
         872)],
        'code-line': '            raise self.failureException(msg)\r\n',
        'first-line': 872,
        'folded-linenos': [],
        'sel-line': 877,
        'sel-line-start': 34039,
        'selection_end': 34039,
        'selection_start': 34039,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/axes/_base.py'): {'attrib-starts': [('_process_plot_var_args|0|',
        117),
        ('_process_plot_var_args|0|._xy_from_xy|0|',
         240)],
        'code-line': '                             "have shapes {} and {}".format(x.shape, y.shape))\n',
        'first-line': 264,
        'folded-linenos': [],
        'sel-line': 269,
        'sel-line-start': 10054,
        'selection_end': 10054,
        'selection_start': 10054,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/cbook/__init__.py'): {'attrib-starts': [('_lock_path|0|',
        1855)],
        'code-line': '    path = Path(path)\n',
        'first-line': 1866,
        'folded-linenos': [],
        'sel-line': 1870,
        'sel-line-start': 59297,
        'selection_end': 59318,
        'selection_start': 59318,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/matplotlib/mathtext.py'): {'attrib-starts': [('Parser|0|',
        2253),
        ('Parser|0|.parse|0|',
         2586)],
        'code-line': '                                        str(err)]))\n',
        'first-line': 2582,
        'folded-linenos': [],
        'sel-line': 2602,
        'sel-line-start': 89206,
        'selection_end': 89206,
        'selection_start': 89206,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/core/__init__.py'): {'attrib-starts': [],
        'code-line': '    raise ImportError(msg)\n',
        'first-line': 26,
        'folded-linenos': [],
        'sel-line': 46,
        'sel-line-start': 1673,
        'selection_end': 1673,
        'selection_start': 1673,
        'zoom': 0},
                       loc('../anaconda3/Lib/site-packages/numpy/lib/function_base.py'): {'attrib-starts': [('meshgrid|0|',
        4083)],
        'code-line': '                        % (list(kwargs)[0],))\n',
        'first-line': 4175,
        'folded-linenos': [],
        'sel-line': 4195,
        'sel-line-start': 136309,
        'selection_end': 136309,
        'selection_start': 136309,
        'zoom': 0},
                       loc('../tm/template.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 30,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('AllTests.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('AllTests1.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '# Statistical Mechanics and Computations\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/AllTests.py'): {'attrib-starts': [],
        'code-line': 'from ising import NbrTest, GrayGeneratorTest, GrayFlipTest, NeighboursTest, Nbr3dTest, EdgeTest, EM_Test\r\n',
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 856,
        'selection_end': 960,
        'selection_start': 960,
        'zoom': 0},
                       loc('book/README.md'): {'attrib-starts': [],
        'code-line': '-|data-bunch.py|Exercise 1.20. Implemement algorithm 1.28 (data-bunch)\r\n',
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 1947,
        'selection_end': 2017,
        'selection_start': 2017,
        'zoom': 0},
                       loc('book/__init__.py'): {'attrib-starts': [],
        'code-line': '# along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 620,
        'selection_end': 687,
        'selection_start': 687,
        'zoom': 0},
                       loc('book/backends.py'): {'attrib-starts': [],
        'code-line': 'print("Using:",get_backend())\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 288,
        'selection_end': 290,
        'selection_start': 290,
        'zoom': 0},
                       loc('book/binomialconvolution.py'): {'attrib-starts': [],
        'code-line': "    ax1.plot(P,label=f'{imax/len(P)}')\r\n",
        'first-line': 93,
        'folded-linenos': [],
        'sel-line': 103,
        'sel-line-start': 3720,
        'selection_end': 3749,
        'selection_start': 3749,
        'zoom': 0},
                       loc('book/boxmuller.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/buffon.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 52,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/check.npz'): {'attrib-starts': [],
        'code-line': "PK\x03\x04\x14\x00\x00\x00\x00\x00\x00\x00!\x00À3@¡À\x00\x00\x00À\x00\x00\x00\x05\x00\x14\x00X.npy\x01\x00\x10\x00À\x00\x00\x00\x00\x00\x00\x00À\x00\x00\x00\x00\x00\x00\x00“NUMPY\x01\x00v\x00{'descr': '<f8', 'fortran_order': False, 'shape': (4, 2), }                                                          \n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/cluster_ising.py'): {'attrib-starts': [('ClusterIsingTests|0|',
        165),
        ('ClusterIsingTests|0|.test_data_generate|0|',
         194)],
        'code-line': "        '''\r\n",
        'first-line': 13,
        'folded-linenos': [],
        'sel-line': 195,
        'sel-line-start': 7106,
        'selection_end': 7117,
        'selection_start': 7117,
        'zoom': 0},
                       loc('book/cpp_mcmc.py'): {'attrib-starts': [('parse_arguments|0|',
        28)],
        'code-line': "    parser.add_argument('--show', action = 'store_true', help   = 'Show plot')\r\n",
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1466,
        'selection_end': 1544,
        'selection_start': 1544,
        'zoom': 0},
                       loc('book/data-bunch-discrete-pebble.py'): {'attrib-starts': [],
        'code-line': "    ax2.plot(error,label=f'Standard deviation after bunching {error[-2]:.6}')\r\n",
        'first-line': 115,
        'folded-linenos': [],
        'sel-line': 135,
        'sel-line-start': 5326,
        'selection_end': 5400,
        'selection_start': 5400,
        'zoom': 0},
                       loc('book/data-bunch.py'): {'attrib-starts': [],
        'code-line': "'''Exercise 1.20. Implemement algorithm 1.28 (data-bunch).'''\r\n",
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 724,
        'selection_end': 785,
        'selection_start': 724,
        'zoom': 0},
                       loc('book/direct-disks.py'): {'attrib-starts': [('direct_disks|0|',
        33)],
        'code-line': '        proposed = geometry.propose(N,rng =rng)\r\n',
        'first-line': 44,
        'folded-linenos': [],
        'sel-line': 50,
        'sel-line-start': 1914,
        'selection_end': 1961,
        'selection_start': 1961,
        'zoom': 0},
                       loc('book/direct-gamma-zeta.py'): {'attrib-starts': [],
        'code-line': 'def direct_gamma_zeta(gamma,zeta,n, rng=np.random.default_rng()):\r\n',
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 804,
        'selection_end': 1265,
        'selection_start': 804,
        'zoom': 0},
                       loc('book/direct-gamma.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 108,
        'sel-line-start': 4593,
        'selection_end': 4593,
        'selection_start': 4593,
        'zoom': 0},
                       loc('book/direct-needle.py'): {'attrib-starts': [],
        'code-line': "if __name__=='__main__':\r\n",
        'first-line': 108,
        'folded-linenos': [],
        'sel-line': 139,
        'sel-line-start': 4764,
        'selection_end': 4788,
        'selection_start': 4788,
        'zoom': 0},
                       loc('book/direct-plot.py'): {'attrib-starts': [],
        'code-line': '# direct-plot.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/direct-surface.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 23,
        'selection_end': 23,
        'selection_start': 23,
        'zoom': 0},
                       loc('book/direct.gamma-zeta.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2015 Greenweaves Software Pty Ltd\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/direct.py'): {'attrib-starts': [],
        'code-line': '    for iter in range(n_trials):\r\n',
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 1073,
        'selection_end': 1105,
        'selection_start': 1077,
        'zoom': 0},
                       loc('book/directDisksAny.py'): {'attrib-starts': [],
        'code-line': '# markov-pi.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/edge_ising.py'): {'attrib-starts': [],
        'code-line': 'from ising import gray_flip, generate_edges\r\n',
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 961,
        'selection_end': 971,
        'selection_start': 971,
        'zoom': 0},
                       loc('book/enumerate_ising.py'): {'attrib-starts': [],
        'code-line': 'def get_initial_energy(N,m,n,periodic=True):\r\n',
        'first-line': 103,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 903,
        'selection_end': 925,
        'selection_start': 907,
        'zoom': 0},
                       loc('book/exercise_1_11.py'): {'attrib-starts': [('get_distribution_extended|0|',
        76),
        ('get_distribution_extended|0|.get_probability|0|',
         92),
        ('get_distribution_extended|0|.get_probability|0|.get_area_sector|0|',
         99)],
        'code-line': '            Area of sector OBC\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 101,
        'sel-line-start': 3838,
        'selection_end': 3868,
        'selection_start': 3868,
        'zoom': 0},
                       loc('book/exercise_1_12.py'): {'attrib-starts': [],
        'code-line': '    Exercise 1.12. Implement both naive Algorithm 1.17 (naive Gauss) and 1.18 (Box Muller).\r\n',
        'first-line': 5,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 729,
        'selection_end': 936,
        'selection_start': 733,
        'zoom': 0},
                       loc('book/exercise_1_12a.py'): {'attrib-starts': [],
        'code-line': "    fig.suptitle(f'Kolmogorov Smirnov test, {args.m} iterations, {args.n:,} samples per iteration')\r\n",
        'first-line': 93,
        'folded-linenos': [],
        'sel-line': 104,
        'sel-line-start': 3675,
        'selection_end': 3746,
        'selection_start': 3746,
        'zoom': 0},
                       loc('book/exercise_1_14.py'): {'attrib-starts': [],
        'code-line': '    fig = figure(figsize=(12,12))\r\n',
        'first-line': 75,
        'folded-linenos': [],
        'sel-line': 85,
        'sel-line-start': 3352,
        'selection_end': 3384,
        'selection_start': 3369,
        'zoom': 0},
                       loc('book/exercise_1_16.py'): {'attrib-starts': [('tower_sample|0|',
        35)],
        'code-line': '        upsilon = rng.uniform(0,Pi[-1])\r\n',
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 39,
        'sel-line-start': 1432,
        'selection_end': 1471,
        'selection_start': 1471,
        'zoom': 0},
                       loc('book/exercise_1_21.py'): {'attrib-starts': [('parse_arguments|0|',
        67)],
        'code-line': "    parser.add_argument('--zeta', type=float, default=-0.25)\r\n",
        'first-line': 62,
        'folded-linenos': [],
        'sel-line': 73,
        'sel-line-start': 2655,
        'selection_end': 2714,
        'selection_start': 2714,
        'zoom': 0},
                       loc('book/exercise_5_10.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/exercise_5_10a.py'): {'attrib-starts': [('parse_arguments|0|',
        30)],
        'code-line': "    parser.add_argument('--Nburn', type = int, default = 0, help = 'Number of steps for burn in')\r\n",
        'first-line': 31,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1546,
        'selection_end': 1578,
        'selection_start': 1574,
        'zoom': 0},
                       loc('book/exercise_5_10b.py'): {'attrib-starts': [],
        'code-line': '    Exercise 5.10  Plot M against T\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 729,
        'selection_end': 746,
        'selection_start': 746,
        'zoom': 0},
                       loc('book/exercise_5_11.csv'): {'attrib-starts': [],
        'code-line': '0.5,-32,998\r\n',
        'first-line': 784,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/exercise_5_2.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 44,
        'folded-linenos': [],
        'sel-line': 59,
        'sel-line-start': 2016,
        'selection_end': 2016,
        'selection_start': 2016,
        'zoom': 0},
                       loc('book/exercise_5_4.py'): {'attrib-starts': [],
        'code-line': "if __name__=='__main__':\r\n",
        'first-line': 81,
        'folded-linenos': [],
        'sel-line': 95,
        'sel-line-start': 3282,
        'selection_end': 3306,
        'selection_start': 3306,
        'zoom': 0},
                       loc('book/exercise_5_6.py'): {'attrib-starts': [],
        'code-line': 'def get_data(file_name):\r\n',
        'first-line': 85,
        'folded-linenos': [],
        'sel-line': 73,
        'sel-line-start': 2546,
        'selection_end': 3148,
        'selection_start': 2546,
        'zoom': 0},
                       loc('book/exercise_5_7.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2025 Simon Crase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 43,
        'selection_start': 43,
        'zoom': 0},
                       loc('book/f1.py'): {'attrib-starts': [],
        'code-line': 'path = os.path.join(mpl.rcParams["datapath"], "fonts/ttf/tahoma.ttf")\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 293,
        'selection_end': 293,
        'selection_start': 293,
        'zoom': 0},
                       loc('book/geometry.py'): {'attrib-starts': [('Geometry|0|',
        23)],
        'code-line': '    def move_to(self,X):\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 123,
        'sel-line-start': 4153,
        'selection_end': 4168,
        'selection_start': 4161,
        'zoom': 0},
                       loc('book/gray.py'): {'attrib-starts': [('get_energy_magnetism|0|',
        108)],
        'code-line': '    Used to calculate energy and magnetization for a configuration\r\n',
        'first-line': 267,
        'folded-linenos': [],
        'sel-line': 110,
        'sel-line-start': 3238,
        'selection_end': 3304,
        'selection_start': 3304,
        'zoom': 0},
                       loc('book/harmonic-density.png'): {'attrib-starts': [],
        'code-line': 'Â\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/harmonic_density.py'): {'attrib-starts': [],
        'code-line': '# harmonic_density.py\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/harmonic_wavefunction.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/hist-plot.py'): {'attrib-starts': [],
        'code-line': '# the Free Software Foundation, either version 3 of the License, or\r\n',
        'first-line': 66,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 197,
        'selection_end': 207,
        'selection_start': 207,
        'zoom': 0},
                       loc('book/hist.py'): {'attrib-starts': [],
        'code-line': "        fields = line.strip().split(',')\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 121,
        'selection_end': 209,
        'selection_start': 161,
        'zoom': 0},
                       loc('book/ising-stats.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 98,
        'folded-linenos': [],
        'sel-line': 152,
        'sel-line-start': 5010,
        'selection_end': 5010,
        'selection_start': 5010,
        'zoom': 0},
                       loc('book/ising.csv'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/ising.py'): {'attrib-starts': [('get_energy_magnetism|0|',
        164)],
        'code-line': '    E = -sum([sigma[i] * sigma[j] for i,j in generate_edges(shape=shape,periodic=periodic)])\r\n',
        'first-line': 248,
        'folded-linenos': [],
        'sel-line': 179,
        'sel-line-start': 5617,
        'selection_end': 5676,
        'selection_start': 5662,
        'zoom': 0},
                       loc('book/ising_db.py'): {'attrib-starts': [('IsingDatabase|0|',
        49),
        ('IsingDatabase|0|.__ensure_table_exists|0|',
         182)],
        'code-line': "                    print ('name:', row)\r\n",
        'first-line': 181,
        'folded-linenos': [],
        'sel-line': 196,
        'sel-line-start': 8270,
        'selection_end': 8310,
        'selection_start': 8310,
        'zoom': 0},
                       loc('book/ising_enum.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 24,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/ising_stats.py'): {'attrib-starts': [('thermo|0|',
        55)],
        'code-line': '     )\r\n',
        'first-line': 64,
        'folded-linenos': [],
        'sel-line': 82,
        'sel-line-start': 3127,
        'selection_end': 3133,
        'selection_start': 3133,
        'zoom': 0},
                       loc('book/large-markov.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/levy-convolution.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/markov-disks.py'): {'attrib-starts': [('markov_disks|0|',
        29),
        ('markov_disks|0|.can_move|0|',
         35)],
        'code-line': '        if not geometry.is_within_bounds(X_proposed): return False\r\n',
        'first-line': 46,
        'folded-linenos': [],
        'sel-line': 40,
        'sel-line-start': 1607,
        'selection_end': 1640,
        'selection_start': 1631,
        'zoom': 0},
                       loc('book/markov-driver.py'): {'attrib-starts': [],
        'code-line': '        Es,means, stds,M,magnetization = markov.get_stats()\r\n',
        'first-line': 8,
        'folded-linenos': [],
        'sel-line': 127,
        'sel-line-start': 4579,
        'selection_end': 4638,
        'selection_start': 4587,
        'zoom': 0},
                       loc('book/markov-pi.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/markov-pi.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/markov-zeta-1-6.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/markov-zeta.py'): {'attrib-starts': [],
        'code-line': "    ax1.set_title(r'$\\zeta=-0.8$')\r\n",
        'first-line': 98,
        'folded-linenos': [],
        'sel-line': 103,
        'sel-line-start': 3603,
        'selection_end': 3637,
        'selection_start': 3637,
        'zoom': 0},
                       loc('book/markov_ising.py'): {'attrib-starts': [('TestMarkov|0|',
        198),
        ('TestMarkov|0|.test4x4_beta_0|0|',
         203)],
        'code-line': '        self.assertAlmostEqual(13568,normalized[6],delta=75)\r\n',
        'first-line': 205,
        'folded-linenos': [],
        'sel-line': 217,
        'sel-line-start': 8005,
        'selection_end': 8041,
        'selection_start': 8036,
        'zoom': 0},
                       loc('book/markovdiscretepebble.py'): {'attrib-starts': [],
        'code-line': 'def markov_discrete_pebble(k,table):\r\n',
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1227,
        'selection_end': 1253,
        'selection_start': 1231,
        'zoom': 0},
                       loc('book/matrix-square-check.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/matrix-square.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/md-plot.py'): {'attrib-starts': [],
        'code-line': '    fig.tight_layout()\r\n',
        'first-line': 158,
        'folded-linenos': [],
        'sel-line': 177,
        'sel-line-start': 7478,
        'selection_end': 7491,
        'selection_start': 7486,
        'zoom': 0},
                       loc('book/md-viz.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/md.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 298,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/naivegauss.py'): {'attrib-starts': [],
        'code-line': 'm=25\r\n',
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 23,
        'sel-line-start': 858,
        'selection_end': 870,
        'selection_start': 858,
        'zoom': 0},
                       loc('book/pair-time.png'): {'attrib-starts': [],
        'code-line': '\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/pair-time.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/permutation-histogram.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/permutation-test.py'): {'attrib-starts': [],
        'first-line': 23,
        'folded-linenos': [],
        'sel-line': 43,
        'sel-line-start': 1310,
        'selection_end': 1375,
        'selection_start': 1375,
        'zoom': 0},
                       loc('book/permutation.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 55,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 21,
        'selection_start': 21,
        'zoom': 0},
                       loc('book/poeschl-teller.py'): {'attrib-starts': [],
        'code-line': '    plt.tight_layout()\r\n',
        'first-line': 120,
        'folded-linenos': [],
        'sel-line': 131,
        'sel-line-start': 4988,
        'selection_end': 5010,
        'selection_start': 4995,
        'zoom': 0},
                       loc('book/ran-perm-alt.py'): {'attrib-starts': [],
        'code-line': '    ax2 = fig.add_subplot(2,1,2)\r\n',
        'first-line': 74,
        'folded-linenos': [],
        'sel-line': 87,
        'sel-line-start': 3137,
        'selection_end': 3166,
        'selection_start': 3166,
        'zoom': 0},
                       loc('book/ran-perm.py'): {'attrib-starts': [],
        'code-line': '    fig = figure(figsize=(12,12))\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 115,
        'sel-line-start': 3746,
        'selection_end': 4129,
        'selection_start': 3746,
        'zoom': 0},
                       loc('book/smac.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2015-2022 Greenweaves Software Limited\r\n',
        'first-line': 108,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 50,
        'selection_start': 50,
        'zoom': 0},
                       loc('book/smacfiletoken.py'): {'attrib-starts': [('Token|0|',
        33),
        ('Token|0|.list2str|0|',
         59)],
        'code-line': '        sep = ""\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 61,
        'sel-line-start': 2063,
        'selection_end': 2075,
        'selection_start': 2075,
        'zoom': 0},
                       loc('book/sphere-test.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('book/spheres2.py'): {'attrib-starts': [],
        'code-line': '# Copyright (C) 2022 Simon Crase\r\n',
        'first-line': 208,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 25,
        'selection_start': 25,
        'zoom': 0},
                       loc('book/sql3test.py'): {'attrib-starts': [],
        'code-line': '\t(1.0, 100, np.array([1,1,1,1,-1,-1,-1,-1])),\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 31,
        'sel-line-start': 740,
        'selection_end': 784,
        'selection_start': 741,
        'zoom': 0},
                       loc('book/temp.py'): {'attrib-starts': [],
        'code-line': 'print (os.name)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 13,
        'selection_end': 28,
        'selection_start': 28,
        'zoom': 0},
                       loc('book/template.py'): {'attrib-starts': [('parse_arguments|0|',
        27)],
        'code-line': "    '''Parse command line arguments'''\r\n",
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 988,
        'selection_end': 1026,
        'selection_start': 992,
        'zoom': 0},
                       loc('book/thermo-ising.py'): {'attrib-starts': [],
        'code-line': '    fig = figure(figsize=(12,12))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 1790,
        'selection_end': 1823,
        'selection_start': 1790,
        'zoom': 0},
                       loc('book/thermo.py'): {'attrib-starts': [],
        'code-line': 'class TestThermo(TestCase):\r\n',
        'first-line': 88,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1806,
        'selection_end': 3259,
        'selection_start': 1806,
        'zoom': 0},
                       loc('book/thermo_ising.py'): {'attrib-starts': [('read_data|0|',
        57)],
        'code-line': '    with open(file_name) as data_file:\r\n',
        'first-line': 46,
        'folded-linenos': [],
        'sel-line': 61,
        'sel-line-start': 2192,
        'selection_end': 2192,
        'selection_start': 2192,
        'zoom': 0},
                       loc('exam/Q1.py'): {'attrib-starts': [],
        'code-line': "'''Code from an old version of exam--2015. It appears to be used to check global balance'''\r\n",
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 721,
        'selection_end': 758,
        'selection_start': 758,
        'zoom': 0},
                       loc('exam/Q10.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 768,
        'selection_end': 768,
        'selection_start': 768,
        'zoom': 0},
                       loc('exam/Q11.py'): {'attrib-starts': [],
        'code-line': "'''Code from an old version of exam--2015.'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 721,
        'selection_end': 766,
        'selection_start': 721,
        'zoom': 0},
                       loc('exam/Q4-1.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 768,
        'selection_end': 768,
        'selection_start': 768,
        'zoom': 0},
                       loc('exam/Q4-2.py'): {'attrib-starts': [],
        'code-line': "'''Code from an old version of exam--2015.'''\r\n",
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 721,
        'selection_end': 766,
        'selection_start': 766,
        'zoom': 0},
                       loc('exam/Q7.py'): {'attrib-starts': [],
        'code-line': "'''Code from an old version of exam--2015. It appears to be checking global balance'''\r\n",
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 721,
        'selection_end': 796,
        'selection_start': 796,
        'zoom': 0},
                       loc('homework_1/exerciseC.py'): {'attrib-starts': [],
        'code-line': 'import random, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_1/exerciseC3.py'): {'attrib-starts': [],
        'code-line': 'import random, pylab, math\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_3/my_markov_disks.py'): {'attrib-starts': [],
        'code-line': '# $HeadURL: https://server/svn/sandbox/trunk/smac/homework_3/my_markov_disks.py $\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_5/markov_gauss_movie_a1.py'): {'attrib-starts': [],
        'code-line': '# Furthermore, the program should output the normed histogram of the particle\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 757,
        'selection_end': 768,
        'selection_start': 762,
        'zoom': 0},
                       loc('homework_6/plot_B1_beta0.1.txt'): {'attrib-starts': [],
        'code-line': '-6.307253827036236\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('homework_8/C2.py'): {'attrib-starts': [('show_spins|0|',
        2)],
        'code-line': '    pylab.tight_layout()\r\n',
        'first-line': 5,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 589,
        'selection_end': 604,
        'selection_start': 599,
        'zoom': 0},
                       loc('lecture_1/direct_pi.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 698,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_1/direct_pi_multirun.py'): {'attrib-starts': [],
        'code-line': "'''Compute pi using multiple runs of direct sampling'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 52,
        'selection_start': 3,
        'zoom': 0},
                       loc('lecture_1/markov_pi.py'): {'attrib-starts': [],
        'code-line': "'''Calculate pi using Markov Chain Monte Carlo'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 46,
        'selection_start': 3,
        'zoom': 0},
                       loc('lecture_1/markov_pi_multirun.py'): {'attrib-starts': [],
        'code-line': "''''Calculate pi using multiple runs of Markov Chain Monte Carlo'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 64,
        'selection_start': 4,
        'zoom': 0},
                       loc('lecture_1/pebble_basic.py'): {'attrib-starts': [],
        'code-line': 't        = 0\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 284,
        'selection_end': 293,
        'selection_start': 293,
        'zoom': 0},
                       loc('lecture_1/pebble_basic_inhomogeneous.py'): {'attrib-starts': [],
        'code-line': "'''Demonstrate neighbour table for MCMC-Algorithm 1.6 with inhomogeneous probabilities'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 86,
        'selection_start': 54,
        'zoom': 0},
                       loc('lecture_10/direct_gamma.py'): {'attrib-starts': [],
        'code-line': '    x       = uniform(0.0, 1.0)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 240,
        'selection_end': 296,
        'selection_start': 271,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average.py'): {'attrib-starts': [],
        'code-line': '    for step in range(n_steps // N):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 139,
        'selection_end': 173,
        'selection_start': 173,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average_movie.py'): {'attrib-starts': [],
        'code-line': "        ls = '--')\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 591,
        'selection_end': 604,
        'selection_start': 604,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average_rescaled.py'): {'attrib-starts': [],
        'code-line': 'gamma   = -0.8\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 28,
        'selection_end': 36,
        'selection_start': 36,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_average_rescaled_movie.py'): {'attrib-starts': [],
        'code-line': 'def pi_exact(x, gamma, c0, c1):\n',
        'first-line': 27,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 321,
        'selection_end': 352,
        'selection_start': 352,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_running.py'): {'attrib-starts': [],
        'code-line': 'for step in range(n_steps):\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 70,
        'selection_end': 82,
        'selection_start': 82,
        'zoom': 0},
                       loc('lecture_10/direct_gamma_running_movie.py'): {'attrib-starts': [],
        'code-line': 'import random, pylab\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_10/direct_needle.py'): {'attrib-starts': [],
        'code-line': 'from random import uniform\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_10/direct_needle_patch.py'): {'attrib-starts': [],
        'code-line': '    x_center = uniform(0.0, b * 0.5)\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 136,
        'selection_end': 166,
        'selection_start': 166,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box.py'): {'attrib-starts': [('direct_disks_box|0|',
        5)],
        'code-line': '                generatedLegal = False\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 514,
        'selection_end': 544,
        'selection_start': 530,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_a1.py'): {'attrib-starts': [],
        'code-line': 'from direct_disks_box import direct_disks_box\r\n',
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 80,
        'selection_end': 125,
        'selection_start': 80,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_movie.py'): {'attrib-starts': [],
        'code-line': 'from os                import makedirs\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 120,
        'selection_end': 158,
        'selection_start': 158,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_movie/0.png'): {'attrib-starts': [],
        'code-line': '\x89PNG\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_multirun.py'): {'attrib-starts': [],
        'code-line': "'''Direct sampling of disks in box, tabula rasa, multiple runs'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 62,
        'selection_start': 3,
        'zoom': 0},
                       loc('lecture_2/direct_disks_box_multirun_b1.py'): {'attrib-starts': [],
        'code-line': "    title(f'Direct sampling: x coordinate histogram (density eta={eta:3f})\\nProduced by {split(__file__)[-1]}')\r\n",
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 855,
        'selection_end': 966,
        'selection_start': 858,
        'zoom': 0},
                       loc('lecture_2/event_disks_box.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 2.1: event-driven molecular dynamics for hard disks in a box'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 24,
        'selection_start': 24,
        'zoom': 0},
                       loc('lecture_2/event_disks_box_a3.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 2.1: event-driven molecular dynamics for hard disks in a box'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 24,
        'selection_start': 24,
        'zoom': 0},
                       loc('lecture_2/event_disks_box_movie.py'): {'attrib-starts': [],
        'code-line': 'import os, math, pylab\r\n',
        'first-line': 21,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_2/markov_disks_box_a2.py'): {'attrib-starts': [('markov_step_box|0|',
        5)],
        'code-line': '    b = [a[0] + uniform(-delta, delta), a[1] + uniform(-delta, delta)]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 185,
        'selection_end': 232,
        'selection_start': 232,
        'zoom': 0},
                       loc('lecture_2/markov_disks_box_movie.py'): {'attrib-starts': [],
        'code-line': 'import random, os, pylab\r\n',
        'first-line': 6,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_3/direct_pins.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1:  direct sampling for N pins'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 48,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_3/direct_pins_improved.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1:  direct sampling for N pins'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 48,
        'selection_start': 48,
        'zoom': 0},
                       loc('lecture_3/direct_pins_movie.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1:  direct sampling for N pins'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 48,
        'selection_start': 48,
        'zoom': 0},
                       loc('lecture_3/direct_pins_noreject.py'): {'attrib-starts': [],
        'code-line': '    y = [uniform(0.0, L - 2 * N * sigma) for k in range(N)]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 164,
        'selection_end': 173,
        'selection_start': 173,
        'zoom': 0},
                       loc('lecture_3/direct_pins_noreject_movie.py'): {'attrib-starts': [],
        'code-line': "ylabel('$\\pi(x)$',\r\n",
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 412,
        'selection_end': 421,
        'selection_start': 420,
        'zoom': 0},
                       loc('lecture_5/matrix_square_harmonic.py'): {'attrib-starts': [],
        'code-line': '    rho = numpy.dot(rho, rho)\r\n',
        'first-line': 11,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 866,
        'selection_end': 910,
        'selection_start': 870,
        'zoom': 0},
                       loc('lecture_6/continuous_random_walk.py'): {'attrib-starts': [],
        'code-line': 'Construct path using a simple random walk (endpoint is not held fixed)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 75,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_free_path.py'): {'attrib-starts': [],
        'code-line': 'Simple eimplementation of Lévy Free Path Algorithm\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 36,
        'selection_start': 36,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path.py'): {'attrib-starts': [],
        'code-line': 'Simple Lévy path\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 22,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path_3D.py'): {'attrib-starts': [],
        'code-line': 'Lévy flight in 3D\r\n',
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 23,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/levy_harmonic_path_movie.py'): {'attrib-starts': [],
        'code-line': "ylabel('$\\\\tau$', fontsize=18)\r\n",
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 754,
        'selection_end': 770,
        'selection_start': 761,
        'zoom': 0},
                       loc('lecture_6/naive_harmonic_path.py'): {'attrib-starts': [],
        'code-line': 'Construct path using direct sanpling (inefficient)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 55,
        'selection_start': 5,
        'zoom': 0},
                       loc('lecture_6/naive_path_slice.py'): {'attrib-starts': [],
        'code-line': 'sigma = sqrt(1 / (1/dtau_prime+1/dtau_dprime))\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 878,
        'selection_end': 893,
        'selection_start': 893,
        'zoom': 0},
                       loc('lecture_6/naive_path_slice_movie.py'): {'attrib-starts': [],
        'code-line': '    data_hist.append(xk)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 1149,
        'selection_end': 1173,
        'selection_start': 1173,
        'zoom': 0},
                       loc('lecture_6/trivial_free_path.py'): {'attrib-starts': [],
        'code-line': '                                 #Lévy free path see the same sequence of random numbers\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 563,
        'selection_end': 631,
        'selection_start': 631,
        'zoom': 0},
                       loc('lecture_8/cluster_ising.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 20,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/cluster_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/energy_ising.py'): {'attrib-starts': [],
        'code-line': '#!/usr/bin/env python\r\n',
        'first-line': 17,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising.py'): {'attrib-starts': [('gray_flip|0|',
        17)],
        'code-line': '        N     Lenght of t\r\n',
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 810,
        'selection_end': 830,
        'selection_start': 830,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising_mod.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/enumerate_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/gray.py'): {'attrib-starts': [('create_gray_codes|0|',
        21)],
        'code-line': '        Returns: A list, each element being a binary number.\r\n',
        'first-line': 19,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 876,
        'selection_end': 936,
        'selection_start': 936,
        'zoom': 0},
                       loc('lecture_8/markov_ising.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/markov_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('lecture_8/spin_config_0000.png'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('lecture_8/thermo_ising.py'): {'attrib-starts': [],
        'code-line': 'list_T = [0.5 + 0.5 * i for i in range(8)]\r\n',
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1068,
        'selection_end': 1108,
        'selection_start': 1108,
        'zoom': 0},
                       loc('lecture_8/thermo_ising_movie.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('levy-convolution.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 400,
        'selection_end': 464,
        'selection_start': 464,
        'zoom': 0},
                       loc('t'): {'attrib-starts': [],
                                  'code-line': '\x1b[1mdiff --git a/README.md b/README.md\x1b[m\n',
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0,
                                  'zoom': 0},
                       loc('tutorial_1/pebble_basic.py'): {'attrib-starts': [],
        'code-line': 'import random\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_basic_multirun.py'): {'attrib-starts': [],
        'code-line': "'''Move pebble using neighbour table from Table 1.3'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_dual_eigen.py'): {'attrib-starts': [],
        'code-line': "'''Two games: Illustrate conversion of reducible matrix to irreducible, aperiodoc to make motion ergodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 107,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_dual_movie.py'): {'attrib-starts': [],
        'code-line': "'''Two games: Illustrate conversion of reducible matrix to irreducible, aperiodic to make motion ergodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 81,
        'selection_start': 81,
        'zoom': 0},
                       loc('tutorial_1/pebble_multirun_all_histogram.py'): {'attrib-starts': [],
        'code-line': '    extent = [yedges[0], yedges[-1], xedges[-1], xedges[0]]\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 34,
        'sel-line-start': 1164,
        'selection_end': 1174,
        'selection_start': 1168,
        'zoom': 0},
                       loc('tutorial_1/pebble_multirun_histogram.py'): {'attrib-starts': [],
        'code-line': 'import random\r\n',
        'first-line': 9,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_recurrent_eigen.py'): {'attrib-starts': [],
        'code-line': "'''Dual pebble: make aperiodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 33,
        'selection_start': 0,
        'zoom': 0},
                       loc('tutorial_1/pebble_recurrent_movie.py'): {'attrib-starts': [],
        'code-line': "'''Dual pebble: make aperiodic'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 33,
        'selection_start': 33,
        'zoom': 0},
                       loc('tutorial_1/pebble_transfer.py'): {'attrib-starts': [],
        'code-line': 'neighbor =  [[1, 3, 0, 0], [2, 4, 0, 1], [2, 5, 1, 2],\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 124,
        'selection_end': 178,
        'selection_start': 178,
        'zoom': 0},
                       loc('tutorial_1/pebble_transfer_eigen.py'): {'attrib-starts': [],
        'code-line': "'''Eigenvalues and eigenvectiors of transfer matrix, illustrating speed of convergence'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 86,
        'selection_start': 3,
        'zoom': 0},
                       loc('tutorial_1/pebble_transfer_sub.py'): {'attrib-starts': [],
        'code-line': "'''Model Monte Carlo simulation as a transfer matrix; subtract equilibrium value to show speed of convergence'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 109,
        'selection_start': 3,
        'zoom': 0},
                       loc('tutorial_3/direct_pins.py'): {'attrib-starts': [],
        'code-line': "'''Algorithm 6.1: direct sampling'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4,
        'zoom': 0},
                       loc('tutorial_3/direct_pins_density.py'): {'attrib-starts': [('pi|0|',
        16)],
        'code-line': '    return sum([binomialCoeff( N - 1, k) * Z(k, x - sigma, sigma) * Z(N - k - 1, L - x - sigma, sigma) for k in range(0, N)]) / Z(N, L, sigma)\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 419,
        'selection_end': 419,
        'selection_start': 419,
        'zoom': 0},
                       loc('tutorial_4/naive_ran.py'): {'attrib-starts': [],
        'code-line': 'm = 134456\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 6,
        'selection_start': 4,
        'zoom': 0},
                       loc('tutorial_6/naive_boson_trap.py'): {'attrib-starts': [],
        'code-line': 'beta     = 1.0\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 144,
        'selection_end': 144,
        'selection_start': 144,
        'zoom': 0},
                       loc('tutorial_6/naive_single_particle.py'): {'attrib-starts': [],
        'code-line': "'''Enumerate states for Bosons, i.e. indistinguisgable particles'''\r\n",
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 64,
        'selection_start': 3,
        'zoom': 0},
                       loc('utils/backends.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 700,
        'selection_end': 700,
        'selection_start': 700,
        'zoom': 0},
                       loc('utils/walker.py'): {'attrib-starts': [],
        'code-line': "for root,d,files in walk('.'):\r\n",
        'first-line': 20,
        'folded-linenos': [],
        'sel-line': 36,
        'sel-line-start': 1035,
        'selection_end': 1043,
        'selection_start': 1039,
        'zoom': 0},
                       loc('walker.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0,
        'zoom': 0}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [''])}
search.replace-history = ['correlation_times',
                          ', ',
                          ' = ',
                          'args.gammas',
                          'gist_rainbow',
                          'm',
                          'ax',
                          'accepted_moves',
                          'cV',
                          'energies',
                          'E,M = g',
                          'array',
                          'np.savez',
                          'np.load',
                          'np.array',
                          'X_proposed',
                          'geometry',
                          'Geometry',
                          'value',
                          'ax4']
search.search-history = ['lower',
                         'ct',
                         ',',
                         'is_within',
                         'is',
                         'move_to',
                         'move_',
                         'move',
                         'mo',
                         'create_configuration',
                         'test',
                         'pi',
                         '=',
                         'gammas',
                         'pad',
                         'get_hits',
                         'vectorize',
                         'jet',
                         'args.m',
                         '$']
